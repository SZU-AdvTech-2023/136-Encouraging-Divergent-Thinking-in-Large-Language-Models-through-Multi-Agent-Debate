{"0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Alameda'"}
{"1": "SELECT frpm.`Percent (%) Eligible Free (Ages 5-17)`\nFROM frpm\nWHERE frpm.`District Type` = 'Continuation'\nORDER BY frpm.`Percent (%) Eligible Free (Ages 5-17)` ASC\nLIMIT 3"}
{"2": "SELECT schools.Zip\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE schools.County = 'Fresno County Office of Education'\nAND schools.Charter = 1"}
{"3": "SELECT schools.MailStreet || ', ' || schools.MailCity || ', ' || schools.MailState || ' ' || schools.MailZip AS MailingAddress\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nORDER BY frpm.[FRPM Count (K-12)] DESC\nLIMIT 1;"}
{"4": "SELECT schools.Phone\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE schools.OpenDate > '2000-01-01'\nAND frpm.`Charter School (Y/N)` = 1\nAND schools.`Charter` = 1"}
{"5": "SELECT COUNT(*) FROM satscores WHERE AvgScrMath < 400 AND Virtual = 'F'"}
{"6": "SELECT satscores.sname\nFROM satscores\nINNER JOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.NumTstTakr > 500\nAND (schools.Magnet = 1 OR schools.Magnet IS NOT NULL)"}
{"7": "SELECT schools.Phone FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr > 1500 ORDER BY satscores.NumTstTakr DESC LIMIT 1;"}
{"8": "SELECT satscores.NumTstTakr AS \"Number of SAT Test Takers\"\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE frpm.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)"}
{"9": "SELECT COUNT(DISTINCT frpm.CDSCode)\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nJOIN satscores ON satscores.cds = schools.CDSCode\nWHERE satscores.AvgScrMath > 560 AND schools.Charter = 1"}
{"10": "SELECT frpm.\"FRPM Count (Ages 5-17)\"\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE satscores.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)"}
{"11": "SELECT frpm.CDSCode\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE (schools.[Enrollment (K-12)] + schools.[Enrollment (Ages 5-17)]) > 500"}
{"12": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE (`NumGE1500` / `NumTstTakr`) > 0.3"}
{"13": "SELECT schools.Phone\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nORDER BY (satscores.NumGE1500 / satscores.NumTstTakr) DESC\nLIMIT 3;"}
{"14": "SELECT schools.NCESSchool\nFROM schools\nORDER BY schools.[Enrollment (Ages 5-17)] DESC\nLIMIT 5"}
{"15": "SELECT schools.District\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.StatusType = 'Active'\nORDER BY satscores.AvgScrRead DESC\nLIMIT 1"}
{"16": "SELECT COUNT(*) FROM schools WHERE County = 'Alameda' AND StatusType = 'Merged' AND CDSCode IN (SELECT cds FROM satscores WHERE NumTstTakr < 100)"}
{"17": "SELECT schools.CharterNum\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.AvgScrWrite = 499"}
{"18": "SELECT COUNT(*) FROM schools WHERE County = 'Contra Costa' AND FundingType = 'Direct' AND NumTstTakr <= 250;"}
{"19": "SELECT schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.AvgScrMath DESC\nLIMIT 1"}
{"20": "SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND [Low Grade] = '9' AND [High Grade] = '12'"}
{"21": "SELECT COUNT(*) FROM schools WHERE County = 'Los Angeles' AND [Free Meal Count (K-12)] > 500 AND [FRPM Count (K-12)] < 700"}
{"22": "SELECT satscores.sname\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Contra Costa'\nORDER BY satscores.NumTstTakr DESC\nLIMIT 1"}
{"23": "SELECT schools.\"School\", schools.\"Street\"\nFROM schools\nWHERE (schools.\"Enrollment (K-12)\" - schools.\"Enrollment (Ages 5-17)\") > 30"}
{"24": "SELECT satscores.sname\nFROM satscores\nJOIN frpm ON satscores.cds = frpm.CDSCode\nWHERE frpm.[Percent (%) Eligible Free (K-12)] > 0.1\nAND (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) >= 1500"}
{"25": "SELECT schools.School, schools.FundingType\nFROM schools\nJOIN satscores ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Riverside'\nGROUP BY schools.School\nHAVING AVG(satscores.AvgScrMath) > 400"}
{"26": "SELECT\nschools.School AS \"School Name\",\nschools.Street || ', ' || schools.City || ', ' || schools.State || ' ' || schools.Zip AS \"Full Communication Address\"\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE schools.GSserved LIKE '%9-12%'\nAND frpm.[Free Meal Count (Ages 5-17)] > 800\nAND schools.County = 'Monterey'"}
{"27": "SELECT satscores.sname, satscores.AvgScrWrite, schools.Phone\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.OpenDate > '1991-01-01' OR schools.ClosedDate < '2000-12-31'\nGROUP BY satscores.sname, satscores.AvgScrWrite, schools.Phone"}
{"28": "SELECT schools.\"School\", schools.\"DOCType\"\nFROM schools\nWHERE schools.\"FundingType\" = \"Locally Funded\"\nAND (schools.\"Enrollment (K-12)\" - schools.\"Enrollment (Ages 5-17)\") > (\n  SELECT AVG(s.\"Enrollment (K-12)\" - s.\"Enrollment (Ages 5-17)\")\n  FROM schools s\n  WHERE s.\"FundingType\" = \"Locally Funded\"\n)"}
{"29": "SELECT OpenDate\nFROM schools\nWHERE GSoffered = 'K-12'\nORDER BY Enroll12 DESC\nLIMIT 1;"}
{"30": "SELECT schools.City\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nJOIN satscores ON satscores.cds = schools.CDSCode\nWHERE schools.GSserved LIKE '%1-12%'\nORDER BY schools.enroll12 ASC\nLIMIT 5;"}
{"31": "SELECT frpm.`Percent (%) Eligible Free (K-12)` AS `Eligible Free Rate`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.`GSoffered` LIKE '%10%' OR schools.`GSoffered` LIKE '%11%'\nORDER BY schools.`Enrollment (K-12)` DESC\nLIMIT 10"}
{"32": "SELECT frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)` AS `Eligible Free or Reduced Price Meal Rate`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.`DOC` = '66'\nAND schools.`GSoffered` = 'K-12'\nORDER BY frpm.`FRPM Count (K-12)` DESC\nLIMIT 5"}
{"33": "SELECT schools.Website, schools.School\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.`Free Meal Count (Ages 5-17)` >= 1900 AND frpm.`Free Meal Count (Ages 5-17)` <= 2000"}
{"34": "SELECT frpm.`Free Meal Count (Ages 5-17)` / schools.`Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.`School Name` = 'Kacey Gibson'"}
{"35": "SELECT schools.AdmEmail1\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.\"Charter School (Y/N)\" = 1\nORDER BY frpm.\"Enrollment (K-12)\"\nLIMIT 1;"}
{"36": "SELECT schools.AdmFName1 || ' ' || schools.AdmLName1 AS Full_Name\nFROM schools\nJOIN satscores ON satscores.cds = schools.CDSCode\nWHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)"}
{"37": "SELECT schools.Street, schools.City, schools.Zip, schools.State\nFROM schools\nJOIN satscores ON satscores.cds = schools.CDSCode\nWHERE (satscores.NumGE1500 / satscores.NumTstTakr) = (\n  SELECT MIN(NumGE1500 / NumTstTakr)\n  FROM satscores\n)\nLIMIT 1;"}
{"38": "SELECT schools.Website\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.County = 'Los Angeles County' AND satscores.NumTstTakr >= 2000 AND satscores.NumTstTakr <= 3000"}
{"39": "SELECT AVG(NumTstTakr)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.City = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'"}
{"40": "SELECT schools.Phone\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE schools.District = 'Fresno Unified'\nAND satscores.AvgScrRead = (\n    SELECT MIN(AvgScrRead)\n    FROM satscores\n    JOIN schools ON schools.CDSCode = satscores.cds\n    WHERE schools.District = 'Fresno Unified'\n)\nLIMIT 1;"}
{"41": "SELECT satscores.sname\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.Virtual = 'F'\nORDER BY satscores.AvgScrRead DESC\nLIMIT 5"}
{"42": "SELECT schools.EdOpsName\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.AvgScrMath DESC\nLIMIT 1"}
{"43": "SELECT\n  satscores.AvgScrMath,\n  schools.County\nFROM\n  satscores\nJOIN\n  schools ON satscores.cds = schools.CDSCode\nORDER BY\n  (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite) / 3 ASC\nLIMIT 1"}
{"44": "SELECT satscores.AvgScrWrite\nFROM satscores\nWHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)"}
{"45": "SELECT\ns.school AS School,\nAVG(s.AvgScrWrite) AS Average_Writing_Score\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmLName1 = 'Ulrich' AND s.AdmFName1 = 'Ricci'\nGROUP BY s.school"}
{"46": "SELECT schools.State, COUNT(schools.CDSCode) AS Enrollees\nFROM schools\nWHERE schools.DOC = 31 AND schools.GSserved = 'K-12'\nGROUP BY schools.State\nORDER BY Enrollees DESC;"}
{"47": "SELECT COUNT(schools.CDSCode) / 12\nFROM schools\nWHERE County = 'Alameda' AND DOC = 52 AND strftime('%Y', OpenDate) = '1980'"}
{"48": "SELECT COUNT(DISTINCT s1.CDSCode) / COUNT(DISTINCT s2.CDSCode)\nFROM schools s1\nJOIN schools s2 ON s1.CDSCode = s2.CDSCode\nJOIN frpm f ON s1.CDSCode = f.CDSCode\nWHERE s1.DOC = 54 AND s2.DOC = 52 AND s1.County = 'Orange County' AND s2.County = 'Orange County'"}
{"49": "SELECT schools.County, schools.School, schools.ClosedDate\nFROM schools\nWHERE schools.StatusType = 'Closed'\nGROUP BY schools.County\nHAVING COUNT(schools.School) = (\n    SELECT MAX(closed_school_count)\n    FROM (\n        SELECT COUNT(schools.School) as closed_school_count\n        FROM schools\n        WHERE schools.StatusType = 'Closed'\n        GROUP BY schools.County\n    )\n);"}
{"50": "SELECT schools.Street\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.AvgScrMath DESC\nLIMIT 1 OFFSET 5"}
{"51": "SELECT schools.MailStreet, schools.\"School Name\"\nFROM schools\nJOIN satscores ON schools.CDSCode = satscores.cds\nWHERE satscores.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\nLIMIT 1;"}
{"52": "SELECT COUNT(*)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE NumGE1500 >= 1500\nAND MailCity = 'Lakeport'"}
{"53": "SELECT COUNT(satscores.NumTstTakr)\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.MailCity = 'Fresno'"}
{"54": "SELECT schools.School, schools.MailZip\nFROM schools\nWHERE schools.AdmFName1 = 'Avetik' AND schools.AdmLName1 = 'Atoian'"}
{"55": "SELECT (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Colusa' AND CDSCode IN (SELECT CDSCode FROM frpm)) / (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Humboldt' AND CDSCode IN (SELECT CDSCode FROM frpm)) AS ratio"}
{"56": "SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'San Joaquin' AND StatusType = 'Active'"}
{"57": "SELECT schools.Phone, schools.Ext\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nORDER BY satscores.AvgScrWrite DESC\nLIMIT 1 OFFSET 332;"}
{"58": "SELECT schools.Phone, schools.Ext, schools.School FROM schools WHERE schools.Zip = '95203-3704'"}
{"59": "SELECT schools.Website\nFROM schools\nWHERE (schools.AdmFName1 = 'Mike' AND schools.AdmLName1 = 'Larson')\nOR (schools.AdmFName1 = 'Dante' AND schools.AdmLName1 = 'Alvarez')"}
{"60": "SELECT schools.Website\nFROM schools\nWHERE schools.Virtual = 'P' AND schools.Charter = 1 AND schools.County = 'San Joaquin'"}
{"61": "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND DOC = 52 AND Charter = 1"}
{"62": "SELECT COUNT(*) FROM schools WHERE County = 'Los Angeles' AND Charter = 0 AND (`Free Meal Count (K-12)` / `Enrollment (K-12)`) < 0.0018"}
{"63": "SELECT schools.\"School\", schools.\"City\", schools.\"AdmFName1\" || ' ' || schools.\"AdmLName1\" AS \"Administrator Name\"\nFROM schools\nWHERE schools.\"Charter\" = 1 AND schools.\"CharterNum\" = '00D2'"}
{"64": "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND CharterNum = '00D4'"}
{"65": "SELECT (COUNT(*) * 100 / (SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara')) AS Ratio FROM schools WHERE County = 'Santa Clara' AND FundingType = 'Locally Funded'"}
{"66": "SELECT COUNT(*) FROM schools WHERE County = 'Stanislaus' AND FundingType = 'Directly Funded' AND OpenDate >= '2000-01-01' AND OpenDate < '2006-01-01'"}
{"67": "SELECT COUNT(*) FROM schools WHERE ClosedDate = '1989-01-01' AND City = 'San Francisco' AND SOCType = 'Community College District'"}
{"68": "SELECT schools.County FROM schools WHERE schools.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND schools.SOC = '11' GROUP BY schools.County ORDER BY COUNT(schools.ClosedDate) DESC LIMIT 1"}
{"69": "SELECT schools.NCESDist\nFROM schools\nWHERE schools.SOC = 31"}
{"70": "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND StatusType IN ('Active', 'Closed') AND EdOpsName = 'District Community Day School'"}
{"71": "SELECT frpm.\"District Code\"\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.City = 'Fresno'\nAND schools.Magnet = 0"}
{"72": "SELECT SUM([Enrollment (Ages 5-17)])\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.[School Name] = 'State Special School'\nAND frpm.[Academic Year] = '2014-2015'\nAND schools.[EdOpsCode] = 'SSS'"}
{"73": "SELECT frpm.[Free Meal Count (Ages 5-17)]\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.School = 'Youth Authority School'\nAND schools.MailStreet = 'PO Box 1040'"}
{"74": "SELECT MIN(schools.GSoffered)\nFROM schools\nWHERE schools.NCESDist = '613360' AND schools.EdOpsCode = 'SPECON'"}
{"75": "SELECT schools.EILName\nFROM schools\nWHERE schools.County = '37' AND schools.EdOpsName = 'Breakfast Provision 2'"}
{"76": "SELECT schools.City\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.EILCode = 'HS' AND frpm.[NSLP Provision Status] = 'Lunch Provision 2' AND schools.County = 'Merced' AND schools.[Low Grade] = '9' AND schools.[High Grade] = '12'"}
{"77": "SELECT schools.School, schools.GSserved, frpm.PercentEligibleFRPM_Ages517\nFROM schools\nJOIN frpm ON frpm.CDSCode = schools.CDSCode\nWHERE schools.County = 'Los Angeles'\nAND schools.GSserved = 'K-9'"}
{"78": "SELECT schools.GSserved, COUNT(*) AS count\nFROM schools\nWHERE schools.City = 'Adelanto'\nGROUP BY schools.GSserved\nORDER BY count DESC\nLIMIT 1"}
{"79": "SELECT County, COUNT(*) AS SchoolCount\nFROM schools\nWHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F'\nGROUP BY County\nORDER BY SchoolCount DESC\nLIMIT 1"}
{"80": "SELECT schools.\"School Type\", schools.\"School Name\", schools.Latitude\nFROM schools\nWHERE schools.Latitude = (SELECT MAX(Latitude) FROM schools)"}
{"81": "SELECT schools.City\nFROM schools\nWHERE schools.State = 'CA'\nORDER BY schools.Latitude ASC\nLIMIT 1"}
{"82": "SELECT GSoffered\nFROM schools\nORDER BY Longitude DESC\nLIMIT 1"}
{"83": "SELECT \n    COUNT(DISTINCT schools.City) AS Number_of_Cities,\n    COUNT(DISTINCT schools.CDSCode) AS Number_of_Schools\nFROM schools\nWHERE schools.GSserved = 'K-8'\n    AND schools.Magnet = 1\n    AND schools.EdOpsCode = 'M'\n    AND schools.SOCType = 'Multiple Provision Types'"}
{"84": "SELECT schools.AdmFName1, schools.District\nFROM schools\nGROUP BY schools.AdmFName1\nORDER BY COUNT(*) DESC\nLIMIT 2"}
{"85": "SELECT frpm.`Percent (%) Eligible Free (K-12)`, frpm.`District Code`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'"}
{"86": "SELECT schools.AdmLName1, schools.District, schools.County, schools.School\nFROM schools\nWHERE schools.CharterNum = '40'"}
{"87": "SELECT schools.AdmEmail1\nFROM schools\nWHERE schools.County = 'San Bernardino' AND\nschools.District = 'San Bernardino City Unified' AND\nschools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND\n(schools.SOC = 62 OR schools.DOC = 54) AND\n(schools.EdOpsName = 'Intermediate/Middle Schools' OR schools.EdOpsName = 'Unified Schools')"}
{"88": "SELECT schools.AdmEmail1\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE satscores.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)"}
{"89": "SELECT COUNT(*)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE account.date > trans.date\nAND district.A3 = 'East Bohemia'\nAND account.frequency = 'POPLATEK PO OBRATU'"}
{"90": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A3 = 'Prague'\nAND account.account_id IN (SELECT account_id FROM loan)"}
{"91": "SELECT CASE WHEN AVG(A12) > AVG(A13) THEN '1995' WHEN AVG(A12) < AVG(A13) THEN '1996' ELSE 'Equal' END AS higher_percentage FROM district"}
{"92": "SELECT COUNT(DISTINCT district_id)\nFROM district\nWHERE A11 > 6000 AND A11 < 10000 \nAND district_id IN (\n  SELECT district_id\n  FROM client\n  WHERE gender = 'F'\n)"}
{"93": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000"}
{"94": "SELECT account.account_id\nFROM account\nJOIN client ON account.client_id = client.client_id\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F'\nAND client.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n    WHERE gender = 'F'\n)\nAND district.A11 = (\n    SELECT MIN(A11)\n    FROM district\n    JOIN client ON district.district_id = client.district_id\n    WHERE gender = 'F'\n)"}
{"95": "SELECT account.account_id\nFROM client\nJOIN account ON client.client_id = account.client_id\nWHERE client.birth_date = (SELECT MIN(birth_date) FROM client)\nAND client.client_id IN (SELECT client_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district))"}
{"96": "SELECT COUNT(DISTINCT client.client_id)\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nWHERE account.frequency = 'POPLATEK TYDNE'\nAND disp.type = 'OWNER'"}
{"97": "SELECT client.client_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'DISPONENT'\nAND account.frequency = 'POPLATEK PO OBRATU'"}
{"98": "SELECT account_id\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.date LIKE '1997%'\nAND loan.amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE date LIKE '1997%'\n)\nAND account.frequency = 'POPLATEK TYDNE';"}
{"99": "SELECT account_id\nFROM loan\nWHERE duration > 12\nAND strftime('%Y', date) = '1993'\nORDER BY amount DESC\nLIMIT 1"}
{"100": "SELECT COUNT(DISTINCT client.client_id)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Slokolov'"}
{"101": "SELECT account_id FROM account WHERE strftime('%Y', date) = '1995' ORDER BY date ASC LIMIT 1;"}
{"102": "SELECT DISTINCT a.account_id\nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nWHERE a.date < '1997-01-01' AND t.amount > 3000"}
{"103": "SELECT client.client_id\nFROM client\nJOIN (card JOIN disp ON card.card_id = disp.card_id) ON client.client_id = disp.client_id\nWHERE card.issued = '1994-03-03'"}
{"104": "SELECT account.date\nFROM account\nJOIN trans ON account.account_id = trans.account_id\nWHERE trans.amount = 840 AND trans.date = '1998-10-14'\nAND account.date <= '1998-10-14'\nORDER BY account.date DESC\nLIMIT 1"}
{"105": "SELECT account.district_id\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.date = '1994-08-25'"}
{"106": "SELECT MAX(amount) FROM trans JOIN card ON trans.account_id = card.disp_id WHERE card.issued = '1996-10-21'"}
{"107": "SELECT client.gender\nFROM client\nJOIN account ON client.client_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE account.date = (\n    SELECT MIN(date)\n    FROM account\n)\nAND district.A11 = (\n    SELECT MAX(A11)\n    FROM district\n)"}
{"108": "SELECT trans.amount\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.amount = (SELECT MAX(amount) FROM loan)\nORDER BY trans.date ASC\nLIMIT 1"}
{"109": "SELECT COUNT(DISTINCT client.client_id)\nFROM client\nJOIN account ON client.client_id = account.client_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Jesenik'\nAND client.gender = 'F'"}
{"110": "SELECT disp.disp_id\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nWHERE trans.amount = 5100 AND trans.date = '1998-09-02'"}
{"111": "SELECT COUNT(account_id) AS num_accounts\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Litomerice'\nAND strftime('%Y', account.date) = '1996'"}
{"112": "SELECT district.A2\nFROM client\nJOIN account ON client.client_id = account.client_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F' AND client.birth_date = '1976-01-29'"}
{"113": "SELECT client.birth_date\nFROM client\nJOIN loan ON client.client_id = loan.account_id\nWHERE loan.amount = 98832 AND loan.date = '1996-01-03'"}
{"114": "SELECT account_id\nFROM account\nJOIN client ON account.account_id = client.client_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Prague'\nORDER BY account.date\nLIMIT 1;"}
{"115": "SELECT (COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'south Bohemia' AND A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')))) AS percentage_of_male_clients FROM client WHERE gender = 'M' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'south Bohemia' AND A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia'));"}
{"116": "SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate\nFROM trans AS t1\nJOIN trans AS t2 ON t1.account_id = t2.account_id\nWHERE t1.account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1)\nAND t1.date = '1993-03-22'\nAND t2.date = '1998-12-27'"}
{"117": "SELECT (100 * SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) AS percentage_of_loan_paid_with_no_issue FROM loan"}
{"118": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM account) AS percentage\nFROM account\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.amount < 100000 AND loan.status = 'C'"}
{"119": "SELECT account.account_id, district.A2, district.A3\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE account.date LIKE '1993%' AND account.frequency = 'POPLATEK PO OBRATU'"}
{"120": "SELECT account.account_id, account.frequency\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A3 = 'east Bohemia'\nAND account.date >= '1995-01-01'\nAND account.date <= '2000-12-31'"}
{"121": "SELECT account_id, date FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Prachatice'"}
{"122": "SELECT district.A2 AS district, district.A3 AS region\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE loan.loan_id = 4990;"}
{"123": "SELECT account.account_id, district.A2 AS district, district.A3 AS region\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.amount > 300000;"}
{"124": "SELECT loan.loan_id, district.A3, district.A11\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE loan.duration = 60;"}
{"125": "SELECT district.A2 AS district_name, ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_rate_increment FROM loan JOIN account ON loan.account_id = account.account_id JOIN client ON account.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE loan.status = 'D'"}
{"126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Decin')) AS percentage\nFROM account\nWHERE strftime('%Y', date) = '1993' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Decin')"}
{"127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'"}
{"128": "SELECT district.A2 AS district_name, COUNT(client.client_id) AS female_account_holders\nFROM district\nJOIN client ON district.district_id = client.district_id\nWHERE client.gender = 'F'\nGROUP BY district.district_id\nORDER BY female_account_holders DESC\nLIMIT 10"}
{"129": "SELECT district.A2 AS district_name, SUM(trans.amount) AS total_withdrawals\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE trans.type = 'VYDAJ' AND trans.date LIKE '1996-01%'\nGROUP BY district_name\nORDER BY total_withdrawals DESC\nLIMIT 10;"}
{"130": "SELECT COUNT(DISTINCT account.client_id)\nFROM account\nJOIN client ON account.client_id = client.client_id\nJOIN district ON account.district_id = district.district_id\nLEFT JOIN card ON account.account_id = card.disp_id\nWHERE district.A3 = 'South Bohemia'\nAND card.card_id IS NULL"}
{"131": "SELECT district.A3 AS district_name\nFROM district\nJOIN account ON account.district_id = district.district_id\nJOIN loan ON loan.account_id = account.account_id\nWHERE loan.status = 'C' OR loan.status = 'D'\nGROUP BY district.district_id\nORDER BY COUNT(loan.loan_id) DESC\nLIMIT 1;"}
{"132": "SELECT AVG(amount) AS average_loan_amount\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN client ON account.client_id = client.client_id\nWHERE client.gender = 'M'"}
{"133": "SELECT district.A2 AS district_name, district.A5 AS branch_location\nFROM district\nWHERE district.A13 = (\n    SELECT MAX(A13)\n    FROM district\n    WHERE A13 IS NOT NULL\n)"}
{"134": "SELECT COUNT(account_id) AS num_accounts\nFROM account\nWHERE district_id = (\n    SELECT district_id\n    FROM district\n    WHERE A16 = (\n        SELECT MAX(A16)\n        FROM district\n    )\n)"}
{"135": "SELECT COUNT(DISTINCT account.account_id) AS num_accounts\nFROM account\nJOIN trans ON account.account_id = trans.account_id\nJOIN card ON card.disp_id = trans.account_id\nWHERE trans.operation = 'VYBER KARTOU'\nAND account.frequency = 'POPLATEK MESICNE'\nAND trans.balance < 0"}
{"136": "SELECT COUNT(DISTINCT loan.account_id) AS loan_count\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.amount >= 250000\nAND account.frequency = 'POPLATEK MESICNE'\nAND loan.date BETWEEN '1995-01-01' AND '1997-12-31'"}
{"137": "SELECT COUNT(*)\nFROM account\nWHERE district_id = 1\nAND status IN ('C', 'D')"}
{"138": "SELECT COUNT(client_id) AS male_clients\nFROM client\nWHERE district_id = (\n    SELECT district_id\n    FROM (\n        SELECT district_id, RANK() OVER (ORDER BY A15 DESC) AS crime_rank\n        FROM district\n    ) AS ranked_districts\n    WHERE crime_rank = 2\n) AND gender = 'M'"}
{"139": "SELECT COUNT(*)\nFROM card\nJOIN disp ON card.card_id = disp.card_id\nWHERE disp.type = 'DISPONENT' AND card.type = 'gold'"}
{"140": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek')"}
{"141": "SELECT district.A2\nFROM district\nJOIN account ON account.district_id = district.district_id\nJOIN trans ON trans.account_id = account.account_id\nWHERE trans.date BETWEEN '1997-01-01' AND '1997-12-31'\nGROUP BY district.A2\nHAVING SUM(trans.amount) > 10000;"}
{"142": "SELECT account.account_id\nFROM account\nJOIN order ON account.account_id = order.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Pisek'\nAND order.k_symbol = 'SIPO'"}
{"143": "SELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type IN ('gold', 'junior')\nGROUP BY account.account_id\nHAVING COUNT(DISTINCT card.type) = 2"}
{"144": "SELECT AVG(trans.amount) AS average_amount\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE trans.operation = 'VYBER KARTOU'\nAND strftime('%Y', trans.date) = '2021'"}
{"145": "SELECT\n  client.client_id\nFROM\n  account\nJOIN\n  disp\n  ON account.account_id = disp.account_id\nJOIN\n  card\n  ON disp.disp_id = card.disp_id\nJOIN\n  trans\n  ON account.account_id = trans.account_id\nWHERE\n  trans.operation = 'VYBER KARTOU'\n  AND strftime('%Y', trans.date) = '1998'\nGROUP BY\n  client.client_id\nHAVING\n  SUM(trans.amount) / 12 < (SELECT AVG(total_spent) FROM (SELECT client.client_id, SUM(trans.amount) AS total_spent FROM account\n  JOIN disp ON account.account_id = disp.account_id\n  JOIN card ON disp.disp_id = card.disp_id\n  JOIN trans ON account.account_id = trans.account_id\n  WHERE trans.operation = 'VYBER KARTOU'\n    AND strftime('%Y', trans.date) = '1998'\n  GROUP BY client.client_id))"}
{"146": "SELECT client.client_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN account ON disp.account_id = account.account_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE client.gender = 'F'"}
{"147": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'F' AND district.A3 = 'south Bohemia'"}
{"148": "SELECT account.account_id\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN disp ON account.account_id = disp.account_id\nWHERE district.A2 = 'Tabor'\nAND disp.type = 'OWNER'"}
{"149": "SELECT account.type\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE account.type != 'OWNER' AND district.A11 > 8000 AND district.A11 <= 9000"}
{"150": "SELECT COUNT(DISTINCT account.account_id)\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN trans ON account.account_id = trans.account_id\nWHERE district.A3 = 'North Bohemia'\nAND trans.bank = 'AB'"}
{"151": "SELECT district.A2 FROM district JOIN account ON account.district_id = district.district_id JOIN trans ON trans.account_id = account.account_id WHERE trans.type = 'VYBER'"}
{"152": "SELECT AVG(A15) AS average_number_of_crimes_1995\nFROM district\nWHERE A15 > 4000 AND district_id IN (\n  SELECT district_id\n  FROM account\n  JOIN client ON account.client_id = client.client_id\n  WHERE strftime('%Y', account.date) >= '1997'\n)"}
{"153": "SELECT COUNT(DISTINCT card.card_id) FROM card JOIN disp ON card.card_id = disp.card_id JOIN account ON disp.account_id = account.account_id WHERE card.type = 'classic' AND disp.type = 'OWNER'."}
{"154": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M' AND district.A2 = 'Hl.m. Praha'"}
{"155": "SELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM card) FROM card WHERE type = 'gold' AND issued < '1998-01-01'"}
{"156": "SELECT client.client_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.amount = (SELECT MAX(amount) FROM loan)"}
{"157": "SELECT A15 FROM district JOIN account ON account.district_id = district.district_id WHERE account.account_id = 532"}
{"158": "SELECT district.district_id\nFROM account\nJOIN \"order\" ON account.account_id = \"order\".account_id\nWHERE \"order\".order_id = 33333;"}
{"159": "SELECT *\nFROM trans\nWHERE account_id IN (\n  SELECT account_id\n  FROM disp\n  WHERE client_id = 3356\n)\nAND operation = 'VYBER'"}
{"160": "SELECT COUNT(*) FROM account JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000"}
{"161": "SELECT card.type\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE client.client_id = 13539"}
{"162": "SELECT district.A3\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.client_id = 3541;"}
{"163": "SELECT district.A2\nFROM account\nJOIN district ON account.district_id = district.district_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.status = 'A'\nGROUP BY account.district_id\nORDER BY COUNT(*) DESC\nLIMIT 1"}
{"164": "SELECT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN \"order\" o ON a.account_id = o.account_id\nWHERE o.order_id = 32423;"}
{"165": "SELECT *\nFROM trans\nWHERE account_id IN (\n  SELECT account_id\n  FROM account\n  WHERE district_id = 5\n)"}
{"166": "SELECT COUNT(*)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Jesenik'"}
{"167": "SELECT client.client_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE card.type = 'junior' AND card.issued >= '1997-01-01'"}
{"168": "SELECT COUNT(client_id) * 100.0 / (SELECT COUNT(client_id) FROM client JOIN district ON client.district_id = district.district_id WHERE district.A11 > 10000) AS percentage FROM client JOIN district ON client.district_id = district.district_id WHERE district.A11 > 10000 AND client.gender = 'F'"}
{"169": "SELECT (SUM(l.amount) FILTER (WHERE strftime('%Y', l.date) = '1997') - SUM(l.amount) FILTER (WHERE strftime('%Y', l.date) = '1996')) / SUM(l.amount) FILTER (WHERE strftime('%Y', l.date) = '1996') * 100 FROM loan l JOIN account a ON l.account_id = a.account_id JOIN client c ON a.client_id = c.client_id WHERE c.gender = 'M'"}
{"170": "SELECT COUNT(*)\nFROM trans\nWHERE operation = 'VYBER KARTOU' AND date > '1995-01-01'"}
{"171": "SELECT (SELECT SUM(A16) FROM district WHERE A3 = 'North Bohemia') - (SELECT SUM(A16) FROM district WHERE A3 = 'East Bohemia') AS difference_in_crimes"}
{"172": "SELECT COUNT(*) FROM disp JOIN account ON disp.account_id = account.account_id WHERE account.account_id BETWEEN 1 AND 10"}
{"173": "SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'VYBER' AND operation = 'VYBER KARTOU'"}
{"174": "SELECT\n    strftime('%Y', c.birth_date) AS birth_year\nFROM\n    client c\nJOIN\n    disp d ON c.client_id = d.client_id\nWHERE\n    d.type = 'OWNER'\n    AND d.account_id IN (\n        SELECT\n            account_id\n        FROM\n            account\n        WHERE\n            account_id = 130\n    );"}
{"175": "SELECT COUNT(*)\nFROM disp\nWHERE type = 'OWNER'\nAND account_id IN (\n    SELECT account_id\n    FROM account\n    WHERE frequency = 'POPLATEK PO OBRATU'\n)"}
{"176": "SELECT loan.amount, loan.status FROM loan WHERE loan.account_id = 992;"}
{"177": "SELECT SUM(trans.amount) AS total_amount, CASE WHEN client.gender = 'M' THEN 'man' WHEN client.gender = 'F' THEN 'woman' END AS account_owner FROM trans JOIN account ON trans.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 4 AND trans.trans_id = 851 GROUP BY client.gender"}
{"178": "SELECT card.type FROM card JOIN disp ON card.card_id = disp.card_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 9;"}
{"179": "SELECT SUM(trans.amount) AS total_payment\nFROM trans\nJOIN disp ON trans.account_id = disp.account_id\nWHERE disp.client_id = 617\nAND trans.date >= '1998-01-01' AND trans.date < '1999-01-01'"}
{"180": "SELECT client.client_id\nFROM client\nJOIN account ON client.district_id = account.district_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31'\nAND district.A3 = 'East Bohemia'"}
{"181": "SELECT client.client_id\nFROM client\nJOIN loan ON client.client_id = loan.account_id\nWHERE client.gender = 'F'\nORDER BY loan.amount DESC\nLIMIT 3"}
{"182": "SELECT COUNT(DISTINCT client_id) AS male_customers\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND k_symbol = 'SIPO' AND amount > 4000;"}
{"183": "SELECT COUNT(*)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Beroun' AND account.date > '1996-01-01'"}
{"184": "SELECT COUNT(*)\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN card ON disp.disp_id = card.disp_id\nWHERE client.gender = 'F' AND card.type = 'junior'"}
{"185": "SELECT COUNT(client_id) * 100 / (SELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Prague')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Prague') AND gender = 'F'"}
{"186": "SELECT (COUNT(DISTINCT client_id) * 100.0 / (SELECT COUNT(DISTINCT client_id) FROM client WHERE frequency = 'POPLATEK TYDNE')) AS percentage\nFROM client\nWHERE frequency = 'POPLATEK TYDNE' AND gender = 'M'"}
{"187": "SELECT COUNT(DISTINCT client.client_id)\nFROM client\nJOIN account ON client.client_id = account.client_id\nWHERE account.frequency = 'POPLATEK TYDNE'\nAND client.gender = 'M'"}
{"188": "SELECT account_id\nFROM loan\nWHERE duration > 24\nAND date < '1997-01-01'\nAND amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE duration > 24\n    AND date < '1997-01-01'\n)"}
{"189": "SELECT account.account_id\nFROM account\nJOIN client ON account.client_id = client.client_id\nJOIN district ON account.district_id = district.district_id\nWHERE client.gender = 'F'\nORDER BY client.birth_date ASC, district.A11 ASC\nLIMIT 1"}
{"190": "SELECT COUNT(*)\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE strftime('%Y', client.birth_date) = '1920' AND district.A3 = 'east Bohemia'"}
{"191": "SELECT COUNT(*)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.duration = 24\nAND account.frequency = 'POPLATEK TYDNE'"}
{"192": "SELECT AVG(loan.amount)\nFROM loan\nWHERE loan.status IN ('C', 'D')\nAND loan.k_symbol = 'POPLATEK PO OBRATU'"}
{"193": "SELECT client.client_id, district.A2\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE disp.type = 'OWNER'"}
{"194": "SELECT client.client_id, \nstrftime('%Y', 'now') - strftime('%Y', client.birth_date) AS age\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN card ON disp.disp_id = card.disp_id\nJOIN loan ON loan.account_id = account.account_id\nWHERE card.type = 'gold'"}
{"195": "SELECT bond_type\nFROM bond\nGROUP BY bond_type\nHAVING COUNT(bond_type) = (\n    SELECT MAX(bond_count)\n    FROM (\n        SELECT COUNT(bond_type) as bond_count\n        FROM bond\n        GROUP BY bond_type\n    )\n);"}
{"196": "SELECT COUNT(DISTINCT molecule.molecule_id) AS count\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '-' AND atom.element = 'cl'"}
{"197": "SELECT AVG(CASE WHEN bond.bond_type = '-' AND atom.element = 'o' THEN 1 ELSE 0 END) AS average_number_of_oxygen_atoms\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-' AND atom.element = 'o' AND molecule.label = '+'"}
{"198": "SELECT AVG(CASE WHEN molecule.label = '+' AND bond.bond_type = '-' THEN 1 ELSE 0 END) AS average_carcinogenic_single_bonded_molecules\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id"}
{"199": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.element = 'na' AND molecule.label = '-'"}
{"200": "SELECT molecule.molecule_id\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = '#' AND molecule.label = '+'"}
{"201": "SELECT SUM(CASE WHEN element = 'c' AND bond_type = '=' THEN 1 ELSE 0 END) * 100.0 / COUNT(atom_id) AS percentage_of_carbon_in_double_bond_molecules\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE element = 'c' AND bond_type = '=';"}
{"202": "SELECT COUNT(*)\nFROM bond\nWHERE bond_type = '#';"}
{"203": "SELECT COUNT(*)\nFROM atom\nWHERE element != 'br'"}
{"204": "SELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.molecule_id BETWEEN 'TR000' AND 'TR099'\nAND m.label = '+'"}
{"205": "SELECT DISTINCT molecule.molecule_id\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.element = 'si'"}
{"206": "SELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR004_8_9'"}
{"207": "SELECT DISTINCT element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '='"}
{"208": "SELECT label, COUNT(label) AS label_count\nFROM atom\nWHERE element = 'h'\nGROUP BY label\nORDER BY label_count DESC\nLIMIT 1;"}
{"209": "SELECT bond.bond_type\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element = 'te'"}
{"210": "SELECT atom.atom_id, connected.atom_id2 FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-'"}
{"211": "SELECT connected.atom_id, connected.atom_id2\nFROM connected\nJOIN molecule ON connected.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-' AND molecule.molecule_id NOT IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n)"}
{"212": "SELECT element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-' AND molecule.molecule_id NOT IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n)\nGROUP BY element\nORDER BY COUNT(*) ASC\nLIMIT 1"}
{"213": "SELECT bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE atom.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20'"}
{"214": "SELECT DISTINCT m.label\nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id AND a.element = 'sn'\nWHERE a.atom_id IS NULL"}
{"215": "SELECT COUNT(DISTINCT atom.atom_id)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element IN ('i', 's')\nAND bond.bond_type = '-'\nAND connected.atom_id2 IS NULL"}
{"216": "SELECT atom_id, atom_id2\nFROM connected\nWHERE bond_id IN (\n  SELECT bond_id\n  FROM bond\n  WHERE bond_type = '#'\n)"}
{"217": "SELECT atom.atom_id\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN molecule ON connected.atom_id2 = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR181'"}
{"218": "SELECT (1 - (SELECT COUNT(*) FROM molecule WHERE label = '+' AND element = 'f') / (SELECT COUNT(*) FROM molecule WHERE label = '+')) * 100 as percent"}
{"219": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM bond WHERE bond_type = '#') as percent\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '#' AND molecule.label = '+'"}
{"220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3"}
{"221": "SELECT atom.atom_id, connected.atom_id2\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR001' AND bond.bond_id = 'TR001_2_6'"}
{"222": "SELECT (SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+') - (SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-') AS difference FROM atom a"}
{"223": "SELECT atom_id FROM connected WHERE bond_id = 'TR_000_2_5';"}
{"224": "SELECT bond_id\nFROM connected\nWHERE atom_id2 = 'TR000_2'"}
{"225": "SELECT molecule_id, label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM bond\n    WHERE bond_type = '='\n    GROUP BY molecule_id\n    HAVING COUNT(*) >= 2\n)\nORDER BY molecule_id ASC\nLIMIT 5;"}
{"226": "SELECT DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) as percent\nFROM bond\nWHERE molecule_id = 'TR008'"}
{"227": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM molecule) as percentage_of_carcinogenic_molecules\nFROM molecule\nWHERE label = '+'"}
{"228": "SELECT DIVIDE(SUM(element = 'h'), COUNT(atom_id)) as percent\nFROM atom\nWHERE molecule_id = 'TR206'"}
{"229": "SELECT bond.bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN molecule ON connected.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\nAND molecule.molecule_id = 'TR000'"}
{"230": "SELECT element, label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR060'"}
{"231": "SELECT bond_type, COUNT(bond_type) AS bond_count\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN molecule ON connected.molecule_id = molecule.molecule_id\nWHERE molecule.label = 'TR018'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;"}
{"232": "SELECT molecule.molecule_id\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = '-' AND molecule.label = '-'\nGROUP BY molecule.molecule_id\nHAVING COUNT(DISTINCT connected.atom_id) = 2\nORDER BY molecule.molecule_id ASC\nLIMIT 3;"}
{"233": "SELECT bond_id\nFROM bond\nWHERE molecule_id = 'TR006'\nORDER BY bond_id ASC\nLIMIT 2;"}
{"234": "SELECT COUNT(*)\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE connected.atom_id = 'TR009_12' OR connected.atom_id2 = 'TR009_12'\n  AND bond.molecule_id = 'TR009'"}
{"235": "SELECT COUNT(DISTINCT molecule_id)\nFROM atom\nWHERE element = 'br'\nAND molecule_id IN (\nSELECT molecule_id\nFROM molecule\nWHERE label = '+'\n)"}
{"236": "SELECT bond_type, atom_id, atom_id2\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_id = 'TR001_6_9'"}
{"237": "SELECT molecule.molecule_id, molecule.label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.atom_id = 'TR001_10' AND molecule.label = '+'"}
{"238": "SELECT COUNT(DISTINCT molecule_id) AS molecule_count\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = '#'"}
{"239": "SELECT COUNT(*) AS connection_count\nFROM connected\nWHERE atom_id LIKE 'TR%_19'"}
{"240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004'"}
{"241": "SELECT COUNT(*) FROM molecule WHERE label = '+';"}
{"242": "SELECT DISTINCT molecule_id\nFROM atom\nWHERE SUBSTR(atom_id, 7, 2) BETWEEN '21' AND '25'\nAND molecule_id IN (\n  SELECT molecule_id\n  FROM molecule\n  WHERE label = '+'\n)"}
{"243": "SELECT bond.bond_id\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id\nWHERE (atom.element = 'p' OR atom2.element = 'p') AND (atom.element = 'n' OR atom2.element = 'n')"}
{"244": "SELECT molecule.label\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE bond.bond_type = '='\nGROUP BY molecule.molecule_id\nHAVING COUNT(bond.bond_id) = (SELECT MAX(double_bonds) FROM (SELECT COUNT(bond_id) AS double_bonds FROM bond WHERE bond_type = '=' GROUP BY molecule_id))"}
{"245": "SELECT AVG(bond_count)\nFROM (\n  SELECT COUNT(bond_id) AS bond_count\n  FROM atom\n  WHERE element = 'i'\n  GROUP BY atom_id\n) subquery"}
{"246": "SELECT bond.bond_type, bond.bond_id\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE atom.atom_id = 'atom_45'"}
{"247": "SELECT atom.element\nFROM atom\nWHERE atom.atom_id NOT IN (SELECT connected.atom_id FROM connected)"}
{"248": "SELECT atom_id\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '#'\nAND bond.molecule_id = 'TR447'"}
{"249": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom_id\n    FROM connected\n    WHERE bond_id = 'TR144_8_19'\n)"}
{"250": "SELECT molecule.molecule_id\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE molecule.label = '+'\nAND bond.bond_type = '='\nGROUP BY molecule.molecule_id\nORDER BY COUNT(bond.bond_id) DESC\nLIMIT 1;"}
{"251": "SELECT element, COUNT(*) AS count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY element ORDER BY count ASC LIMIT 1;"}
{"252": "SELECT atom_id\nFROM connected\nWHERE bond_id IN (\n    SELECT bond_id\n    FROM connected\n    WHERE atom_id = (\n        SELECT atom_id\n        FROM atom\n        WHERE element = 'pb'\n    )\n)"}
{"253": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '#'\n"}
{"254": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM bond) AS percentage\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN atom AS a2 ON connected.atom_id2 = a2.atom_id\nGROUP BY atom.element, a2.element\nORDER BY COUNT(*) DESC\nLIMIT 1"}
{"255": "SELECT SUM(label = '+') / COUNT(bond_id)\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond_type = '-'\n"}
{"256": "SELECT SUM(CASE WHEN element = 'c' OR element = 'h' THEN 1 ELSE 0 END) AS total_atoms FROM atom"}
{"257": "SELECT connected.atom_id2\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE atom.element = 'sulfur'"}
{"258": "SELECT bond_type FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'sn'"}
{"259": "SELECT COUNT(DISTINCT element)\nFROM atom\nWHERE molecule_id IN (\n  SELECT molecule_id\n  FROM bond\n  WHERE bond_type = '-'\n)"}
{"260": "SELECT COUNT(DISTINCT atom_id) AS total_atoms\nFROM atom\nWHERE molecule_id IN (\n  SELECT molecule_id\n  FROM bond\n  JOIN connected ON bond.bond_id = connected.bond_id\n  WHERE bond_type = '#'\n)\nAND (element = 'p' OR element = 'br')"}
{"261": "SELECT bond.bond_id\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'"}
{"262": "SELECT molecule.molecule_id\nFROM molecule\nWHERE molecule.molecule_id IN (\n    SELECT bond.molecule_id\n    FROM bond\n    WHERE bond.bond_type = '-'\n)\nAND molecule.label = '-'\n"}
{"263": "SELECT (COUNT(CASE WHEN element = 'cl' THEN 1 END) / COUNT(DISTINCT atom.atom_id)) * 100 as percent\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '-'\n"}
{"264": "SELECT molecule.label\nFROM molecule\nWHERE molecule.molecule_id IN ('TR000', 'TR001', 'TR002')"}
{"265": "SELECT molecule_id FROM molecule WHERE label = '-';"}
{"266": "SELECT COUNT(DISTINCT molecule_id) AS total_carcinogenic_molecules\nFROM molecule\nWHERE molecule_id BETWEEN 'TR000' AND 'TR030'\nAND label = '+';"}
{"267": "SELECT bond_type\nFROM bond\nWHERE molecule_id BETWEEN 'TR000' AND 'TR050';"}
{"268": "SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'"}
{"269": "SELECT COUNT(DISTINCT bond_id)\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE atom.element = 'i'"}
{"270": "SELECT molecule.label, COUNT(*) AS count\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE atom.element = 'ca'\nGROUP BY molecule.label\nORDER BY count DESC\nLIMIT 1"}
{"271": "SELECT bond.bond_id\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id\nWHERE bond.bond_id = 'TR001_1_8'\nAND (atom.element = 'cl' OR atom2.element = 'cl')\nAND (atom.element = 'c' OR atom2.element = 'c')"}
{"272": "SELECT molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '#'\nAND molecule.label = '-'\nAND atom.element = 'c'\nGROUP BY molecule.molecule_id\nHAVING COUNT(bond.bond_id) = 3\nLIMIT 2;"}
{"273": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM molecule WHERE label = '+') as percentage\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.element = 'cl' AND molecule.label = '+'"}
{"274": "SELECT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR001'"}
{"275": "SELECT molecule_id\nFROM bond\nWHERE bond_type = ' = ';"}
{"276": "SELECT connected.atom_id, connected.atom_id2\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '#'\n"}
{"277": "SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR005_16_26'"}
{"278": "SELECT COUNT(DISTINCT molecule_id)\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-' AND molecule.label = '-'\n"}
{"279": "SELECT m.label\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_id = 'TR001_10_11'"}
{"280": "SELECT bond_id\nFROM bond\nWHERE bond_type = '#'\nAND molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE atom_id IN (\n        SELECT atom_id\n        FROM connected\n        WHERE bond_id IN (\n            SELECT bond_id\n            FROM bond\n            WHERE bond_type = '#'\n        )\n    )\n    AND molecule_id IN (\n        SELECT molecule_id\n        FROM molecule\n        WHERE label = '+'\n    )\n)"}
{"281": "SELECT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\nAND atom.atom_id LIKE '____4%'"}
{"282": "SELECT SUM(element = 'h') / COUNT(element) AS ratio_hydrogen, m.label\nFROM atom AS a\nJOIN molecule AS m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h' AND m.molecule_id = 'TR006'"}
{"283": "SELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'ca' AND m.label = '+'"}
{"284": "SELECT bond_type\nFROM bond\nJOIN atom ON bond.molecule_id = atom.molecule_id\nWHERE atom.element = 'te'"}
{"285": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom_id\n    FROM connected\n    WHERE bond_id = 'TR001_10_11'\n) AND molecule_id = SUBSTR('TR001_10_11', 1, 5)"}
{"286": "SELECT (COUNT(DISTINCT molecule_id) * 100.0) / (SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#') FROM bond WHERE bond_type = '#'"}
{"287": "SELECT (DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) * 100) AS percent\nFROM bond\nWHERE molecule_id = 'TR047'"}
{"288": "SELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.atom_id = 'TR001_1' AND m.label = '+'"}
{"289": "SELECT label\nFROM molecule\nWHERE molecule_id = 'TR151'"}
{"290": "SELECT element FROM atom WHERE molecule_id = 'TR151'"}
{"291": "SELECT COUNT(DISTINCT molecule.molecule_id)\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '+'"}
{"292": "SELECT atom.atom_id\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.element = 'carbon'\nAND molecule.molecule_id BETWEEN 'TR010' AND 'TR050'"}
{"293": "SELECT COUNT(DISTINCT atom_id)\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'"}
{"294": "SELECT bond_id\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '=' AND molecule.label = '+'"}
{"295": "SELECT COUNT(DISTINCT atom.atom_id) AS num_atoms\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE atom.element = 'hydrogen' AND molecule.label = '+'"}
{"296": "SELECT molecule_id\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.atom_id = 'TR00_1' AND bond.bond_id = 'TR00_1_2'"}
{"297": "SELECT atom_id\nFROM atom\nWHERE element = 'c'\nAND atom_id NOT IN (\n  SELECT atom_id\n  FROM atom\n  JOIN connected ON atom.atom_id = connected.atom_id\n  JOIN bond ON connected.bond_id = bond.bond_id\n  JOIN molecule ON atom.molecule_id = molecule.molecule_id\n  WHERE molecule.label = '+'\n)"}
{"298": "SELECT (COUNT(DISTINCT molecule.molecule_id) * 100.0) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+' AND atom.element = 'h'"}
{"299": "SELECT label\nFROM molecule\nWHERE molecule_id = 'TR124' AND label = '+'"}
{"300": "SELECT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR186'"}
{"301": "SELECT bond_type FROM bond WHERE molecule_id = 'TR007_4_19'"}
{"302": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR001_2_4'"}
{"303": "SELECT COUNT(*) FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR006' AND bond.bond_type = '=' AND molecule.label = '+';"}
{"304": "SELECT molecule.molecule_id, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE molecule.label = '+'"}
{"305": "SELECT bond.bond_id, connected.atom_id, connected.atom_id2, molecule.molecule_id\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '-'"}
{"306": "SELECT molecule.molecule_id, atom.element\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_type = '#';"}
{"307": "SELECT atom.element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond.bond_id = 'TR000_2_3'"}
{"308": "SELECT COUNT(*)\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE atom.element = 'cl'"}
{"309": "SELECT atom_id\nFROM atom\nWHERE molecule_id = 'TR346';\n\nSELECT COUNT(DISTINCT bond_type)\nFROM bond\nWHERE molecule_id = 'TR346';"}
{"310": "SELECT COUNT(DISTINCT molecule.molecule_id) AS num_molecules_with_double_bond_and_carcinogenic_label\nFROM bond\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE bond.bond_type = '=' AND molecule.label = '+';"}
{"311": "SELECT COUNT(DISTINCT molecule.molecule_id) AS count_molecules\nFROM molecule\nLEFT JOIN atom ON molecule.molecule_id = atom.molecule_id\nLEFT JOIN (\n    SELECT connected.molecule_id\n    FROM connected\n    INNER JOIN bond ON connected.bond_id = bond.bond_id\n    WHERE bond.bond_type = '='\n) AS double_bonds ON molecule.molecule_id = double_bonds.molecule_id\nWHERE atom.element != 's' AND double_bonds.molecule_id IS NULL;"}
{"312": "SELECT m.label\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN molecule m ON m.molecule_id = b.molecule_id\nWHERE b.bond_id = 'TR001_2_4'"}
{"313": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR005'"}
{"314": "SELECT COUNT(*)\nFROM bond\nWHERE bond_type = '-' AND bond_id IN (\n    SELECT bond_id\n    FROM connected\n    GROUP BY bond_id\n    HAVING COUNT(*) = 2\n)"}
{"315": "SELECT molecule.molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE atom.element LIKE '%cl%'\nAND molecule.label = '+'"}
{"316": "SELECT molecule_id\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'c'\n    AND molecule_id NOT IN (\n        SELECT molecule_id\n        FROM molecule\n        WHERE label = '+'\n    )\n)"}
{"317": "SELECT DIVIDE(SUM(label = '+' and element = 'cl'), COUNT(molecule_id)) as percentage\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE label = '+' and element = 'cl'"}
{"318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'"}
{"319": "SELECT COUNT(DISTINCT element)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE connected.bond_id = 'TR001_3_4'"}
{"320": "SELECT bond.bond_type\nFROM bond\nJOIN connected ON bond.bond_id = connected.bond_id\nJOIN atom ON connected.atom_id = atom.atom_id\nJOIN atom AS a2 ON connected.atom_id2 = a2.atom_id\nWHERE atom.atom_id = 'TR000_1' AND a2.atom_id = 'TR000_2'"}
{"321": "SELECT molecule.label\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id\nWHERE atom.atom_id = \"TR000_2\" AND atom2.atom_id = \"TR000_4\""}
{"322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'"}
{"323": "SELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE m.molecule_id = 'TR000' AND m.label = '+'"}
{"324": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '-')) as percentage\nFROM connected"}
{"325": "SELECT COUNT(DISTINCT molecule.molecule_id) AS carcinogenic_molecules_with_nitrogen\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nWHERE atom.element = 'n' AND molecule.label = '+';"}
{"326": "SELECT molecule.molecule_id\nFROM molecule\nJOIN atom ON molecule.molecule_id = atom.molecule_id\nJOIN bond ON atom.atom_id = bond.atom_id\nWHERE atom.element = 's' AND bond.bond_type = '='"}
{"327": "SELECT molecule_id\nFROM molecule\nWHERE label = '-' AND molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    GROUP BY molecule_id\n    HAVING COUNT(atom_id) > 5\n)"}
{"328": "SELECT atom.element\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE bond.bond_type = '=' AND atom.molecule_id = 'TR024'"}
{"329": "SELECT molecule.molecule_id\nFROM molecule\nWHERE molecule.label = '+'\nGROUP BY molecule.molecule_id\nORDER BY COUNT(atom.molecule_id) DESC\nLIMIT 1"}
{"330": "SELECT (COUNT(DISTINCT molecule.molecule_id) * 100.0) / (SELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'h') AS percentage\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE element = 'h' AND bond_type = '#';"}
{"331": "SELECT COUNT(DISTINCT molecule_id)\nFROM molecule\nWHERE label = '+'"}
{"332": "SELECT COUNT(DISTINCT molecule_id) AS single_bond_molecules\nFROM bond\nWHERE bond_type = '-' AND molecule_id BETWEEN 'TR004' AND 'TR010'"}
{"333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'carbon'"}
{"334": "SELECT element\nFROM atom\nWHERE atom_id = 'TR004_7'\nAND molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '-'\n)\nAND element != 'cl'"}
{"335": "SELECT COUNT(DISTINCT molecule_id) AS total_number_of_molecules\nFROM atom\nJOIN bond ON atom.molecule_id = bond.molecule_id\nJOIN connected ON atom.atom_id = connected.atom_id\nWHERE atom.element = 'o' AND bond.bond_type = '='"}
{"336": "SELECT COUNT(DISTINCT molecule.molecule_id)\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nJOIN connected ON bond.bond_id = connected.bond_id\nWHERE bond.bond_type = '#' AND molecule.label = '-'"}
{"337": "SELECT element, bond_type\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR016'"}
{"338": "SELECT atom.atom_id\nFROM atom\nJOIN bond ON atom.atom_id = bond.atom_id\nJOIN molecule ON bond.molecule_id = molecule.molecule_id\nWHERE molecule.label = 'TR012'\nAND atom.element = 'c'\nAND bond.bond_type = '='\nAND bond.molecule_id = 'TR012'"}
{"339": "SELECT atom.atom_id\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+' AND atom.element = 'o'"}
{"340": "SELECT name FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL"}
{"341": "SELECT cards.asciiName\nFROM cards\nWHERE cards.borderColor = 'borderless'\nAND cards.cardKingdomFoilId IS NULL\nAND cards.cardKingdomId IS NOT NULL"}
{"342": "SELECT cards.name, cards.faceConvertedManaCost FROM cards WHERE cards.faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards)"}
{"343": "SELECT cards.name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '2015' AND cards.edhrecRank < 100;"}
{"344": "SELECT cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'"}
{"345": "SELECT legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.types = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage'"}
{"346": "SELECT cards.id, cards.artist\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE (cards.power = '*' OR cards.power IS NULL)\nAND legalities.format = 'commander'\nAND legalities.status = 'Legal'"}
{"347": "SELECT cards.name, rulings.text\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Stephen Daniel'"}
{"348": "SELECT cards.name, cards.number, rulings.text\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s'"}
{"349": "SELECT cards.name, cards.artist, cards.isPromo\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.isPromo = 1\nGROUP BY cards.name, cards.artist, cards.isPromo\nHAVING COUNT(rulings.uuid) = (\n    SELECT MAX(ruling_count)\n    FROM (\n        SELECT COUNT(rulings.uuid) as ruling_count\n        FROM cards\n        JOIN rulings ON cards.uuid = rulings.uuid\n        WHERE cards.isPromo = 1\n        GROUP BY cards.name, cards.artist, cards.isPromo\n    )\n)"}
{"350": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Annul' AND cards.number = '29'"}
{"351": "SELECT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'Japanese'"}
{"352": "SELECT (SUM(id) * 100) / COUNT(id) AS percentage\nFROM foreign_data\nWHERE language = 'Chinese Simplified'"}
{"353": "SELECT sets.name, sets.totalSetSize\nFROM sets\nINNER JOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian'"}
{"354": "SELECT COUNT(DISTINCT cards.id) AS num_card_types\nFROM cards\nWHERE cards.artist = 'Aaron Boyd'"}
{"355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'"}
{"356": "SELECT COUNT(*) FROM cards WHERE power = 'Infinite'"}
{"357": "SELECT st.translation AS promotion_type\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE c.name = 'Duress'"}
{"358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';"}
{"359": "SELECT originalType FROM cards WHERE name = 'Ancestor's Chosen'"}
{"360": "SELECT set_translations.language\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Angel of Mercy'"}
{"361": "SELECT COUNT(*)\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.status = 'restricted' AND cards.text IS NOT NULL;"}
{"362": "SELECT rulings.text\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nWHERE cards.name = 'Condemn'"}
{"363": "SELECT COUNT(*)\nFROM cards\nWHERE cards.isStarter = 1\nAND cards.id IN (\n  SELECT id\n  FROM legalities\n  WHERE legalities.status = 'Restricted'\n)"}
{"364": "SELECT legalities.status\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE cards.name = 'Cloudchaser Eagle'"}
{"365": "SELECT type FROM cards WHERE name = 'Benalish Knight'"}
{"366": "SELECT cards.originalText\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Benalish Knight'"}
{"367": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN foreign_data f ON c.id = f.id\nWHERE f.language = 'Phyrexian'"}
{"368": "SELECT (COUNT(id) * 100.0) / (SELECT COUNT(id) FROM cards WHERE borderColor IS NOT NULL) AS percentage FROM cards WHERE borderColor = 'borderless'"}
{"369": "SELECT COUNT(*)\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE foreign_data.language = 'German'\nAND cards.isReprint = 1;"}
{"370": "SELECT COUNT(*)\nFROM cards\nWHERE borderColor = 'borderless' AND language = 'Russian'"}
{"371": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1 AND language = 'French')) AS percentage_of_french_story_spotlight_cards FROM cards WHERE isStorySpotlight = 1;"}
{"372": "SELECT COUNT(*) FROM cards WHERE CAST(toughness AS INTEGER) = 99"}
{"373": "SELECT cards.name\nFROM cards\nJOIN artists ON cards.artist = artists.name\nWHERE artists.name = 'Aaron Boyd'"}
{"374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo' AND availability NOT IN ('paper', 'arena', 'mtgarena')"}
{"375": "SELECT id FROM cards WHERE convertedManaCost = 0;"}
{"376": "SELECT layout FROM cards WHERE keywords COLLATE NOCASE LIKE '%flying%'"}
{"377": "SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'"}
{"378": "SELECT cards.id\nFROM cards\nWHERE cards.cardKingdomFoilId IS NOT NULL\nAND cards.cardKingdomId IS NOT NULL"}
{"379": "SELECT id FROM cards WHERE duelDeck = 'a'"}
{"380": "SELECT edhrecRank\nFROM cards\nWHERE frameVersion = '2015'"}
{"381": "SELECT cards.artist\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE foreign_data.language = 'Chinese Simplified'"}
{"382": "SELECT cards.name\nFROM cards\nWHERE cards.availability = 'paper' AND cards.language = 'Japanese'"}
{"383": "SELECT COUNT(*)\nFROM cards\nWHERE borderColor = 'white' AND id IN (SELECT id FROM legalities WHERE format = 'Banned')"}
{"384": "SELECT cards.uuid, foreign_data.language\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE legalities.format = 'legacy'"}
{"385": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Beacon of Immortality'"}
{"386": "SELECT COUNT(*) AS card_count, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.frameVersion = 'future' AND l.status = 'Legal'\nGROUP BY l.status;"}
{"387": "SELECT name, colors\nFROM cards\nWHERE setCode = 'OGW'"}
{"388": "SELECT cards.name, set_translations.language\nFROM cards\nJOIN set_translations ON cards.setCode = set_translations.setCode\nWHERE cards.setCode = '10E' AND cards.convertedManaCost = 5"}
{"389": "SELECT cards.name, rulings.date\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.originalType LIKE '%Creature - Elf%'"}
{"390": "SELECT colors, layout\nFROM cards\nWHERE id BETWEEN 1 AND 20;"}
{"391": "SELECT cards.name\nFROM cards\nJOIN foreign_data ON cards.name = foreign_data.name\nWHERE cards.colors LIKE '%B%'\nAND cards.originalType = 'Artifact'"}
{"392": "SELECT c.name\nFROM cards c\nJOIN rulings r ON c.name = r.name\nWHERE c.rarity = 'uncommon'\nORDER BY r.date ASC\nLIMIT 3;"}
{"393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 1 AND (cardKingdomId IS NULL OR cardKingdomFoilId IS NULL)"}
{"394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL"}
{"395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = -1"}
{"396": "SELECT COUNT(*)\nFROM cards\nWHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1"}
{"397": "SELECT cards.manaCost\nFROM cards\nWHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo')"}
{"398": "SELECT SUM(convertedManaCost) AS total_unconverted_mana FROM cards WHERE artist = 'Rob Alexander'"}
{"399": "SELECT DISTINCT types\nFROM cards\nWHERE availability = 'arena'"}
{"400": "SELECT DISTINCT sets.setCode\nFROM set_translations\nJOIN cards ON set_translations.setCode = cards.setCode\nWHERE set_translations.language = 'Spanish'"}
{"401": "SELECT (COUNT(CASE WHEN hand = '+3' THEN 1 END) * 100.0) / COUNT(*)\nFROM cards\nWHERE frameEffects = 'legendary';"}
{"402": "SELECT cards.id FROM cards WHERE cards.isStorySpotlight = 1 AND cards.isTextless = 0;"}
{"403": "SELECT cards.name\nFROM foreign_data\nJOIN cards ON foreign_data.name = cards.name\nWHERE foreign_data.language = 'Spanish'"}
{"404": "SELECT set_translations.language\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.baseSetSize = 309"}
{"405": "SELECT COUNT(*)\nFROM set_translations\nWHERE language = 'Portuguese (Brasil)' AND setCode IN (\n  SELECT code\n  FROM sets\n  WHERE block = 'Commander'\n)"}
{"406": "SELECT id\nFROM cards\nWHERE types LIKE '%Creature%'\nAND id IN (\n  SELECT id\n  FROM legalities\n  WHERE status = 'Legal'\n)"}
{"407": "SELECT types FROM set_translations WHERE language = 'German'"}
{"408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND text IS NOT NULL AND text LIKE '%triggered ability%'"}
{"409": null}
{"410": "SELECT cards.id\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.artist = 'Erica Yang'\nAND cards.availability = 'paper'\nAND legalities.format = 'pauper'"}
{"411": "SELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation'"}
{"412": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE foreign_data.language = 'French'\nAND cards.type LIKE '%Creature%'\nAND cards.layout = 'normal'\nAND cards.borderColor = 'black'\nAND cards.artist = 'Matthew D. Wilson'"}
{"413": "SELECT COUNT(DISTINCT c.id)\nFROM cards c\nJOIN rulings r ON c.id = r.uuid\nWHERE c.rarity = 'rare' AND r.date = '2009-01-10'"}
{"414": "SELECT set_translations.language FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ravnica' AND sets.totalSetSize = 180"}
{"415": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM legalities WHERE format = 'commander' AND status = 'legal') FROM legalities WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0;"}
{"416": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*') AS percentage\nFROM cards\nWHERE language = 'French' AND (power IS NULL OR power = '*')"}
{"417": "SELECT (COUNT(language = 'Japanese') / COUNT(language)) * 100\nFROM set_translations\nWHERE language = 'Japanese' AND setCode IN (SELECT code FROM sets WHERE type = 'expansion')"}
{"418": "SELECT availability\nFROM cards\nWHERE artist = 'Daren Bader'"}
{"419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000"}
{"420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1"}
{"421": "SELECT cards.name\nFROM cards\nWHERE (cards.power IS NULL OR cards.power = '*') AND cards.promoTypes = 'arenaleague'\nORDER BY cards.name ASC\nLIMIT 3;"}
{"422": "SELECT language FROM foreign_data WHERE multiverseid = 149934;"}
{"423": "SELECT cards.cardKingdomFoilId, cards.cardKingdomId\nFROM cards\nWHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL\nORDER BY cards.cardKingdomFoilId ASC\nLIMIT 3;"}
{"424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) / COUNT(isTextless)) * 100 FROM cards"}
{"425": "SELECT cards.number\nFROM cards\nWHERE cards.faceName IS NULL\nAND cards.subtypes LIKE '%Angel%'\nAND cards.subtypes LIKE '%Wizard%'"}
{"426": "SELECT sets.name\nFROM sets\nWHERE sets.mtgoCode IS NULL OR sets.mtgoCode = ''\nORDER BY sets.name ASC\nLIMIT 3;"}
{"427": "SELECT language FROM set_translations WHERE setCode = 'ARC' AND mcmName = 'Archenemy'"}
{"428": "SELECT sets.name, set_translations.translation\nFROM sets\nJOIN set_translations ON sets.id = set_translations.id\nWHERE sets.id = 5;"}
{"429": "SELECT language, type FROM sets WHERE id = 206;"}
{"430": "SELECT sets.id, sets.name\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian'\nAND sets.block = 'Shadowmoor'\nORDER BY sets.name ASC\nLIMIT 2;"}
{"431": "SELECT sets.id\nFROM sets\nWHERE sets.isForeignOnly = 1\nAND sets.isFoilOnly = 1\nAND sets.code IN (\nSELECT set_translations.setCode\nFROM set_translations\nWHERE set_translations.language = 'Japanese'\n)"}
{"432": "SELECT sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Russian' GROUP BY sets.name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"433": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isOnlineOnly = 1)) AS percentage\nFROM cards\nWHERE language = 'Chinese Simplified' AND isOnlineOnly = 1;"}
{"434": "SELECT COUNT(*)\nFROM sets\nWHERE language = 'Japanese' AND (mtgoCode IS NULL OR mtgoCode = '')"}
{"435": "SELECT COUNT(*) AS total_count FROM cards WHERE borderColor = 'black'"}
{"436": "SELECT COUNT(*) AS card_count, cards.id FROM cards WHERE frameEffects = 'extendedart' GROUP BY cards.id"}
{"437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;"}
{"438": "SELECT language FROM sets WHERE id = 174;"}
{"439": "SELECT name\nFROM sets\nWHERE code = 'ALL'"}
{"440": "SELECT language\nFROM foreign_data\nWHERE name = 'A Pedra Fellwar'"}
{"441": "SELECT sets.code\nFROM sets\nWHERE sets.releaseDate = '2007-07-13'"}
{"442": "SELECT baseSetSize, code\nFROM sets\nWHERE block IN ('Masques', 'Mirage')"}
{"443": "SELECT code\nFROM sets\nWHERE type = 'expansion'"}
{"444": "SELECT foreign_data.name, foreign_data.type\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.watermark = 'boros'"}
{"445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type\nFROM cards\nJOIN foreign_data ON cards.uuid = foreign_data.uuid\nWHERE cards.watermark = 'colorpie'"}
{"446": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM cards WHERE name = 'Abyssal Horror') AS percentage FROM cards WHERE name = 'Abyssal Horror' AND convertedManaCost = 10"}
{"447": "SELECT sets.code\nFROM sets\nWHERE sets.type = 'commander expansion'"}
{"448": "SELECT foreign_data.name, foreign_data.type\nFROM cards\nJOIN foreign_data ON cards.id = foreign_data.id\nWHERE cards.watermark = 'abzan'"}
{"449": "SELECT foreign_data.language, cards.type FROM foreign_data JOIN cards ON foreign_data.name = cards.name WHERE cards.watermark = 'azorius'"}
{"450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL AND isPowerful = 1"}
{"451": "SELECT COUNT(*)\nFROM cards\nWHERE availability LIKE '%paper%'\nAND hand LIKE '+%';"}
{"452": "SELECT name FROM cards WHERE isTextless = 0"}
{"453": "SELECT convertedManaCost\nFROM cards\nWHERE name = 'Ancestor''s Chosen'"}
{"454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)"}
{"455": "SELECT cards.name\nFROM cards\nWHERE cards.isPromo = 1\nAND cards.side IS NOT NULL"}
{"456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer'"}
{"457": "SELECT c.purchaseUrls\nFROM cards AS c\nJOIN sets AS s ON c.setCode = s.code\nWHERE c.promoTypes = 'bundle'"}
{"458": "SELECT COUNT(DISTINCT artist) AS num_artists\nFROM cards\nWHERE borderColor = 'black'\nAND availability LIKE '%arena,mtgo%';"}
{"459": "SELECT\n    CASE\n        WHEN convertedManaCost > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') THEN 'Serra Angel'\n        WHEN convertedManaCost < (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') THEN 'Shrine Keeper'\n        ELSE 'Both cards have the same converted mana cost'\n    END AS 'Card with higher converted mana cost'\nFROM cards\nWHERE name = 'Serra Angel' OR name = 'Shrine Keeper'"}
{"460": "SELECT artist\nFROM cards\nWHERE flavorName = 'Battra, Dark Destroyer'"}
{"461": "SELECT cards.name\nFROM cards\nWHERE cards.frameVersion = '2003'\nORDER BY cards.convertedManaCost DESC\nLIMIT 3;"}
{"462": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE set_translations.language = 'Italian'\nAND cards.name = 'Ancestor''s Chosen'"}
{"463": "SELECT COUNT(*)\nFROM set_translations\nWHERE setCode IN (\n  SELECT code\n  FROM sets\n  WHERE id IN (\n    SELECT DISTINCT set_id\n    FROM cards\n    WHERE name = 'Angel of Mercy'\n  )\n)"}
{"464": "SELECT cards.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN cards ON sets.code = cards.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition'"}
{"465": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.name = 'Ancestor's Chosen' AND foreign_data.language = 'Korean'"}
{"466": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%Hauptset Zehnte Edition%' AND artist = 'Adam Rex'"}
{"467": "SELECT baseSetSize FROM sets WHERE name = 'Hauptset Zehnte Edition'"}
{"468": "SELECT set_translations.translation\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE sets.name = 'Eighth Edition'\nAND set_translations.language = 'Simplified Chinese'"}
{"469": "SELECT cards.name FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL"}
{"470": "SELECT releaseDate\nFROM sets\nWHERE code IN (\n    SELECT setCode\n    FROM cards\n    WHERE name = 'Ancestor''s Chosen'\n)"}
{"471": "SELECT type\nFROM sets\nWHERE name = 'Hauptset Zehnte Edition'"}
{"472": "SELECT COUNT(DISTINCT s.id)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian'"}
{"473": "SELECT sets.isForeignOnly\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Adarkar Valkyrie'\nAND sets.isForeignOnly = 1;"}
{"474": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.language = 'Italian' AND sets.baseSetSize < 10"}
{"475": "SELECT COUNT(*)\nFROM cards\nWHERE availability LIKE '%Coldsnap%'\nAND borderColor = 'black'"}
{"476": "SELECT cards.name FROM cards WHERE cards.set = 'Coldsnap' ORDER BY cards.convertedManaCost DESC;"}
{"477": "SELECT artist FROM cards WHERE name = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')"}
{"478": "SELECT *\nFROM cards\nWHERE setCode = 'Coldsnap' AND number = 4;"}
{"479": "SELECT COUNT(*)\nFROM cards\nWHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL)"}
{"480": "SELECT foreign_data.flavorText\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE foreign_data.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'"}
{"481": "SELECT DISTINCT foreign_data.language\nFROM foreign_data\nJOIN cards ON foreign_data.name = cards.name\nWHERE cards.name = 'Ancestor''s Chosen'\nAND foreign_data.flavorText IS NOT NULL"}
{"482": "SELECT foreign_data.type\nFROM foreign_data\nWHERE foreign_data.name = 'Ancestor''s Chosen' AND foreign_data.language = 'German'"}
{"483": "SELECT foreign_data.text\nFROM foreign_data\nJOIN sets ON foreign_data.multiverseid = sets.id\nWHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian'"}
{"484": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian' AND cards.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap')"}
{"485": "SELECT rulings.date\nFROM rulings\nJOIN cards ON rulings.uuid = cards.uuid\nWHERE cards.name = 'Reminisce'"}
{"486": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap') AS percentage FROM cards WHERE convertedManaCost = 7 AND printings LIKE '%Coldsnap%'"}
{"487": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap')) AS percentage_of_incredibly_powerful_cards_in_Coldsnap FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL AND name = 'Coldsnap'"}
{"488": "SELECT sets.code\nFROM sets\nWHERE sets.releaseDate = '2017-07-14'"}
{"489": "SELECT keyruneCode\nFROM sets\nWHERE code = 'PKHC'"}
{"490": "SELECT sets.mcmId\nFROM sets\nWHERE sets.code = 'SS2'"}
{"491": "SELECT sets.mcmName\nFROM sets\nWHERE sets.releaseDate = '2017-06-09'"}
{"492": "SELECT type FROM sets WHERE name LIKE 'From the Vault:%'"}
{"493": "SELECT parentCode\nFROM sets\nWHERE name = 'Commander 2014 Oversized'"}
{"494": "SELECT cards.text, rulings.text\nFROM cards\nJOIN rulings ON cards.uuid = rulings.uuid\nWHERE cards.artist = 'Jim Pavelec'\nAND cards.hasContentWarning = 1"}
{"495": "SELECT sets.releaseDate FROM sets JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Evacuation'"}
{"496": "SELECT COUNT(*)\nFROM sets\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE set_translations.translation = 'Rinascita di Alara'"}
{"497": "SELECT type\nFROM sets\nWHERE name = 'Huiti\u00e8me \u00e9dition'"}
{"498": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE set_translations.language = 'French'\nAND cards.name = 'Tendo Ice Bridge'"}
{"499": "SELECT COUNT(*)\nFROM set_translations\nWHERE translation IS NOT NULL\nAND setCode = 'Salvat 2011'"}
{"500": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nJOIN cards ON sets.code = cards.setCode\nWHERE set_translations.language = 'Japanese'\nAND cards.name = 'Fellwar Stone'"}
{"501": "SELECT cards.name FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Journey into Nyx Hero''s Path' ORDER BY cards.convertedManaCost DESC LIMIT 1;"}
{"502": "SELECT releaseDate FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Ola de fr\u00edo'"}
{"503": "SELECT sets.type\nFROM sets\nJOIN cards ON sets.code = cards.setCode\nWHERE cards.name = 'Samite Pilgrim'"}
{"504": "SELECT COUNT(*) FROM cards WHERE setCode = 'World Championship Decks 2004' AND convertedManaCost = 3;"}
{"505": "SELECT set_translations.translation\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.name = 'Mirrodin'\nAND set_translations.language = 'Chinese Simplified'"}
{"506": "SELECT (DIVIDE(SUM(isNonFoilOnly = 1), SUM(language = 'Japanese')) * 100) AS percentage_of_japanese_non_foil\nFROM cards\nWHERE language = 'Japanese'"}
{"507": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM cards WHERE language = 'Portuguese (Brazil)') AS percentage\nFROM cards\nWHERE language = 'Portuguese (Brazil)' AND isOnlineOnly = 1"}
{"508": "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1"}
{"509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;"}
{"510": "SELECT artist FROM cards WHERE faceName IS NULL ORDER BY convertedManaCost DESC LIMIT 1"}
{"511": "SELECT frameEffects, COUNT(*) AS count\nFROM cards\nWHERE hasFoil = 1 AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\nGROUP BY frameEffects\nORDER BY count DESC\nLIMIT 1"}
{"512": "SELECT COUNT(*)\nFROM cards\nWHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a'"}
{"513": "SELECT sets.id\nFROM sets\nWHERE sets.type = 'Commander'\nAND sets.totalSetSize = (\n    SELECT MAX(totalSetSize)\n    FROM sets\n    WHERE sets.type = 'Commander'\n)"}
{"514": "SELECT cards.name FROM cards WHERE cards.layout = 'duel' ORDER BY cards.convertedManaCost DESC LIMIT 10"}
{"515": "SELECT MIN(sets.releaseDate) AS oldest_release_date,\n       legalities.format AS legal_play_format\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic'\n  AND legalities.status = 'Legal'\nGROUP BY cards.id\nORDER BY oldest_release_date ASC\nLIMIT 1;"}
{"516": "SELECT COUNT(DISTINCT c.id)\nFROM cards c\nJOIN foreign_data f ON c.id = f.id\nWHERE c.artist = 'Volkan Baga' AND f.language = 'French'"}
{"517": "SELECT COUNT(*)\nFROM cards\nWHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance'\nAND id IN (\nSELECT id\nFROM legalities\nWHERE format = 'Legal'\n)"}
{"518": "SELECT legalities.format, cards.name\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE legalities.status = 'banned'\nGROUP BY legalities.format\nHAVING COUNT(*) = (\n    SELECT MAX(banned_count)\n    FROM (\n        SELECT COUNT(*) AS banned_count\n        FROM legalities\n        WHERE status = 'banned'\n        GROUP BY format\n    )\n)"}
{"519": "SELECT set_translations.language\nFROM set_translations\nJOIN sets ON set_translations.setCode = sets.code\nWHERE sets.name = 'Battlebond'"}
{"520": "SELECT cards.artist, legalities.format\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.artist = (\n    SELECT artist\n    FROM cards\n    GROUP BY artist\n    ORDER BY COUNT(*) ASC\n    LIMIT 1\n)"}
{"521": "SELECT legalities.status\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.frameVersion = '1997'\nAND cards.artist = 'D. Alexander Gregory'\nAND cards.hasContentWarning = 1\nAND legalities.format = 'legacy';"}
{"522": "SELECT cards.name, legalities.format\nFROM cards\nJOIN legalities ON cards.id = legalities.id\nWHERE cards.edhrecRank = 1\nAND legalities.status = 'Banned'"}
{"523": "SELECT COUNT(DISTINCT code) / 4 AS annual_average_sets, MAX(language_count) AS common_language\nFROM (\n    SELECT code, COUNT(DISTINCT language) AS language_count\n    FROM sets\n    WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\n    GROUP BY code\n) AS subquery"}
{"524": "SELECT DISTINCT artist\nFROM cards\nWHERE borderColor = 'black' AND availability = 'arena'"}
{"525": "SELECT cards.uuid\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE legalities.format = 'oldschool'\nAND legalities.status IN ('banned', 'restricted')"}
{"526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper' AND isOnlineOnly = 0"}
{"527": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC"}
{"528": "SELECT cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Hour of Devastation'\nAND legalities.status = 'Legal'"}
{"529": "SELECT sets.name\nFROM sets\nWHERE sets.name NOT IN (\n  SELECT set_translations.translation\n  FROM set_translations\n  WHERE set_translations.language LIKE '%Japanese%'\n)\nAND sets.name IN (\n  SELECT set_translations.translation\n  FROM set_translations\n  WHERE set_translations.language = 'Korean'\n)"}
{"530": "SELECT DISTINCT frameVersion, c.name FROM cards c WHERE c.artist = 'Allen Williams' AND EXISTS ( SELECT * FROM legalities l WHERE l.id = c.id AND l.status = 'Banned' );"}
{"531": "SELECT DisplayName FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' ORDER BY Reputation DESC LIMIT 1;"}
{"532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'"}
{"533": "SELECT COUNT(DISTINCT Id)\nFROM users\nWHERE LastAccessDate > '2014-09-01 00:00:00'"}
{"534": "SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)"}
{"535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1"}
{"536": "SELECT COUNT(*) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'"}
{"537": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'"}
{"538": "SELECT Title\nFROM posts\nWHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = \"csgillespie\")"}
{"539": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Eliciting priors from experts'"}
{"540": "SELECT posts.Title FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY posts.ViewCount DESC LIMIT 1;"}
{"541": "SELECT users.DisplayName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)"}
{"542": "SELECT SUM(posts.CommentCount) AS Total_Number_of_Comments\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = \"csgillespie\";"}
{"543": "SELECT MAX(AnswerCount) AS AnswerCount\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'csgillespie'\n)"}
{"544": "SELECT users.DisplayName FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE posts.Title = 'Examples for teaching: Correlation does not mean causation'"}
{"545": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'\nAND posts.ParentId IS NULL"}
{"546": "SELECT users.DisplayName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.ClosedDate IS NOT NULL"}
{"547": "SELECT COUNT(*)\nFROM posts\nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65)\nAND Score > 19"}
{"548": "SELECT users.Location\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Eliciting priors from experts'"}
{"549": "SELECT posts.Body\nFROM posts\nJOIN tags ON posts.Id = tags.ExcerptPostId\nWHERE tags.TagName = 'bayesian'"}
{"550": "SELECT p.Body\nFROM posts p\nJOIN tags t ON t.ExcerptPostId = p.Id\nWHERE t.Count = (SELECT MAX(Count) FROM tags)\nLIMIT 1;"}
{"551": "SELECT COUNT(*) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie'"}
{"552": "SELECT badges.Name\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.DisplayName = 'csgillespie'"}
{"553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND strftime('%Y', Date) = '2011'"}
{"554": "SELECT users.DisplayName\nFROM users\nJOIN badges ON users.Id = badges.UserId\nGROUP BY users.Id\nORDER BY COUNT(badges.Id) DESC\nLIMIT 1;"}
{"555": "SELECT AVG(posts.Score) AS average_score\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'"}
{"556": "SELECT COUNT(badges.Id) / COUNT(DISTINCT users.DisplayName) AS AverageBadges\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.Views > 200"}
{"557": "SELECT (COUNT(Id) WHERE Age > 65) / COUNT(Id) * 100 FROM posts WHERE Score > 20"}
{"558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND DATE(CreationDate) = '2010-07-19'"}
{"559": "SELECT CreationDate\nFROM votes\nGROUP BY CreationDate\nORDER BY COUNT(Id) DESC\nLIMIT 1"}
{"560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'"}
{"561": "SELECT posts.Title\nFROM posts\nJOIN comments ON posts.Id = comments.PostId\nWHERE comments.Score = (SELECT MAX(Score) FROM comments)"}
{"562": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910)"}
{"563": "SELECT posts.FavoriteCount\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.UserId = 3025\nAND comments.CreationDate = '2014/4/23 20:29:39.0'"}
{"564": "SELECT Text FROM comments WHERE PostId = 107829 AND CommentCount = 1;"}
{"565": "SELECT\n    CASE\n        WHEN posts.ClosedDate IS NULL THEN 'Post is well-finished'\n        ELSE 'Post is not well-finished'\n    END\nFROM posts\nJOIN comments ON comments.PostId = posts.Id\nWHERE comments.UserId = 23853\nAND comments.CreationDate = '2013-07-12 09:08:18.0'"}
{"566": "SELECT Reputation\nFROM users\nWHERE Id = (\n  SELECT OwnerUserId\n  FROM posts\n  WHERE Id = 65041\n)"}
{"567": "SELECT COUNT(*) AS post_count\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Tiago Pasqualini';"}
{"568": "SELECT UserDisplayName FROM postHistory WHERE Id = 6347;"}
{"569": "SELECT COUNT(*) AS VoteCount\nFROM posts\nJOIN votes ON posts.Id = votes.PostId\nWHERE posts.Title LIKE '%data visualization%'"}
{"570": "SELECT badges.Name\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.DisplayName = 'DatEpicCoderGuyWhoPrograms'"}
{"571": "SELECT COUNT(p.Id) / COUNT(v.Id)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nLEFT JOIN votes v ON p.Id = v.PostId AND u.Id = v.UserId\nWHERE u.Id = 24"}
{"572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';"}
{"573": "SELECT Text\nFROM comments\nWHERE Score = 17;"}
{"574": "SELECT users.*\nFROM users\nWHERE users.WebsiteUrl = 'http://stackoverflow.com'"}
{"575": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'SilentGhost'"}
{"576": "SELECT\nusers.DisplayName\nFROM\ncomments\nJOIN users ON comments.UserId = users.Id\nWHERE\ncomments.Text = 'thank you user93!'"}
{"577": "SELECT Text\nFROM comments\nWHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'A Lion.')"}
{"578": "SELECT users.DisplayName, users.Reputation\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Understanding what Dassault iSight is doing?'"}
{"579": "SELECT Text\nFROM comments\nWHERE PostId IN (\n  SELECT Id\n  FROM posts\n  WHERE Title = 'How does gentle boosting differ from AdaBoost?'\n)"}
{"580": "SELECT users.DisplayName\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE badges.Name = 'Necromancer'\nLIMIT 10;"}
{"581": "SELECT users.DisplayName\nFROM posts\nJOIN users ON posts.LastEditorUserId = users.Id\nWHERE posts.Title = 'Open source tools for visualizing multi-dimensional data?'"}
{"582": "SELECT posts.Title FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Vebjorn Ljosa'"}
{"583": "SELECT SUM(posts.Score) AS TotalScore, users.WebsiteUrl FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Yevgeny' GROUP BY users.WebsiteUrl"}
{"584": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nJOIN users ON comments.UserId = users.Id\nWHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'"}
{"585": "SELECT SUM(BountyAmount) AS TotalBountyAmount FROM posts WHERE Title LIKE '%data%'"}
{"586": "SELECT users.DisplayName\nFROM users\nJOIN votes ON users.Id = votes.UserId\nJOIN posts ON votes.PostId = posts.Id\nWHERE posts.Title LIKE '%variance%' AND votes.BountyAmount = 50"}
{"587": "SELECT posts.Title, comments.Text, posts.Score, AVG(posts.ViewCount) AS AverageViewCount\nFROM posts\nJOIN postLinks ON posts.Id = postLinks.PostId\nJOIN tags ON postLinks.RelatedPostId = tags.Id\nLEFT JOIN comments ON posts.Id = comments.PostId\nWHERE tags.TagName = 'humor'\nGROUP BY posts.Title, comments.Text, posts.Score"}
{"588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;"}
{"589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;"}
{"590": "SELECT Id\nFROM users\nORDER BY Views ASC\nLIMIT 1;"}
{"591": "SELECT COUNT(DISTINCT UserId) AS TotalUsers FROM badges WHERE Name = 'Supporter' AND strftime('%Y', Date) = '2011'"}
{"592": "SELECT COUNT(DISTINCT UserId)\nFROM (\n  SELECT UserId\n  FROM badges\n  GROUP BY UserId\n  HAVING COUNT(DISTINCT Name) > 5\n) AS subquery;"}
{"593": "SELECT COUNT(*)\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE users.Location = 'New York' AND (badges.Name = 'Supporter' OR badges.Name = 'Teacher')"}
{"594": "SELECT users.DisplayName, users.Reputation\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.Id = 1;"}
{"595": "SELECT users.Id\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN postHistory ON posts.Id = postHistory.PostId\nGROUP BY users.Id\nHAVING COUNT(DISTINCT postHistory.Id) = 1\nAND SUM(posts.ViewCount) >= 1000"}
{"596": "SELECT\nusers.Id,\nusers.DisplayName,\nbadges.Name\nFROM\nusers\nJOIN (\nSELECT\nUserId,\nCOUNT(Id) AS comment_count\nFROM\ncomments\nGROUP BY\nUserId\n) AS comment_counts ON users.Id = comment_counts.UserId\nJOIN badges ON users.Id = badges.UserId\nWHERE\ncomment_counts.comment_count = (\nSELECT\nMAX(comment_count)\nFROM\n(\nSELECT\nCOUNT(Id) AS comment_count\nFROM\ncomments\nGROUP BY\nUserId\n) AS max_comment_counts\n)"}
{"597": "SELECT COUNT(DISTINCT users.Id)\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE users.Location = 'India' AND badges.Name = 'Teacher'"}
{"598": "SELECT ((COUNT(Name) WHERE strftime('%Y', Date) = '2010') / COUNT(Name)) * 100 - ((COUNT(Name) WHERE strftime('%Y', Date) = '2011') / COUNT(Name)) * 100 AS percentage_difference\nFROM badges\nWHERE Name = 'Students'"}
{"599": "SELECT DISTINCT PostHistoryTypeId FROM postHistory WHERE PostId = 3720; SELECT COUNT(DISTINCT comments.UserId) FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.PostId = 3720;"}
{"600": "SELECT posts.*\nFROM posts\nJOIN postLinks ON posts.Id = postLinks.RelatedPostId\nWHERE postLinks.PostId = 61217"}
{"601": "SELECT Score, LinkTypeId FROM posts JOIN postLinks ON posts.Id = postLinks.PostId WHERE posts.Id = 395;"}
{"602": "SELECT posts.Id, posts.OwnerUserId\nFROM posts\nWHERE posts.Score > 60"}
{"603": "SELECT SUM(FavoriteCount) AS TotalFavoriteCount\nFROM posts\nWHERE OwnerUserId = 686\nAND strftime('%Y', CreationDate) = '2011'"}
{"604": "SELECT AVG(UpVotes) AS average_up_votes, AVG(Age) AS average_user_age\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nGROUP BY users.Id\nHAVING COUNT(posts.Id) > 10"}
{"605": "SELECT COUNT(DISTINCT UserId) AS TotalUsers FROM badges WHERE Name = 'Announcer';"}
{"606": "SELECT badges.Name\nFROM badges\nWHERE badges.Date = '2010-07-19 19:39:08'"}
{"607": "SELECT COUNT(*)\nFROM comments\nWHERE Score > 60"}
{"608": "SELECT comments.Text\nFROM comments\nWHERE comments.CreationDate = '2010-07-19 19:25:47.0'"}
{"609": "SELECT COUNT(Id) FROM posts WHERE Score = 10"}
{"610": "SELECT badges.Name\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.Reputation = (SELECT MAX(Reputation) FROM users)"}
{"611": "SELECT users.Reputation\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE badges.Date = '2010-07-19 19:39:08.0'"}
{"612": "SELECT Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre'"}
{"613": "SELECT badges.Date\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.Location = 'Rochester, NY'"}
{"614": "SELECT (COUNT(UserId WHERE Name = 'Teacher') / COUNT(UserId)) * 100 FROM badges WHERE Name = 'Teacher'"}
{"615": "SELECT (COUNT(DISTINCT b.UserId) * 100) / (SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Organizer') FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Organizer' AND u.Age BETWEEN 13 AND 18"}
{"616": "SELECT comments.Score\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.CreationDate = '2010-07-19 19:19:56.0'"}
{"617": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.CreationDate = '2010-07-19 19:37:33.0'"}
{"618": "SELECT users.Age\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE users.Location = 'Vienna, Austria'"}
{"619": "SELECT COUNT(*)\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65"}
{"620": "SELECT COUNT(DISTINCT users.Id) AS num_views\nFROM users\nJOIN badges ON users.Id = badges.UserId\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN postHistory ON posts.Id = postHistory.PostId\nWHERE badges.Date = '2010-07-19 19:39:08.0'\nAND postHistory.CreationDate = '2010-07-19 19:39:08.0'"}
{"621": "SELECT badges.Name\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.Reputation = (SELECT MIN(Reputation) FROM users)"}
{"622": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Sharpie'"}
{"623": "SELECT COUNT(DISTINCT badges.UserId)\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Supporter' AND users.Age > 65"}
{"624": "SELECT DisplayName FROM users WHERE Id = 30;"}
{"625": "SELECT COUNT(*)\nFROM users\nWHERE Location LIKE '%New York%'"}
{"626": "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';"}
{"627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 OR Age IS NULL;"}
{"628": "SELECT DisplayName\nFROM users\nORDER BY Views DESC\nLIMIT 1"}
{"629": "SELECT COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN Id END) / COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN Id END) FROM votes;"}
{"630": "SELECT tags.TagName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN postTags ON posts.Id = postTags.PostId\nJOIN tags ON postTags.TagId = tags.Id\nWHERE users.DisplayName = 'John Stauffer'"}
{"631": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Daniel Vassallo'"}
{"632": "SELECT COUNT(*) AS VoteCount\nFROM votes\nWHERE UserId IN (\n  SELECT Id\n  FROM users\n  WHERE DisplayName = 'Harlan'\n)"}
{"633": "SELECT posts.Id\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'slashnick'\nORDER BY posts.AnswerCount DESC\nLIMIT 1;"}
{"634": "SELECT MAX(SUM(ViewCount)) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder'"}
{"635": "SELECT COUNT(*)\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Score > 4\nAND users.DisplayName = 'Matt Parker'"}
{"636": "SELECT COUNT(*) FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.Score < 0 AND users.DisplayName = 'Neil McGuigan'"}
{"637": "SELECT DISTINCT tags.TagName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN tags ON posts.Tags LIKE '%' || tags.TagName || '%'\nLEFT JOIN comments ON posts.Id = comments.PostId AND comments.UserId = users.Id\nWHERE users.DisplayName = 'Mark Meckes'\nAND comments.Id IS NULL;"}
{"638": "SELECT users.DisplayName\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE badges.Name = 'Organizer'"}
{"639": "SELECT (COUNT(posts.Id) * 100) / (SELECT COUNT(posts.Id) FROM posts JOIN tags ON tags.Id = posts.Id WHERE tags.TagName = 'r') as percentage\nFROM posts\nJOIN tags ON tags.Id = posts.Id\nJOIN users ON users.Id = posts.OwnerUserId\nWHERE tags.TagName = 'r' AND users.DisplayName = 'Community'"}
{"640": "SELECT\n    (SELECT SUM(posts.ViewCount) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Mornington') -\n    (SELECT SUM(posts.ViewCount) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Amos') AS view_count_difference;"}
{"641": "SELECT COUNT(DISTINCT UserId)\nFROM badges\nWHERE Name = 'commentator' AND Date >= '2014-01-01' AND Date < '2015-01-01'"}
{"642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'"}
{"643": "SELECT users.DisplayName, users.Age FROM users WHERE users.Views = (SELECT MAX(Views) FROM users)"}
{"644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';"}
{"645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 0;"}
{"646": "SELECT posts.Title, comments.UserDisplayName\nFROM posts\nJOIN comments ON posts.Id = comments.PostId\nWHERE comments.Score > 60"}
{"647": "SELECT badges.Name\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.Location = 'North Pole'\nAND strftime('%Y', badges.Date) = '2011'"}
{"648": "SELECT users.DisplayName, users.WebsiteUrl\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.FavoriteCount > 150"}
{"649": "SELECT COUNT(*) AS PostHistoryCount, MAX(CreationDate) AS LastEditDate\nFROM postHistory\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    WHERE Title = 'What is the best introductory Bayesian statistics textbook?'\n)"}
{"650": "SELECT users.LastAccessDate, users.Location\nFROM users\nJOIN badges ON users.Id = badges.UserId\nWHERE badges.Name = 'Outliers'\nORDER BY users.LastAccessDate DESC\nLIMIT 1"}
{"651": "SELECT posts.Title\nFROM posts\nWHERE posts.Id IN (\n  SELECT postLinks.RelatedPostId\n  FROM postLinks\n  WHERE postLinks.PostId = (\n    SELECT posts.Id\n    FROM posts\n    WHERE posts.Title = 'How to tell if something happened in a data set which monitors a value over time'\n  )\n)"}
{"652": "SELECT posts.Id, badges.Name\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN badges ON badges.UserId = users.Id\nWHERE users.DisplayName = 'Samuel'\nAND strftime('%Y', posts.CreationDate) = '2013'\nAND strftime('%Y', badges.Date) = '2013'"}
{"653": "SELECT OwnerDisplayName\nFROM posts\nWHERE ViewCount = (SELECT MAX(ViewCount) FROM posts)"}
{"654": "SELECT users.DisplayName, users.Location\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nJOIN tags ON tags.ExcerptPostId = posts.Id\nWHERE tags.TagName = 'hypothesis-testing'"}
{"655": "SELECT postLinks.RelatedPostId, postLinks.LinkTypeId\nFROM postLinks\nJOIN posts ON postLinks.PostId = posts.Id\nWHERE posts.Title = 'What are principal component scores?'"}
{"656": "SELECT p.OwnerDisplayName\nFROM posts AS p\nJOIN posts AS c ON p.Id = c.ParentId\nWHERE p.Score = (\n    SELECT MAX(Score)\n    FROM posts\n    WHERE ParentId IS NOT NULL\n)"}
{"657": "SELECT users.DisplayName, users.WebsiteUrl\nFROM users\nJOIN votes ON users.Id = votes.UserId\nWHERE votes.VoteTypeId = 8\nORDER BY votes.BountyAmount DESC\nLIMIT 1"}
{"658": "SELECT p.Title\nFROM posts p\nORDER BY p.ViewCount DESC\nLIMIT 5;"}
{"659": "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000;"}
{"660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts) ORDER BY FavoriteCount DESC LIMIT 1;"}
{"661": "SELECT Age\nFROM users\nWHERE Reputation = (SELECT MAX(Reputation) FROM users);"}
{"662": "SELECT COUNT(DISTINCT posts.Id)\nFROM posts\nJOIN votes ON posts.Id = votes.PostId\nWHERE strftime('%Y', posts.CreationDate) = '2011'\nAND votes.BountyAmount = 50"}
{"663": "SELECT Id\nFROM users\nORDER BY Age ASC\nLIMIT 1"}
{"664": "SELECT posts.Score FROM posts JOIN tags ON posts.Tags LIKE '%' || tags.TagName || '%' WHERE tags.Count = (SELECT MAX(Count) FROM tags) ORDER BY posts.ViewCount DESC LIMIT 1"}
{"665": "SELECT AVG(links_per_month) AS average_monthly_links\nFROM\n(\n    SELECT COUNT(*) AS links_per_month\n    FROM postLinks\n    INNER JOIN posts ON postLinks.PostId = posts.Id\n    WHERE strftime('%Y', postLinks.CreationDate) = '2010'\n    AND posts.AnswerCount <= 2\n    GROUP BY strftime('%Y-%m', postLinks.CreationDate)\n) AS subquery"}
{"666": "SELECT posts.Id\nFROM posts\nJOIN votes ON posts.Id = votes.PostId\nWHERE votes.UserId = 1465\nORDER BY posts.FavoriteCount DESC\nLIMIT 1;"}
{"667": "SELECT posts.Title FROM posts JOIN postLinks ON posts.Id = postLinks.PostId WHERE postLinks.CreationDate = (SELECT MIN(CreationDate) FROM postLinks)"}
{"668": "SELECT users.DisplayName\nFROM users\nJOIN badges ON users.Id = badges.UserId\nGROUP BY users.DisplayName\nORDER BY COUNT(badges.Name) DESC\nLIMIT 1;"}
{"669": "SELECT MIN(votes.CreationDate)\nFROM votes\nJOIN users ON votes.UserId = users.Id\nWHERE users.DisplayName = 'chl'"}
{"670": "SELECT MIN(posts.CreaionDate) AS \"Date\"\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.Age = (SELECT MIN(Age) FROM users)"}
{"671": "SELECT users.DisplayName\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE badges.Name = 'Autobiographer'\nORDER BY badges.Date ASC\nLIMIT 1;"}
{"672": "SELECT COUNT(DISTINCT users.Id)\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE users.Location = 'United Kingdom' AND posts.FavoriteCount >= 4"}
{"673": "SELECT AVG(PostId) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE Age = (SELECT MAX(Age) FROM users))"}
{"674": "SELECT DisplayName\nFROM users\nWHERE Reputation = (SELECT MAX(Reputation) FROM users)"}
{"675": "SELECT COUNT(*)\nFROM users\nWHERE Reputation > 2000 AND Views > 1000;"}
{"676": "SELECT users.DisplayName\nFROM users\nWHERE users.Age BETWEEN 19 AND 65;"}
{"677": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND posts.CreationDate >= '2010-01-01' AND posts.CreationDate < '2011-01-01'"}
{"678": "SELECT posts.Id, posts.Title\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'\nORDER BY posts.ViewCount DESC\nLIMIT 1;"}
{"679": "SELECT Id, Title\nFROM posts\nWHERE Score = (SELECT MAX(Score) FROM posts);"}
{"680": "SELECT AVG(posts.Score) AS AverageScore\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Stephen Turner'"}
{"681": "SELECT users.DisplayName\nFROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nWHERE posts.ViewCount > 20000 AND strftime('%Y', posts.CreationDate) = '2011';"}
{"682": "SELECT posts.Id, users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE year(posts.CreationDate) = 2010\nORDER BY posts.FavoriteCount DESC\nLIMIT 1;"}
{"683": "SELECT (COUNT(posts.Id) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', CreationDate) = '2011')) as percentage\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.Reputation > 1000 AND strftime('%Y', CreationDate) = '2011';"}
{"684": "SELECT (COUNT(Id) * 100.0 / (SELECT COUNT(Id) FROM users)) as percentage\nFROM users\nWHERE Age BETWEEN 13 AND 18;"}
{"685": "SELECT SUM(posts.ViewCount) AS TotalViews, users.DisplayName\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Title = 'Computer Game Datasets'\nGROUP BY users.DisplayName\nORDER BY posts.LastActivityDate DESC\nLIMIT 1"}
{"686": "SELECT COUNT(*)\nFROM posts\nWHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)"}
{"687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))"}
{"688": "SELECT COUNT(*)\nFROM posts\nLEFT JOIN users ON posts.OwnerUserId = users.Id\nWHERE ViewCount > 35000 AND CommentCount = 0;"}
{"689": "SELECT users.DisplayName, users.Location\nFROM users\nJOIN posts ON users.Id = posts.LastEditorUserId\nWHERE posts.Id = 183\nORDER BY posts.LastEditDate DESC\nLIMIT 1;"}
{"690": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett') ORDER BY Date DESC LIMIT 1;"}
{"691": "SELECT COUNT(*) FROM users WHERE Age >= 19 AND Age <= 65 AND UpVotes > 5000"}
{"692": "SELECT strftime('%s', badges.Date) - strftime('%s', users.CreationDate) AS TimeToGetBadge\nFROM badges\nJOIN users ON badges.UserId = users.Id\nWHERE users.DisplayName = 'Zolomon'"}
{"693": "SELECT COUNT(*) AS num_posts, (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)) AS num_comments FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)"}
{"694": "SELECT comments.Text, users.DisplayName\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nJOIN users ON comments.UserId = users.Id\nWHERE posts.Title = 'Analysing wind data with R'\nORDER BY comments.CreationDate DESC\nLIMIT 1;"}
{"695": "SELECT COUNT(DISTINCT UserId)\nFROM badges\nWHERE Name = 'Citizen Patrol'"}
{"696": "SELECT COUNT(*) FROM posts WHERE Tags LIKE '%careers%'"}
{"697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';"}
{"698": "SELECT (SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS total_comments, (SELECT COUNT(*) FROM posts WHERE ParentId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS total_answers"}
{"699": "SELECT CreationDate\nFROM users\nWHERE DisplayName = 'IrishStat'"}
{"700": "SELECT COUNT(*)\nFROM postLinks\nWHERE LinkTypeId = 1 AND BountyAmount >= 30;"}
{"701": "SELECT DIVIDE(COUNT(stats_posts.Id WHERE Score >= 50 AND MAX(Reputation)), COUNT(stats_posts.Id WHERE MAX(Reputation))) AS percentage\nFROM\n(\n  SELECT p.Id, p.Score, u.Reputation\n  FROM posts p\n  JOIN users u ON p.OwnerUserId = u.Id\n  WHERE p.OwnerUserId = (\n    SELECT OwnerUserId\n    FROM posts\n    GROUP BY OwnerUserId\n    ORDER BY MAX(Reputation) DESC\n    LIMIT 1\n  )\n) stats_posts;"}
{"702": "SELECT COUNT(*) FROM posts WHERE Score < 20;"}
{"703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;"}
{"704": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample'"}
{"705": "SELECT users.Reputation, users.UpVotes\nFROM users\nJOIN comments ON users.Id = comments.UserId\nWHERE comments.Text = 'fine, you win :)';"}
{"706": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.Title = 'How can I adapt ANOVA for binary data?'"}
{"707": "SELECT comments.Text\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.ViewCount BETWEEN 100 AND 150\nORDER BY comments.Score DESC\nLIMIT 1;"}
{"708": "SELECT comments.CreationDate, users.Age\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Text LIKE '%http://%'"}
{"709": "SELECT COUNT(DISTINCT comments.PostId)\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE comments.Score = 0 AND posts.ViewCount < 5;"}
{"710": "SELECT COUNT(comments.Id)\nFROM comments\nJOIN posts ON comments.PostId = posts.Id\nWHERE posts.CommentCount = 1\nAND comments.Score = 0"}
{"711": "SELECT COUNT(DISTINCT users.Id) AS total_users_ages_40\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE comments.Score = 0 AND users.Age = 40"}
{"712": "SELECT posts.Id, comments.Text\nFROM posts\nJOIN comments ON posts.Id = comments.PostId\nWHERE posts.Title = 'Group differences on a five point Likert item'"}
{"713": "SELECT SUM(votes.UpVotes) AS UpVoteNumber\nFROM comments\nJOIN users ON comments.UserId = users.Id\nJOIN votes ON comments.PostId = votes.PostId\nWHERE comments.Text = 'R is also lazy evaluated.'"}
{"714": "SELECT comments.Text\nFROM comments\nJOIN users ON comments.UserId = users.Id\nWHERE users.DisplayName = 'Harvey Motulsky'"}
{"715": "SELECT UserDisplayName\nFROM comments\nWHERE Score BETWEEN 1 AND 5\nAND DownVotes = 0"}
{"716": "SELECT (COUNT(DISTINCT c.UserId) * 1.0 / COUNT(DISTINCT c2.UserId)) * 100 as percentage\nFROM comments c\nJOIN comments c2 ON c.UserId = c2.UserId\nWHERE c.Score BETWEEN 5 AND 10\nAND c.UpVotes = 0;"}
{"717": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man'"}
{"718": "SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength'"}
{"719": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Super Strength'\nAND superhero.height_cm > 200"}
{"720": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nGROUP BY superhero.full_name\nHAVING COUNT(hero_power.power_id) > 15"}
{"721": "SELECT COUNT(*)\nFROM superhero\nWHERE eye_colour_id IN (\n    SELECT id\n    FROM colour\n    WHERE colour = 'Blue'\n)"}
{"722": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.skin_colour_id = colour.id\nWHERE superhero.superhero_name = 'Apocalypse'"}
{"723": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE colour.colour = 'Blue'\nAND superpower.power_name = 'Agility'"}
{"724": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour eye_color ON superhero.eye_colour_id = eye_color.id\nJOIN colour hair_color ON superhero.hair_colour_id = hair_color.id\nWHERE eye_color.colour = 'Blue' AND hair_color.colour = 'Blond'"}
{"725": "SELECT COUNT(*)\nFROM superhero\nWHERE publisher_id = (\n  SELECT id\n  FROM publisher\n  WHERE publisher_name = 'Marvel Comics'\n)"}
{"726": "SELECT superhero.full_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC\nLIMIT 1;"}
{"727": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name = 'Sauron'"}
{"728": "SELECT COUNT(*)\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nAND colour.colour = 'Blue'\nAND colour.id = 1"}
{"729": "SELECT AVG(height_cm)\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'"}
{"730": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics')) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'"}
{"731": "SELECT COUNT(*)\nFROM superhero\nWHERE publisher_id = (\n  SELECT id\n  FROM publisher\n  WHERE publisher_name = 'DC Comics'\n)"}
{"732": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON hero_attribute.hero_id = superhero.id\nJOIN attribute ON attribute.id = hero_attribute.attribute_id\nWHERE attribute.attribute_name = 'Speed'\nAND hero_attribute.attribute_value = (\n    SELECT MIN(attribute_value)\n    FROM hero_attribute\n    WHERE attribute_id = (\n        SELECT id\n        FROM attribute\n        WHERE attribute_name = 'Speed'\n    )\n)"}
{"733": "SELECT COUNT(*)\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE colour.colour = 'Gold'\nAND publisher.publisher_name = 'Marvel Comics'"}
{"734": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name = 'Blue Beetle II'"}
{"735": "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'"}
{"736": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Intelligence'\nORDER BY hero_attribute.attribute_value ASC\nLIMIT 1;"}
{"737": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'"}
{"738": "SELECT COUNT(DISTINCT hero_attribute.hero_id)\nFROM hero_attribute\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN superhero ON hero_attribute.hero_id = superhero.id\nWHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50"}
{"739": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch'"}
{"740": "SELECT COUNT(*)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100"}
{"741": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nGROUP BY superhero.superhero_name\nHAVING COUNT(hero_power.power_id) = (\n    SELECT MAX(power_count)\n    FROM (\n        SELECT COUNT(hero_power.power_id) as power_count\n        FROM superhero\n        JOIN hero_power ON superhero.id = hero_power.hero_id\n        GROUP BY superhero.superhero_name\n    ) AS counts\n);"}
{"742": "SELECT COUNT(*) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'"}
{"743": "SELECT COUNT(superhero.id) * 100 / (SELECT COUNT(*) FROM superhero) AS percentage\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics'"}
{"744": "SELECT ABS(SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id;"}
{"745": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek'"}
{"746": "SELECT AVG(hero_attribute.attribute_value) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id;"}
{"747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL"}
{"748": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.id = 75;"}
{"749": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Deathlok'"}
{"750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = 2"}
{"751": "SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nJOIN superhero ON hero_power.hero_id = superhero.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male'\nLIMIT 5;"}
{"752": "SELECT superhero.superhero_name\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE race.race = 'Alien'"}
{"753": "SELECT superhero.superhero_name\nFROM superhero\nWHERE superhero.height_cm BETWEEN 170 AND 190\nAND superhero.eye_colour_id = 1"}
{"754": "SELECT power_name\nFROM superpower\nWHERE id IN (\n  SELECT power_id\n  FROM hero_power\n  WHERE hero_id = 56\n);"}
{"755": "SELECT superhero.full_name\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE race.race = 'Demi-God'\nLIMIT 5;"}
{"756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 2"}
{"757": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.weight_kg = 169;"}
{"758": "SELECT colour.colour\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185\nAND race.race = 'human'"}
{"759": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\nLIMIT 1"}
{"760": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';"}
{"761": "SELECT superhero.full_name\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Male' AND superhero.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)"}
{"762": "SELECT superpower.power_name\nFROM superpower\nJOIN hero_power ON superpower.id = hero_power.power_id\nGROUP BY superpower.power_name\nORDER BY COUNT(hero_power.hero_id) DESC\nLIMIT 1;"}
{"763": "SELECT hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nWHERE superhero.superhero_name = 'Abomination'"}
{"764": "SELECT superpower.power_name\nFROM superpower\nINNER JOIN hero_power ON superpower.id = hero_power.power_id\nWHERE hero_power.hero_id = 1;"}
{"765": "SELECT COUNT(DISTINCT superhero.id)\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'stealth'"}
{"766": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1"}
{"767": "SELECT AVG(CASE WHEN skin_colour_id IS NULL THEN 1 ELSE 0 END) AS average\nFROM superhero\nWHERE skin_colour_id IS NULL;"}
{"768": "SELECT COUNT(*)\nFROM superhero\nWHERE publisher_id = (\n  SELECT id\n  FROM publisher\n  WHERE publisher_name = 'Dark Horse Comics'\n)"}
{"769": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'durability'\nAND publisher.publisher_name = 'Dark Horse Comics'\nGROUP BY superhero.superhero_name\nHAVING MAX(hero_attribute.attribute_value) = (\n    SELECT MAX(hero_attribute.attribute_value)\n    FROM superhero\n    JOIN publisher ON superhero.publisher_id = publisher.id\n    JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\n    JOIN attribute ON hero_attribute.attribute_id = attribute.id\n    WHERE attribute.attribute_name = 'durability'\n    AND publisher.publisher_name = 'Dark Horse Comics'\n)"}
{"770": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.superhero_name = 'Abraham Sapien'"}
{"771": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Flight'"}
{"772": "SELECT colour.colour AS eye_colour,\n       colour.colour AS hair_colour,\n       colour.colour AS skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'"}
{"773": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE hair_colour.colour = skin_colour.colour\nAND hair_colour.colour = eye_colour.colour"}
{"774": "SELECT race.race AS group\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'A-Bomb'"}
{"775": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2)) AS percentage_of_blue_female_superheroes FROM superhero WHERE gender_id = 2 AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');"}
{"776": "SELECT superhero.superhero_name, race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.full_name = 'Charles Chandler'"}
{"777": "SELECT gender.gender\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superhero.superhero_name = 'Agent 13'"}
{"778": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Adaptation'"}
{"779": "SELECT COUNT(*) AS power_count\nFROM hero_power\nJOIN superhero ON hero_power.hero_id = superhero.id\nWHERE superhero.superhero_name = 'Amazo'"}
{"780": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Hunter Zolomon'"}
{"781": "SELECT height_cm\nFROM superhero\nWHERE eye_colour_id IN (\n    SELECT id\n    FROM colour\n    WHERE colour = 'Amber'\n)"}
{"782": "SELECT superhero.superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black'"}
{"783": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id\nWHERE skin_colour.colour = 'Gold'"}
{"784": "SELECT superhero.full_name\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE race.race = 'Vampire'"}
{"785": "SELECT superhero_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'"}
{"786": "SELECT COUNT(DISTINCT hero_attribute.hero_id) AS num_heroes\nFROM hero_attribute\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nAND hero_attribute.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute\n    JOIN attribute ON hero_attribute.attribute_id = attribute.id\n    WHERE attribute.attribute_name = 'Strength'\n)"}
{"787": "SELECT race.race, alignment.alignment\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE superhero.superhero_name = 'Cameron Hicks'"}
{"788": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))) AS percentage_female_heroes_published_by_marvel_comics FROM superhero WHERE gender_id = 2 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');"}
{"789": "SELECT AVG(weight_kg)\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE race.race = 'Alien'"}
{"790": "SELECT SUM(s1.weight_kg) - SUM(s2.weight_kg) AS weight_difference\nFROM superhero AS s1\nJOIN superhero AS s2 ON s1.full_name = 'Emil Blonsky' AND s2.full_name = 'Charles Chandler';"}
{"791": "SELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name;"}
{"792": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Abomination'"}
{"793": "SELECT COUNT(*)\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE race.race = 'god/eternal'\nAND gender.gender = 'Male'"}
{"794": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nAND hero_attribute.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute\n    JOIN attribute ON hero_attribute.attribute_id = attribute.id\n    WHERE attribute.attribute_name = 'Speed'\n);"}
{"795": "SELECT COUNT(*) \nFROM superhero \nWHERE alignment_id = 3"}
{"796": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'"}
{"797": "SELECT superhero_name\nFROM superhero\nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id\nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id\nWHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'brown'"}
{"798": "SELECT publisher.publisher_name\nFROM publisher\nJOIN superhero ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')"}
{"799": "SELECT COUNT(*)\nFROM superhero\nLEFT JOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.id IS NULL"}
{"800": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage_of_superheroes_with_blue_eyes\nFROM superhero\nWHERE eye_colour_id = 7;"}
{"801": "SELECT CAST(COUNT(CASE WHEN gender_id = 1 THEN 1 END) AS FLOAT) / CAST(COUNT(CASE WHEN gender_id = 2 THEN 1 END) AS FLOAT) AS ratio FROM superhero"}
{"802": "SELECT superhero_name\nFROM superhero\nWHERE height_cm = (SELECT MAX(height_cm) FROM superhero);"}
{"803": "SELECT superpower.id\nFROM superpower\nWHERE power_name = 'cryokinesis'"}
{"804": "SELECT superhero_name\nFROM superhero\nWHERE id = 294;"}
{"805": "SELECT superhero.full_name\nFROM superhero\nWHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL;"}
{"806": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'"}
{"807": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.full_name = 'Helen Parr'"}
{"808": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.weight_kg = 108\nAND superhero.height_cm = 188"}
{"809": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.id = 38;"}
{"810": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.id = (\n    SELECT hero_id\n    FROM hero_attribute\n    WHERE attribute_value = (\n        SELECT MAX(attribute_value)\n        FROM hero_attribute\n    )\n)"}
{"811": "SELECT alignment.alignment, superpower.power_name\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Atom IV'"}
{"812": "SELECT superhero.full_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Blue'"}
{"813": "SELECT AVG(attribute_value)\nFROM hero_attribute\nINNER JOIN superhero ON hero_attribute.hero_id = superhero.id\nINNER JOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Neutral'"}
{"814": "SELECT colour.colour\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nJOIN colour ON superhero.skin_colour_id = colour.id\nWHERE attribute.attribute_value = 100\nAND attribute.attribute_name = 'skin_colour'"}
{"815": "SELECT COUNT(*) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN gender ON superhero.gender_id = gender.id WHERE alignment.alignment = 'Good' AND gender.gender = 'Female'"}
{"816": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nWHERE hero_attribute.attribute_value BETWEEN 75 AND 80;"}
{"817": "SELECT race.race\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour ON superhero.hair_colour_id = colour.id\nJOIN race ON superhero.race_id = race.id\nWHERE gender.gender = 'Male'\nAND colour.colour = 'blue'"}
{"818": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 2)) AS percentage_female_bad_superheroes\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE alignment_id = 2 AND gender_id = 2;"}
{"819": "SELECT COUNT(*) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1) FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;"}
{"820": "SELECT hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = 'Hulk'\nAND attribute.attribute_name = 'Strength'"}
{"821": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = 'Ajax'"}
{"822": "SELECT COUNT(*)\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN colour ON superhero.skin_colour_id = colour.id\nWHERE alignment.alignment = 'Bad'\nAND colour.colour = 'Green'"}
{"823": "SELECT COUNT(*)\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'"}
{"824": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name;"}
{"825": "SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force'"}
{"826": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'DC Comics'\nAND superhero.weight_kg = (\n    SELECT MAX(weight_kg)\n    FROM superhero\n    JOIN publisher ON superhero.publisher_id = publisher.id\n    WHERE publisher.publisher_name = 'DC Comics'\n)\nLIMIT 1"}
{"827": "SELECT AVG(height_cm)\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE race.race <> 'Human' AND publisher.publisher_name = 'Dark Horse Comics'"}
{"828": "SELECT COUNT(*)\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Speed'\nAND attribute.attribute_value = 100"}
{"829": "SELECT\n    SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS difference\nFROM\n    superhero\nJOIN\n    publisher ON superhero.publisher_id = publisher.id;"}
{"830": "SELECT attribute.attribute_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = 'Black Panther'\nAND hero_attribute.attribute_value = (\n    SELECT MIN(attribute_value)\n    FROM hero_attribute\n    WHERE hero_id = (\n        SELECT id\n        FROM superhero\n        WHERE superhero_name = 'Black Panther'\n    )\n)\nLIMIT 1;"}
{"831": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination'"}
{"832": "SELECT superhero_name\nFROM superhero\nWHERE height_cm = (\n    SELECT MAX(height_cm)\n    FROM superhero\n)"}
{"833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'"}
{"834": "SELECT (MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'George Lucas'), COUNT(publisher_name = 'George Lucas')), 100.0)) AS percentage_female_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE publisher.publisher_name = 'George Lucas'"}
{"835": "SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage_of_good_superheroes\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Good' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')"}
{"836": "SELECT COUNT(*) FROM superhero WHERE superhero_name LIKE 'John%';"}
{"837": "SELECT hero_id\nFROM hero_attribute\nWHERE attribute_value = (\n  SELECT MIN(attribute_value)\n  FROM hero_attribute\n)"}
{"838": "SELECT superhero.full_name FROM superhero WHERE superhero.superhero_name = 'Alien'"}
{"839": "SELECT superhero.full_name\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.weight_kg < 100\nAND colour.colour = 'brown'"}
{"840": "SELECT hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = 'Aquababy'"}
{"841": "SELECT superhero.weight_kg, race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.id = 40;"}
{"842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 4"}
{"843": "SELECT superhero.id\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Intelligence'"}
{"844": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.superhero_name = 'Blackwulf'"}
{"845": "SELECT superpower.power_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)\nGROUP BY superpower.power_name"}
{"846": "SELECT drivers.driverRef\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 18\nAND qualifying.q1 = (SELECT MAX(q1) FROM qualifying WHERE raceId = 18)\nLIMIT 5;"}
{"847": "SELECT drivers.surname\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 19 AND qualifying.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19 AND q2 IS NOT NULL)"}
{"848": "SELECT DISTINCT races.year\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.location = 'Shanghai'"}
{"849": "SELECT races.url\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Circuit de Barcelona-Catalunya'"}
{"850": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany'"}
{"851": "SELECT circuits.name\nFROM circuits\nJOIN constructors ON circuits.circuitId = constructors.constructorId\nWHERE constructors.name = 'Renault'"}
{"852": "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId NOT IN ( SELECT circuitId FROM circuits WHERE country IN ('Asia', 'Europe') )"}
{"853": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Spain'"}
{"854": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Australian Grand Prix';"}
{"855": "SELECT races.url\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Sepang International Circuit'"}
{"856": "SELECT time FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit' )"}
{"857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';"}
{"858": "SELECT circuits.country\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN constructorResults ON races.raceId = constructorResults.raceId\nJOIN constructors ON constructorResults.constructorId = constructors.constructorId\nWHERE races.raceId = 24\nAND constructorResults.points = 1"}
{"859": "SELECT q1\nFROM qualifying\nWHERE driverId = (\n  SELECT driverId\n  FROM drivers\n  WHERE forename = 'Bruno' AND surname = 'Senna'\n) AND raceId = 354;"}
{"860": "SELECT drivers.nationality\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.q2 = '0:01:40' AND qualifying.raceId = 355"}
{"861": "SELECT drivers.number\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.position = 1\nAND qualifying.q3 = '0:01:54'\nAND qualifying.raceId = 903;"}
{"862": "SELECT COUNT(*)\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND\npositionText != 'Finished'"}
{"863": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901"}
{"864": "SELECT COUNT(DISTINCT driverId)\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29')\nAND positionOrder > 0"}
{"865": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1;"}
{"866": "SELECT drivers.forename, drivers.surname, drivers.url\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE lapTimes.time = '0:01:27' AND races.raceId = 161;"}
{"867": "SELECT drivers.nationality\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 933\nAND results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933)"}
{"868": "SELECT location, lat, lng\nFROM circuits\nWHERE name = 'Malaysian Grand Prix';"}
{"869": "SELECT constructors.url\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructorStandings.raceId = 9\nORDER BY constructorStandings.points DESC\nLIMIT 1"}
{"870": "SELECT qualifying.q1\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.forename = 'Lucas' AND drivers.surname = 'di Grassi' AND qualifying.raceId = 345"}
{"871": "SELECT drivers.nationality\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.q2 = '0:01:15' AND qualifying.raceId = 347"}
{"872": "SELECT drivers.code\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 45 AND qualifying.q3 = '0:01:33'"}
{"873": "SELECT time\nFROM results\nWHERE raceId = 743\nAND driverId = (\n    SELECT driverId\n    FROM drivers\n    WHERE forename = 'Bruce'\n    AND surname = 'McLaren'\n)"}
{"874": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2"}
{"875": "SELECT seasons.url\nFROM seasons\nJOIN races ON seasons.year = races.year\nWHERE races.raceId = 901"}
{"876": "SELECT COUNT(DISTINCT driverId)\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29')"}
{"877": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 872\nAND results.time IS NOT NULL\nORDER BY drivers.dob DESC\nLIMIT 1;"}
{"878": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE results.raceId = 348\nAND results.time = (\nSELECT MIN(time)\nFROM results\nWHERE raceId = 348\n)"}
{"879": "SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.fastestLapSpeed = (\n    SELECT MAX(fastestLapSpeed)\n    FROM results\n)\nAND results.raceId = 348"}
{"880": "SELECT ((r1.fastestLapSpeed - r2.fastestLapSpeed) / r1.fastestLapSpeed) * 100 AS percentage\nFROM results r1\nJOIN results r2 ON r1.raceId = 853 AND r2.raceId = 854\nJOIN drivers d ON r1.driverId = d.driverId\nWHERE d.forename = 'Paul' AND d.surname = 'di Resta'"}
{"881": "SELECT (COUNT(DISTINCT driverId) * 100) / (SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16')) AS percentage FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16') AND time IS NOT NULL"}
{"882": "SELECT MIN(year) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit');"}
{"883": "SELECT COUNT(*) FROM races WHERE year = 2005"}
{"884": "SELECT r1.name\nFROM races r1\nWHERE strftime('%Y-%m', r1.date) = (\n    SELECT strftime('%Y-%m', MIN(r2.date))\n    FROM races r2\n)"}
{"885": "SELECT name, date\nFROM races\nWHERE year = 1999\nORDER BY round DESC\nLIMIT 1"}
{"886": "SELECT races.year, COUNT(races.raceId) AS num_races\nFROM races\nGROUP BY races.year\nORDER BY num_races DESC\nLIMIT 1;"}
{"887": "SELECT name\nFROM races\nWHERE year = 2017\nEXCEPT\nSELECT name\nFROM races\nWHERE year = 2000"}
{"888": "SELECT circuits.country, circuits.name, circuits.location\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nWHERE races.name = 'European Grand Prix'\nORDER BY races.year ASC\nLIMIT 1"}
{"889": "SELECT MAX(year)\nFROM seasons\nJOIN races ON seasons.year = races.year\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.circuitRef = 'brands_hatch'"}
{"890": "SELECT COUNT(DISTINCT seasons.year) AS num_seasons\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom' AND races.name = 'British Grand Prix'"}
{"891": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year = 2010 AND races.name = 'Singapore Grand Prix'\nORDER BY driverStandings.position;"}
{"892": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM drivers\nWHERE drivers.driverId = (\n    SELECT driverId\n    FROM driverStandings\n    WHERE points = (\n        SELECT MAX(points)\n        FROM driverStandings\n    )\n)"}
{"893": "SELECT drivers.forename, drivers.surname, driverStandings.points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE races.name = 'Chinese Grand Prix' AND seasons.year = 2017\nORDER BY driverStandings.points DESC\nLIMIT 3"}
{"894": "SELECT drivers.forename, drivers.surname, races.name, lapTimes.time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE lapTimes.time = (\nSELECT MIN(time)\nFROM lapTimes\n)"}
{"895": "SELECT AVG(lapTimes.time)\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.name = 'Chinese Grand Prix' AND races.year = 2009;"}
{"896": "SELECT (COUNT(raceId) * 100.0 / (SELECT COUNT(raceId) FROM races WHERE year >= 2010 AND circuitId = 1)) AS percentage\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.surname = 'Hamilton' AND races.year >= 2010 AND results.position > 1;"}
{"897": "SELECT drivers.forename AS driver_name,\n       drivers.nationality AS nationality,\n       AVG(driverStandings.points) AS average_points\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nGROUP BY drivers.driverId\nHAVING COUNT(driverStandings.wins) = (\n    SELECT MAX(win_count)\n    FROM (\n        SELECT COUNT(wins) AS win_count\n        FROM driverStandings\n        GROUP BY driverId\n    )\n)\nORDER BY average_points DESC\nLIMIT 1;"}
{"898": "SELECT drivers.forename\nFROM drivers\nWHERE drivers.nationality = 'Japanese'\nORDER BY drivers.dob DESC\nLIMIT 1"}
{"899": "SELECT circuits.name\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year >= 1990 AND seasons.year <= 2000\nGROUP BY circuits.name\nHAVING COUNT(DISTINCT races.raceId) = 4"}
{"900": "SELECT circuits.name, circuits.location, races.name\nFROM circuits\nINNER JOIN races ON circuits.circuitId = races.circuitId\nWHERE circuits.country = 'USA' AND races.year = 2006"}
{"901": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE strftime('%m', races.date) = '09' AND strftime('%Y', races.date) = '2005'"}
{"902": "SELECT races.name\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND results.position < 10"}
{"903": "SELECT COUNT(*)\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' AND circuits.name = 'Sepang International Circuit' AND results.position = 1"}
{"904": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Schumacher'\nORDER BY results.milliseconds ASC\nLIMIT 1;"}
{"905": "SELECT AVG(points)\nFROM driverStandings\nJOIN drivers ON driverStandings.driverId = drivers.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000"}
{"906": "SELECT races.name, results.points\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND races.year = (SELECT MIN(year) FROM races)"}
{"907": "SELECT races.name, circuits.country\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year = 2017\nORDER BY races.date;"}
{"908": "SELECT races.name, races.year, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nORDER BY races.laps DESC\nLIMIT 1"}
{"909": "SELECT (COUNT(races) WHERE country = 'Germany' AND name = 'European Grand Prix') / COUNT(races WHERE name = 'European Grand Prix') * 100 AS percentage"}
{"910": "SELECT lat, lng FROM circuits WHERE circuitRef = 'silverstone'"}
{"911": "SELECT name\nFROM circuits\nWHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring')\nORDER BY lat DESC\nLIMIT 1;"}
{"912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'"}
{"913": "SELECT c.country\nFROM circuits c\nJOIN (\n  SELECT MAX(alt) AS max_alt\n  FROM circuits\n) m ON c.alt = m.max_alt;"}
{"914": "SELECT COUNT(*)\nFROM drivers\nWHERE code IS NULL"}
{"915": "SELECT nationality\nFROM drivers\nWHERE dob = (SELECT MIN(dob) FROM drivers)\nLIMIT 1"}
{"916": "SELECT drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE drivers.nationality = 'italian'"}
{"917": "SELECT constructors.url\nFROM drivers\nJOIN constructors ON drivers.constructorId = constructors.constructorId\nWHERE drivers.forename = 'Anthony' AND drivers.surname = 'Davidson'"}
{"918": "SELECT driverRef\nFROM drivers\nWHERE driverId = (\n  SELECT driverId\n  FROM drivers\n  WHERE forename = 'Lewis' AND surname = 'Hamilton'\n)"}
{"919": "SELECT circuits.name\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year = 2009\nAND races.name LIKE '%Spanish Grand Prix%'"}
{"920": "SELECT seasons.year\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE circuits.name = 'Silverstone Circuit'\nAND circuits.country = 'United Kingdom'\nAND circuits.circuitRef = 'silverstone';"}
{"921": "SELECT races.url\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Silverstone Circuit'"}
{"922": "SELECT time FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year >= 2010 AND races.year <= 2019 AND circuits.circuitRef = 'abu_dhabi'"}
{"923": "SELECT COUNT(*)\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Italy'"}
{"924": "SELECT races.date\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Barcelona-Catalunya'"}
{"925": "SELECT circuits.url\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE races.name = 'Spanish Grand Prix' AND seasons.year = 2009"}
{"926": "SELECT MIN(results.fastestLapTime) AS fastest_lap_time\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'"}
{"927": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)"}
{"928": "SELECT drivers.driverRef\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = 1;"}
{"929": "SELECT races.name\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'"}
{"930": "SELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton'\nORDER BY results.rank ASC\nLIMIT 1"}
{"931": "SELECT MAX(fastestLapSpeed)\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)\nAND fastestLapSpeed IS NOT NULL"}
{"932": "SELECT DISTINCT seasons.year\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE drivers.forename = 'Lewis'\nAND drivers.surname = 'Hamilton'"}
{"933": "SELECT results.positionOrder\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Australian Grand Prix' AND races.year = 2008"}
{"934": "SELECT drivers.forename, drivers.surname\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.grid = 4"}
{"935": "SELECT COUNT(DISTINCT driverId)\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)\nAND position IS NOT NULL"}
{"936": "SELECT lapTimes.time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix'\nORDER BY lapTimes.milliseconds ASC\nLIMIT 1"}
{"937": "SELECT results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.position = 2"}
{"938": "SELECT drivers.forename || ' ' || drivers.surname AS champion, drivers.url\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nJOIN races ON driverStandings.raceId = races.raceId\nWHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND driverStandings.position = 1"}
{"939": "SELECT COUNT(*)\nFROM drivers\nWHERE nationality = 'American' AND driverId IN (\n  SELECT driverId\n  FROM races\n  JOIN results ON races.raceId = results.raceId\n  WHERE races.year = 2008 AND races.name = 'Australian Grand Prix'\n)"}
{"940": "SELECT COUNT(DISTINCT driverId) AS total_participants FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND position IS NOT NULL"}
{"941": "SELECT SUM(results.points) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'"}
{"942": "SELECT AVG(strftime('%s', fastestLapTime))\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'"}
{"943": "SELECT COUNT(DISTINCT driverId) * 100.0 / (SELECT COUNT(DISTINCT driverId) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL"}
{"944": "SELECT ((results.time - (SELECT MIN(results.time) FROM results WHERE results.position = 1 AND results.raceId = (SELECT raceId FROM races WHERE races.name = 'Australian Grand Prix' AND races.year = 2008))) / (results.time + (SELECT MIN(results.time) FROM results WHERE results.position = (SELECT MAX(results.position) FROM results WHERE results.raceId = (SELECT raceId FROM races WHERE races.name = 'Australian Grand Prix' AND races.year = 2008))) - (SELECT MIN(results.time) FROM results WHERE results.position = 1 AND results.raceId = (SELECT raceId FROM races WHERE races.name = 'Australian Grand Prix' AND races.year = 2008))))) * 100 AS percentage_faster FROM results WHERE results.raceId = (SELECT raceId FROM races WHERE races.name = 'Australian Grand Prix' AND races.year = 2008) AND results.time IS NOT NULL AND results.position = (SELECT MAX(results.position) FROM results WHERE results.raceId = (SELECT raceId FROM races WHERE races.name = 'Australian Grand Prix' AND races.year = 2008))"}
{"945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'"}
{"946": "SELECT lat, lng FROM circuits WHERE country = 'USA'"}
{"947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31'"}
{"948": "SELECT AVG(constructorResults.points) FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId JOIN races ON constructorResults.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE constructors.nationality = 'British'"}
{"949": "SELECT\n  constructors.name\nFROM\n  constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nGROUP BY\n  constructors.name\nORDER BY\n  MAX(constructorStandings.points) DESC\nLIMIT 1;"}
{"950": "SELECT constructors.name\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE constructorStandings.points = 0\nAND constructorStandings.raceId = 291"}
{"951": "SELECT COUNT(DISTINCT constructors.constructorId) AS Japanese_Constructors_With_0_Points\nFROM constructors\nLEFT JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nLEFT JOIN races ON constructorStandings.raceId = races.raceId\nLEFT JOIN seasons ON races.year = seasons.year\nWHERE constructors.nationality = 'Japanese' AND constructorStandings.points = 0\nGROUP BY constructors.constructorId\nHAVING COUNT(DISTINCT races.raceId) = 2;"}
{"952": "SELECT constructors.name\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nWHERE constructorStandings.position = 1"}
{"953": "SELECT COUNT(DISTINCT constructors.constructorId) AS French_Constructors\nFROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nJOIN races ON constructorResults.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'France' AND lap > 50"}
{"954": "SELECT (COUNT(DISTINCT results.driverId) * 100) / (SELECT COUNT(DISTINCT results.driverId) FROM results JOIN races ON results.raceId = races.raceId WHERE results.time IS NOT NULL AND races.year BETWEEN 2007 AND 2009) FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE results.time IS NOT NULL AND races.year BETWEEN 2007 AND 2009 AND drivers.nationality = 'Japanese'"}
{"955": "SELECT races.year, AVG(strftime('%s', results.time)) AS average_time\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN driverStandings ON races.raceId = driverStandings.raceId\nWHERE driverStandings.position = 1\nAND results.time IS NOT NULL\nGROUP BY races.year"}
{"956": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nWHERE drivers.dob > 1975 AND driverStandings.position = 2"}
{"957": "SELECT COUNT(*)\nFROM drivers\nWHERE nationality = 'Italian' AND driverId IN (SELECT driverId FROM results WHERE position IS NULL)"}
{"958": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n)"}
{"959": "SELECT MAX(results.fastestLap)\nFROM results\nJOIN driverStandings ON results.driverId = driverStandings.driverId\nJOIN races ON results.raceId = races.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year = 2009\nAND driverStandings.position = 1"}
{"960": "SELECT AVG(fastestLapSpeed)\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Spanish Grand Prix'\nAND races.year = 2009"}
{"961": "SELECT races.name, seasons.year\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE results.milliseconds IS NOT NULL\nORDER BY results.milliseconds ASC\nLIMIT 1;"}
{"962": "SELECT (COUNT(driverId) * 100) / (SELECT COUNT(driverId) FROM drivers WHERE strftime('%Y', dob) < '1985') FROM lapTimes WHERE lap > 50 AND raceId IN (SELECT raceId FROM races WHERE strftime('%Y', date) BETWEEN '2000' AND '2005');"}
{"963": "SELECT COUNT(*)\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE drivers.nationality = 'French' AND lapTimes.time < '02:00.00'"}
{"964": "SELECT *\nFROM drivers\nWHERE nationality = 'America'"}
{"965": "SELECT raceId FROM races WHERE year = 2009"}
{"966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;"}
{"967": "SELECT COUNT(*) AS num_netherlandic_drivers\nFROM drivers\nWHERE nationality = 'Netherlands'\nAND driverId IN (\n  SELECT driverId\n  FROM drivers\n  ORDER BY dob ASC\n  LIMIT 3\n)"}
{"968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'"}
{"969": "SELECT COUNT(*)\nFROM drivers\nWHERE nationality = 'Australian' AND strftime('%Y', dob) = '1980'"}
{"970": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1990-12-31'\nGROUP BY drivers.driverId\nORDER BY MIN(lapTimes.time)\nLIMIT 3;"}
{"971": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob LIMIT 1;"}
{"972": "SELECT drivers.driverId, drivers.code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE drivers.dob = 1971\nORDER BY results.fastestLapTime ASC\nLIMIT 1"}
{"973": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN lapTimes ON drivers.driverId = lapTimes.driverId\nWHERE drivers.nationality = 'Spanish' AND drivers.dob < '1982'\nGROUP BY drivers.driverId\nHAVING lapTimes.time = MAX(lapTimes.time)\nORDER BY lapTimes.time DESC\nLIMIT 10"}
{"974": "SELECT races.year\nFROM races\nJOIN results ON races.raceId = results.raceId\nWHERE results.fastestLapTime IS NOT NULL\nORDER BY results.fastestLapTime ASC\nLIMIT 1"}
{"975": "SELECT races.year\nFROM races\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE lapTimes.time = (\n    SELECT MIN(time)\n    FROM lapTimes\n)"}
{"976": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY milliseconds ASC LIMIT 5"}
{"977": "SELECT COUNT(*)\nFROM results\nWHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL;"}
{"978": "SELECT COUNT(*) AS circuit_count, circuits.location, circuits.lat, circuits.lng\nFROM circuits\nWHERE circuits.country = 'Austria'\nGROUP BY circuits.location, circuits.lat, circuits.lng"}
{"979": "SELECT races.round\nFROM races\nJOIN results ON races.raceId = results.raceId\nWHERE results.time IS NOT NULL\nGROUP BY races.round\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"980": "SELECT drivers.driverRef, drivers.nationality, drivers.dob\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.q2 IS NOT NULL\nAND qualifying.raceId = 23"}
{"981": "SELECT races.year, races.name, races.date, races.time\nFROM races\nJOIN qualifying ON races.raceId = qualifying.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.driverId = (SELECT driverId FROM drivers ORDER BY dob ASC LIMIT 1)"}
{"982": "SELECT COUNT(DISTINCT drivers.driverId)\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN status ON results.statusId = status.statusId\nWHERE drivers.nationality = 'American' AND status.status = 'Disqualified'"}
{"983": "SELECT constructors.name, constructors.url\nFROM constructors\nWHERE constructors.nationality = 'Italian'\nORDER BY constructorStandings.points DESC\nLIMIT 1;"}
{"984": "SELECT constructors.url\nFROM constructors\nJOIN (\nSELECT constructorId,\nSUM(wins) AS total_wins\nFROM constructorStandings\nGROUP BY constructorId\n) AS standings\nON constructors.constructorId = standings.constructorId\nORDER BY standings.total_wins DESC\nLIMIT 1"}
{"985": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE races.name = 'French Grand Prix' AND lapTimes.lap = 3\nORDER BY lapTimes.time DESC\nLIMIT 1;"}
{"986": "SELECT races.name, MIN(lapTimes.milliseconds) AS fastest_lap_time\nFROM races\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE lapTimes.lap = 1\nGROUP BY races.name\nORDER BY fastest_lap_time ASC\nLIMIT 1;"}
{"987": "SELECT AVG(fastestLapTime)\nFROM results\nWHERE raceId IN (\n  SELECT raceId\n  FROM races\n  WHERE year = 2006\n  AND name = 'United States Grand Prix'\n)\nAND rank < 11;"}
{"988": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY drivers.driverId\nORDER BY AVG(pitStops.duration)\nLIMIT 5;"}
{"989": "SELECT drivers.forename || ' ' || drivers.surname AS champion, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1"}
{"990": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nJOIN races ON constructorStandings.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 AND constructorStandings.position = 1;"}
{"991": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, drivers.dob AS date_of_birth\nFROM drivers\nWHERE drivers.nationality = 'Austrian'\nAND drivers.dob BETWEEN '1981-01-01' AND '1991-12-31'"}
{"992": "SELECT\ndrivers.forename || ' ' || drivers.surname AS full_name,\ndrivers.url AS wikipedia_link,\ndrivers.dob AS date_of_birth\nFROM drivers\nWHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1971-01-01' AND '1985-12-31'\nORDER BY drivers.dob DESC;"}
{"993": "SELECT location, country, lat, lng FROM circuits WHERE circuits.circuitRef = 'hungaroring'"}
{"994": "SELECT constructorStandings.constructorId,\n       MAX(constructorStandings.points) AS score,\n       constructors.name,\n       constructors.nationality\nFROM constructorStandings\nJOIN races ON constructorStandings.raceId = races.raceId\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nWHERE races.name = 'Monaco Grand Prix'\n  AND races.year BETWEEN 1980 AND 2010\nGROUP BY constructorStandings.constructorId\nORDER BY score DESC\nLIMIT 1"}
{"995": "SELECT AVG(results.points)\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Turkey'\nAND drivers.driverRef = 'hamilton';"}
{"996": "SELECT COUNT(raceId) / 10\nFROM races\nWHERE date BETWEEN '2000-01-01' AND '2009-12-31'"}
{"997": "SELECT nationality\nFROM drivers\nGROUP BY nationality\nHAVING COUNT(*) = (\n    SELECT MAX(driver_count)\n    FROM (\n        SELECT COUNT(*) as driver_count\n        FROM drivers\n        GROUP BY nationality\n    )\n);"}
{"998": "SELECT COUNT(*) FROM results WHERE position = 1 AND points = 91"}
{"999": "SELECT races.name\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nWHERE results.fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n)"}
{"1000": "SELECT circuits.location || ', ' || circuits.country AS full_location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.date = (SELECT MAX(date) FROM races)"}
{"1001": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE races.name = 'Marina Bay Street Circuit'\nAND races.year = 2008\nAND qualifying.position = 1\nAND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = races.raceId)"}
{"1002": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, drivers.nationality, races.name AS first_race_name FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)"}
{"1003": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') AND driverId = (SELECT driverId FROM (SELECT driverId, COUNT(*) as num_accidents FROM results WHERE statusId = 3 GROUP BY driverId ORDER BY num_accidents DESC LIMIT 1) AS temp)"}
{"1004": "SELECT drivers.forename || ' ' || drivers.surname AS full_name, COUNT(results.wins) AS total_wins FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE drivers.dob = (SELECT MIN(dob) FROM drivers) GROUP BY drivers.forename, drivers.surname"}
{"1005": "SELECT MAX(duration) AS longest_time\nFROM pitStops\nGROUP BY driverId\nORDER BY longest_time DESC\nLIMIT 1"}
{"1006": "SELECT MIN(lapTimes.time) FROM lapTimes JOIN circuits ON lapTimes.circuitId = circuits.circuitId"}
{"1007": "SELECT MAX(duration) AS longest_time\nFROM pitStops\nWHERE driverId = (\n    SELECT driverId\n    FROM drivers\n    WHERE forename = 'Lewis' AND surname = 'Hamilton'\n);"}
{"1008": "SELECT lap\nFROM pitStops\nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2011)\nAND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')"}
{"1009": "SELECT pitStops.time\nFROM pitStops\nJOIN races ON pitStops.raceId = races.raceId\nJOIN drivers ON pitStops.driverId = drivers.driverId\nWHERE races.year = 2011\nAND races.name = 'Australian Grand Prix'"}
{"1010": "SELECT lapTimes.time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND lapTimes.time = (\n    SELECT MIN(time)\n    FROM lapTimes\n    JOIN drivers ON lapTimes.driverId = drivers.driverId\n    WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n)\nLIMIT 1"}
{"1011": "SELECT drivers.forename || ' ' || drivers.surname AS driver_name\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE lapTimes.time = (\nSELECT MIN(time)\nFROM lapTimes\n)"}
{"1012": "SELECT circuits.name, results.position\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nAND results.time = (SELECT MIN(time) FROM results WHERE driverId = drivers.driverId)"}
{"1013": "SELECT lapTimes.time\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Austrian Grand Prix Circuit'\nORDER BY lapTimes.milliseconds ASC\nLIMIT 1;"}
{"1014": "SELECT lapTimes.time\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Italy'"}
{"1015": "SELECT races.name\nFROM races\nINNER JOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE lapTimes.time = (\n  SELECT MIN(time)\n  FROM lapTimes\n) AND races.circuitRef = 'red_bull_ring';"}
{"1016": "SELECT pitStops.duration\nFROM pitStops\nJOIN races ON pitStops.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Austrian Grand Prix Circuit'\nAND pitStops.driverId = (SELECT driverId FROM lapTimes WHERE raceId = races.raceId ORDER BY milliseconds ASC LIMIT 1)"}
{"1017": "SELECT circuits.lat, circuits.lng\nFROM circuits\nJOIN lapTimes ON circuits.circuitId = lapTimes.circuitId\nWHERE lapTimes.time = '1:29.488'\nGROUP BY circuits.lat, circuits.lng"}
{"1018": "SELECT AVG(p.milliseconds) AS average_pitstop_time\nFROM pitStops p\nJOIN drivers d ON p.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';"}
{"1019": "SELECT AVG(lapTimes.milliseconds)\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Italy'"}
{"1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)"}
{"1021": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);"}
{"1022": "SELECT preferred_foot\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.potential = (SELECT MIN(potential) FROM Player_Attributes)"}
{"1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low'"}
{"1024": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;"}
{"1025": "SELECT League.name\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE Match.season = '2015/2016'\nGROUP BY Match.league_id\nORDER BY SUM(Match.home_team_goal + Match.away_team_goal) DESC\nLIMIT 1"}
{"1026": "SELECT Match.home_team_api_id\nFROM Match\nWHERE Match.season = '2015/2016'\nAND (Match.home_team_goal - Match.away_team_goal) < 0\nGROUP BY Match.home_team_api_id\nORDER BY COUNT(*) ASC\nLIMIT 1;"}
{"1027": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY Player_Attributes.penalties DESC\nLIMIT 10"}
{"1028": "SELECT away_team_api_id\nFROM Match\nWHERE league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League')\nAND season = '2009/2010'\nAND (away_team_goal - home_team_goal) > 0\nGROUP BY away_team_api_id\nORDER BY COUNT(*) DESC\nLIMIT 1"}
{"1029": "SELECT Team.team_long_name, Team_Attributes.buildUpPlaySpeed\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.buildUpPlaySpeed = (\n    SELECT MAX(buildUpPlaySpeed)\n    FROM Team_Attributes\n)\nORDER BY Team_Attributes.buildUpPlaySpeed DESC\nLIMIT 4"}
{"1030": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY Match.league_id HAVING SUM(home_team_goal = away_team_goal) = ( SELECT MAX(SUM(home_team_goal = away_team_goal)) FROM Match WHERE season = '2015/2016' GROUP BY league_id )"}
{"1031": "SELECT\n   Player.player_name,\n   (strftime('%Y', 'now') - strftime('%Y', Player.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', Player.birthday)) AS age\nFROM\n   Player_Attributes\nJOIN\n   Player ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE\n   Player_Attributes.sprint_speed >= 97\n   AND Player_Attributes.date >= '2013-01-01 00:00:00'\n   AND Player_Attributes.date <= '2015-12-31 00:00:00'"}
{"1032": "SELECT League.name, COUNT(Match.id) AS num_matches\nFROM Match\nJOIN League ON Match.league_id = League.id\nGROUP BY League.name\nORDER BY num_matches DESC\nLIMIT 1;"}
{"1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';"}
{"1034": "SELECT Player_Attributes.player_api_id\nFROM Player_Attributes\nWHERE Player_Attributes.date LIKE '2010%'\nAND Player_Attributes.overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE Player_Attributes.date LIKE '2010%')"}
{"1035": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60"}
{"1036": "SELECT team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL)\nAND strftime('%Y', Team_Attributes.date) = '2012'"}
{"1037": "SELECT (COUNT(player_fifa_api_id) * 1.0 / COUNT(*)) * 100\nFROM Player\nWHERE preferred_foot = 'left' AND birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'"}
{"1038": "SELECT League.name, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals\nFROM League\nJOIN Match ON League.id = Match.league_id\nGROUP BY League.name\nORDER BY total_goals ASC\nLIMIT 5;"}
{"1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')"}
{"1040": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height > 180\nGROUP BY Player.player_api_id\nORDER BY AVG(Player_Attributes.heading_accuracy) DESC\nLIMIT 10"}
{"1041": "SELECT Team.team_long_name\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.buildUpPlayDribblingClass = 'Normal'\nAND Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-01-31 00:00:00'\nGROUP BY Team.team_long_name\nHAVING AVG(Team_Attributes.chanceCreationPassing) < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes)\nORDER BY AVG(Team_Attributes.chanceCreationPassing) DESC;"}
{"1042": "SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)"}
{"1043": "SELECT team_short_name\nFROM Team\nWHERE team_long_name = 'Queens Park Rangers'"}
{"1044": "SELECT player_name\nFROM Player\nWHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10';"}
{"1045": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Franco Zennaro')"}
{"1046": "SELECT Team_Attributes.buildUpPlayPositioningClass\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team.team_long_name = 'ADO Den Haag'"}
{"1047": "SELECT heading_accuracy\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Francois Affolter'\n)\nAND date = '2014-09-18 00:00:00'"}
{"1048": "SELECT overall_rating\nFROM Player_Attributes\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Gabriel Tamas'\n)\nAND strftime('%Y', date) = '2011'"}
{"1049": "SELECT COUNT(*)\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Scotland Premier League'\nAND Match.season = '2015/2016'"}
{"1050": "SELECT preferred_foot FROM Player WHERE birthday = (SELECT MAX(birthday) FROM Player)"}
{"1051": "SELECT Player.player_name FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)"}
{"1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND attacking_work_rate LIKE '%left%'"}
{"1053": "SELECT Team.team_short_name\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.chanceCreationPassingClass = 'Risky'"}
{"1054": "SELECT defensive_work_rate\nFROM Player_Attributes\nWHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'David Wilson')"}
{"1055": "SELECT Player.birthday\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)"}
{"1056": "SELECT League.name\nFROM League\nJOIN Country ON League.country_id = Country.id\nWHERE Country.name = 'Netherlands'"}
{"1057": "SELECT AVG(home_team_goal)\nFROM Match\nJOIN Country ON Match.country_id = Country.id\nWHERE Country.name = 'Poland'\nAND Match.season = '2010/2011';"}
{"1058": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.height = (SELECT MAX(height) FROM Player)\n   OR Player.height = (SELECT MIN(height) FROM Player)\nGROUP BY Player.player_name\nHAVING AVG(Player_Attributes.finishing) = (SELECT MAX(AVG(Player_Attributes.finishing))\n                                           FROM Player\n                                           JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\n                                           WHERE Player.height = (SELECT MAX(height) FROM Player))\n   OR AVG(Player_Attributes.finishing) = (SELECT MAX(AVG(Player_Attributes.finishing))\n                                          FROM Player\n                                          JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\n                                          WHERE Player.height = (SELECT MIN(height) FROM Player))"}
{"1059": "SELECT player_name\nFROM Player\nWHERE height > 180;"}
{"1060": "SELECT COUNT(*)\nFROM Player\nWHERE strftime('%Y', birthday) > '1990'"}
{"1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;"}
{"1062": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating > 80\nAND strftime('%Y', Player_Attributes.date) BETWEEN '2008' AND '2010'"}
{"1063": "SELECT Player_Attributes.potential\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Aaron Doran'"}
{"1064": "SELECT player_name\nFROM Player\nWHERE preferred_foot = 'left';"}
{"1065": "SELECT team_long_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Fast'"}
{"1066": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_short_name = 'CLB')"}
{"1067": "SELECT Team.team_short_name\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.buildUpPlayPassing > 70"}
{"1068": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE strftime('%Y', date) BETWEEN '2010' AND '2015' AND height > 170"}
{"1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;"}
{"1070": "SELECT Country.name\nFROM League\nJOIN Country ON League.country_id = Country.id\nWHERE League.name = 'Italy Serie A'"}
{"1071": "SELECT Team.team_short_name\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team_Attributes.buildUpPlaySpeed = 31\nAND Team_Attributes.buildUpPlayDribbling = 53\nAND Team_Attributes.buildUpPlayPassing = 32"}
{"1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');"}
{"1073": "SELECT COUNT(*)\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Germany 1. Bundesliga'\nAND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10'"}
{"1074": "SELECT Team.team_short_name\nFROM Team\nJOIN Match ON Team.team_api_id = Match.home_team_api_id\nWHERE Match.home_team_goal = 10"}
{"1075": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.balance = (SELECT MAX(balance) FROM Player_Attributes) AND Player_Attributes.potential = 61"}
{"1076": "SELECT AVG(ball_control) AS avg_ball_control\nFROM Player_Attributes\nWHERE player_name IN ('Abdou Diallo', 'Aaron Appindangoye')\nGROUP BY player_name\nHAVING COUNT(DISTINCT player_name) = 2;"}
{"1077": "SELECT team_long_name\nFROM Team\nWHERE team_short_name = 'GEN'"}
{"1078": "SELECT player_name FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' ORDER BY birthday ASC LIMIT 1"}
{"1079": "SELECT player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1;"}
{"1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low' AND player_api_id IN ( SELECT player_api_id FROM Player WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'left' ) )"}
{"1081": "SELECT Country.name\nFROM League\nJOIN Country ON League.country_id = Country.id\nWHERE League.name = 'Belgium Jupiler League'"}
{"1082": "SELECT name\nFROM League\nWHERE country_id IN (SELECT id FROM Country WHERE name = 'Germany')"}
{"1083": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n)"}
{"1084": "SELECT COUNT(*) FROM Player_Attributes WHERE strftime('%Y', birthday)<'1986' AND defensive_work_rate = 'high' AND preferred_foot = 'right'"}
{"1085": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\nORDER BY Player_Attributes.crossing DESC\nLIMIT 1;"}
{"1086": "SELECT heading_accuracy\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Ariel Borysiuk'\n)"}
{"1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volleys > 70;"}
{"1088": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.volleys > 70\nAND Player_Attributes.dribbling > 70"}
{"1089": "SELECT COUNT(*)\nFROM Match\nJOIN Country ON Match.country_id = Country.id\nWHERE Match.season = '2008/2009' AND Country.name = 'Belgium'"}
{"1090": "SELECT Player_Attributes.long_passing\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nORDER BY Player.birthday ASC\nLIMIT 1"}
{"1091": "SELECT COUNT(*)\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League'\nAND strftime('%Y', Match.date) = '2009'\nAND strftime('%m', Match.date) = '04'"}
{"1092": "SELECT league_id\nFROM Match\nWHERE season = '2008/2009'\nGROUP BY league_id\nORDER BY COUNT(*) DESC\nLIMIT 1;"}
{"1093": "SELECT id, AVG(overall_rating) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986' GROUP BY id;"}
{"1094": "SELECT ((pa.overall_rating - pb.overall_rating) / pb.overall_rating) * 100 AS percentage_higher\nFROM Player_Attributes AS pa\nJOIN Player AS a ON pa.player_api_id = a.player_api_id\nJOIN Player_Attributes AS pb ON pb.player_api_id = a.player_api_id\nWHERE a.player_name = 'Ariel Borysiuk' AND pb.player_name = 'Paulin Puel';"}
{"1095": "SELECT AVG(TA.buildUpPlaySpeed)\nFROM Team_Attributes AS TA\nJOIN Team AS T ON TA.team_api_id = T.team_api_id\nWHERE T.team_long_name = 'Heart of Midlothian'"}
{"1096": "SELECT AVG(T1.overall_rating)\nFROM Player_Attributes AS T1\nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.player_name = 'Pietro Marino'"}
{"1097": "SELECT SUM(crossing) AS total_crossing_score\nFROM Player_Attributes AS T1\nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.player_name = 'Aaron Lennox'"}
{"1098": "SELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing_score, chanceCreationPassingClass AS classification FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Ajax')"}
{"1099": "SELECT preferred_foot\nFROM Player\nWHERE player_name = 'Abdou Diallo'"}
{"1100": "SELECT MAX(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Dorlan Pabon')"}
{"1101": "SELECT AVG(away_team_goal)\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Parma'\nAND Match.country_id = (SELECT id FROM Country WHERE name = 'Italy')\nAND Match.away_team_goal IS NOT NULL"}
{"1102": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date = '2016-06-23'\nORDER BY Player.birthday ASC\nLIMIT 1"}
{"1103": "SELECT Player_Attributes.overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date = '2016-02-04 00:00:00'"}
{"1104": "SELECT potential\nFROM Player_Attributes\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Francesco Parravicini'\n)\nAND date = '2010-08-30 00:00:00'"}
{"1105": "SELECT attacking_work_rate\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore')\nAND date = '2015-05-01 00:00:00'"}
{"1106": "SELECT Player_Attributes.defensive_work_rate\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Kevin Berigaud' AND Player_Attributes.date = '2013-02-22 00:00:00'"}
{"1107": "SELECT date\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')\nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))"}
{"1108": "SELECT buildUpPlaySpeedClass\nFROM Team_Attributes\nWHERE team_api_id IN (\n    SELECT team_api_id\n    FROM Team\n    WHERE team_long_name = 'Willem II'\n) AND date = '2012-02-22 00:00:00'"}
{"1109": "SELECT buildUpPlayDribblingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_short_name = 'LEI'\nAND Team_Attributes.date = '2015-09-10 00:00:00'\nAND Team_Attributes.buildUpPlayDribblingClass IS NOT NULL"}
{"1110": "SELECT buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date = '2010-02-22'"}
{"1111": "SELECT buildUpPlayPassingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'PEC Zwolle' AND Team_Attributes.date = '2013-09-20 00:00:00'"}
{"1112": "SELECT Team_Attributes.buildUpPlayCrossingClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Hull City'\nAND Team_Attributes.date = '2010-02-22 00:00:00'"}
{"1113": "SELECT defenceAggressionClass\nFROM Team_Attributes\nWHERE team_api_id = (\n    SELECT team_api_id\n    FROM Team\n    WHERE team_long_name = 'Hannover 96'\n) AND date = '2015-09-10 00:00:00'"}
{"1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'"}
{"1115": "SELECT ((pd1.overall_rating - pd2.overall_rating) / pd1.overall_rating) * 100 AS percentage\nFROM Player_Attributes AS pd1\nJOIN Player_Attributes AS pd2 ON pd1.player_api_id = pd2.player_api_id\nJOIN Player AS p1 ON pd1.player_api_id = p1.player_api_id\nJOIN Player AS p2 ON pd2.player_api_id = p2.player_api_id\nWHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pd1.date = '2013-07-12'"}
{"1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5;"}
{"1117": "SELECT Player.player_api_id\nFROM Player\nORDER BY Player.weight DESC\nLIMIT 10"}
{"1118": "SELECT player_name FROM Player WHERE date('now') - date(birthday) >= 35"}
{"1119": "SELECT COUNT(home_team_goal) AS home_goals\nFROM Match\nWHERE home_player_1 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_2 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_3 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_4 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_5 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_6 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_7 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_8 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_9 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_10 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')\n   OR home_player_11 IN (SELECT id FROM Player WHERE player_name = 'Aaron Lennon')"}
{"1120": "SELECT SUM(M.away_team_goal) AS total_away_goals\nFROM Match AS M\nJOIN Player AS P ON M.away_player_1 = P.id OR M.away_player_2 = P.id OR M.away_player_3 = P.id OR M.away_player_4 = P.id OR M.away_player_5 = P.id OR M.away_player_6 = P.id OR M.away_player_7 = P.id OR M.away_player_8 = P.id OR M.away_player_9 = P.id OR M.away_player_10 = P.id OR M.away_player_11 = P.id\nWHERE P.player_name = 'Daan Smith' OR P.player_name = 'Filipe Ferreira'"}
{"1121": "SELECT SUM(home_team_goal) AS total_home_goals\nFROM Match\nJOIN Player ON (Match.home_player_1 = Player.player_api_id OR\n                Match.home_player_2 = Player.player_api_id OR\n                Match.home_player_3 = Player.player_api_id OR\n                Match.home_player_4 = Player.player_api_id OR\n                Match.home_player_5 = Player.player_api_id OR\n                Match.home_player_6 = Player.player_api_id OR\n                Match.home_player_7 = Player.player_api_id OR\n                Match.home_player_8 = Player.player_api_id OR\n                Match.home_player_9 = Player.player_api_id OR\n                Match.home_player_10 = Player.player_api_id OR\n                Match.home_player_11 = Player.player_api_id)\nWHERE (julianday('now') - julianday(Player.birthday)) / 365 <= 30;"}
{"1122": "SELECT player_name\nFROM Player\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player_Attributes\n    ORDER BY overall_rating DESC\n    LIMIT 10\n);"}
{"1123": "SELECT Player.player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)"}
{"1124": "SELECT player_name\nFROM Player\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player_Attributes\n    WHERE attacking_work_rate = 'high'\n)"}
{"1125": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.finishing = 1\nORDER BY strftime('%Y-%m-%d', 'now') - strftime('%Y-%m-%d', Player.birthday) DESC\nLIMIT 1;"}
{"1126": "SELECT player_name\nFROM Player\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player\n    JOIN Country ON Player.country_id = Country.id\n    WHERE Country.name = 'Belgium'\n)"}
{"1127": "SELECT Player.player_name, Country.name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nJOIN Country ON Player.country_id = Country.id\nWHERE Player_Attributes.vision > 89;"}
{"1128": "SELECT Country.name FROM Country JOIN Player ON Country.id = Player.country_id GROUP BY Country.name ORDER BY AVG(Player.weight) DESC LIMIT 1"}
{"1129": "SELECT team_long_name\nFROM Team\nWHERE team_api_id IN (\n    SELECT team_api_id\n    FROM Team_Attributes\n    WHERE buildUpPlaySpeedClass = 'Slow'\n)"}
{"1130": "SELECT Team.team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE Team_Attributes.buildUpPlayPassingClass = 'Safe'"}
{"1131": "SELECT AVG(height) FROM Player WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes WHERE player_fifa_api_id IN ( SELECT player_fifa_api_id FROM Player WHERE player_api_id IN ( SELECT id FROM Country WHERE name = 'Italy' ) ) )"}
{"1132": "SELECT Player.player_name\nFROM Player\nWHERE Player.height > 180\nORDER BY Player.player_name\nLIMIT 3;"}
{"1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND SUBSTR(birthday, 1, 4) >= '1990'"}
{"1134": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference"}
{"1135": "SELECT Player_Attributes.id\nFROM Player_Attributes\nWHERE Player_Attributes.preferred_foot = 'right'\nORDER BY Player_Attributes.potential ASC\nLIMIT 3;"}
{"1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE preferred_foot = 'left')"}
{"1137": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage FROM Player_Attributes WHERE stamina > 80 AND strength > 80;"}
{"1138": "SELECT Country.name\nFROM Country\nJOIN League ON Country.id = League.country_id\nWHERE League.name LIKE '%Poland Ekstraklasa%'"}
{"1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%'"}
{"1140": "SELECT Player_Attributes.sprint_speed, Player_Attributes.agility, Player_Attributes.acceleration\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Alexis Blin'"}
{"1141": "SELECT buildUpPlaySpeedClass\nFROM Team_Attributes\nWHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')"}
{"1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = (SELECT id FROM League WHERE name = 'Italian Serie A')"}
{"1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Netherlands Eredivisie')"}
{"1144": "SELECT finishing, curve\nFROM Player_Attributes\nWHERE player_api_id IN (\n    SELECT player_api_id\n    FROM Player\n    WHERE weight = (\n        SELECT MAX(weight)\n        FROM Player\n    )\n)"}
{"1145": "SELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2015/2016'\nGROUP BY League.name\nORDER BY COUNT(Match.id) DESC\nLIMIT 1"}
{"1146": "SELECT Team.team_long_name\nFROM Team\nJOIN Match ON Team.team_api_id = Match.away_team_api_id\nWHERE Match.away_team_goal = (\n    SELECT MAX(away_team_goal)\n    FROM Match\n)"}
{"1147": "SELECT player_name\nFROM Player\nWHERE id = (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1)"}
{"1148": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM Player WHERE height < 180) FROM Player WHERE height < 180 AND id IN (SELECT id FROM Player_Attributes WHERE overall_rating > 70)"}
{"1149": "SELECT (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') - (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS deviation;"}
{"1150": "SELECT COUNT(ID) * 100 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) > '1930'"}
{"1151": "SELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31') FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND Admission = '+'"}
{"1152": "SELECT (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') / (SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-') AS Ratio"}
{"1153": "SELECT Examination.Diagnosis, Laboratory.Date\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Patient.ID = '30609'"}
{"1154": "SELECT Patient.SEX, Patient.Birthday, Examination.\"Examination Date\", Examination.Symptoms\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.ID = '163109'"}
{"1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH > 500"}
{"1156": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.RVVT = '+' AND Examination.RVVT IS NOT NULL"}
{"1157": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nWHERE Examination.Thrombosis = 2"}
{"1158": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE strftime('%Y', Patient.Birthday) = '1937' AND Laboratory.\"T-CHO\" >= 250"}
{"1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.ALB < 3.5"}
{"1160": "SELECT (COUNT(DISTINCT p.ID) * 100 / (SELECT COUNT(DISTINCT ID) FROM Patient WHERE SEX = 'F')) AS Percentage\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'F' AND (l.TP < 6.0 OR l.TP > 8.5)"}
{"1161": "SELECT AVG(\"aCL IgG\")\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Admission = '+' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) >= 50"}
{"1162": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'"}
{"1163": "SELECT MIN(strftime('%Y', First_Date) - strftime('%Y', Birthday)) AS \"Age of Youngest Patient\"\nFROM Patient"}
{"1164": "SELECT COUNT(DISTINCT Examination.ID)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.Thrombosis = 1\nAND Patient.SEX = 'F'\nAND strftime('%Y', Examination.[Examination Date]) = '1997'"}
{"1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) AS Age_Gap\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE TG >= 200"}
{"1166": "SELECT Symptoms, Diagnosis\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Birthday = (SELECT MIN(Birthday) FROM Patient)"}
{"1167": "SELECT COUNT(DISTINCT Patient.ID)/12 AS Average_Male_Patients_Tested_Per_Month\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31'"}
{"1168": "SELECT\n    MAX(Laboratory.Date) AS \"Completion Date\",\n    (strftime('%Y', `First Date`) - strftime('%Y', Birthday)) AS \"Age at Initial Arrival\"\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Diagnosis = 'SJS'"}
{"1169": "SELECT\n    SUM(CASE WHEN SEX = 'M' AND UA <= '8.0' THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' AND UA <= '6.5' THEN 1 ELSE 0 END)"}
{"1170": "SELECT COUNT(*)\nFROM Patient\nWHERE ID NOT IN (SELECT ID FROM Examination)\nAND (strftime('%Y', `First Date`) - strftime('%Y', `Birthday`) >= 1)"}
{"1171": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nWHERE strftime('%Y', Patient.Birthday) > '1975' AND Examination.[Examination Date] BETWEEN '1990-01-01' AND '1993-12-31'"}
{"1172": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.\"T-BIL\" > 2.0"}
{"1173": "SELECT Diagnosis, COUNT(Diagnosis) AS Diagnosis_Count\nFROM Examination\nWHERE \"Examination Date\" BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY Diagnosis\nORDER BY Diagnosis_Count DESC\nLIMIT 1;"}
{"1174": "SELECT AVG(strftime('%Y', '1991-10-30') - strftime('%Y', Birthday)) AS Average_Age\nFROM Patient\nWHERE strftime('%Y-%m', Birthday) LIKE '1991-10%'"}
{"1175": "SELECT\n  (strftime('%Y', E.`Examination Date`) - strftime('%Y', P.Birthday)) AS Age,\n  E.Diagnosis\nFROM Examination AS E\nJOIN Patient AS P ON E.ID = P.ID\nWHERE E.HGB = (SELECT MAX(HGB) FROM Examination)\nLIMIT 1;"}
{"1176": "SELECT ANA FROM Examination WHERE ID = 3605340 AND \"Examination Date\" = '1996-12-02'"}
{"1177": "SELECT\n    CASE\n        WHEN T_CHO <= 250 THEN 'Normal'\n        ELSE 'Abnormal'\n    END AS Total_Cholesterol_Status\nFROM\n    Laboratory\nWHERE\n    ID = 2927464\n    AND Date = '1995-09-04'"}
{"1178": "SELECT Patient.SEX\nFROM Patient\nWHERE Patient.Diagnosis = 'AORTITIS'\nORDER BY Patient.\"First Date\" ASC\nLIMIT 1;"}
{"1179": "SELECT \"aCL IgM\"\nFROM Examination\nWHERE Diagnosis = 'SLE' AND \"Examination Date\" = '1993-11-12'"}
{"1180": "SELECT Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT = 9 AND Laboratory.Date = '1992-06-12'"}
{"1181": "SELECT SUBTRACT('1992', year(Birthday)) AS Age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE UA = '8.4' AND Date = '1991-10-21'"}
{"1182": "SELECT COUNT(ID)\nFROM Laboratory\nWHERE ID IN (\nSELECT ID\nFROM Patient\nWHERE First Date = '1991-06-13'\nAND Diagnosis = 'SJS'\n)\nAND strftime('%Y', Date) = '1995';"}
{"1183": "SELECT Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.\"First Date\" = '1997-01-27'"}
{"1184": "SELECT Symptoms FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.\"Examination Date\" = '1993-09-27'"}
{"1185": "SELECT (SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) / SUM(CASE WHEN Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN 1 ELSE 0 END) AS decrease_rate FROM Laboratory WHERE Birthday = '1959-02-18' AND (Date LIKE '1981-11-%' OR Date LIKE '1981-12-%')"}
{"1186": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'Behcet'\nAND Examination.[Examination Date] BETWEEN '1997-01-01' AND '1997-12-31'"}
{"1187": "SELECT Patient.ID\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Examination.\"Examination Date\" BETWEEN '1987-07-06' AND '1996-01-31'\nAND Laboratory.GPT > 30\nAND Laboratory.ALB < 4"}
{"1188": "SELECT Patient.ID\nFROM Patient\nWHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'"}
{"1189": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Thrombosis = 2 AND ANA Pattern = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Examination) * 1.2"}
{"1190": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30)) FROM Laboratory WHERE UA < 6.5 AND `U-PRO` > 0 AND `U-PRO` < 30"}
{"1191": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM Patient WHERE YEAR(`First Date`) = '1981' AND SEX = 'M') FROM Patient WHERE YEAR(`First Date`) = '1981' AND SEX = 'M' AND Diagnosis = 'BEHCET'"}
{"1192": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Admission = '-' AND strftime('%Y-%m', Date) = '1991-10' AND \"T-BIL\" < 2.0"}
{"1193": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'F' AND\nBIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31' AND\nID IN (\nSELECT ID\nFROM Examination\nWHERE ANA Pattern != 'P'\n)"}
{"1194": "SELECT Patient.SEX\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP = '2+' AND Laboratory.CRE = 1 AND Laboratory.LDH = 123;"}
{"1195": "SELECT AVG(ALB)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'F'\nAND Laboratory.PLT > 400\nAND Patient.Diagnosis = 'SLE'"}
{"1196": "SELECT Symptoms\nFROM Examination\nWHERE Diagnosis = 'SLE'\nGROUP BY Symptoms\nHAVING COUNT(*) = (\n    SELECT MAX(symptom_count)\n    FROM (\n        SELECT COUNT(*) as symptom_count\n        FROM Examination\n        WHERE Diagnosis = 'SLE'\n        GROUP BY Symptoms\n    )\n);"}
{"1197": "SELECT Patient.Description, Patient.Diagnosis\nFROM Patient\nWHERE Patient.ID = 48473"}
{"1198": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS'"}
{"1199": "SELECT COUNT(DISTINCT Patient.ID) AS Number_of_Patients\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE strftime('%Y', Examination.\"Examination Date\") = '1997'\nAND (Laboratory.TP < 6 OR Laboratory.TP > 8.5)"}
{"1200": "SELECT (COUNT(DISTINCT CASE WHEN Symptoms LIKE '%thrombocytopenia%' THEN ID END) * 100.0) / COUNT(DISTINCT CASE WHEN Diagnosis LIKE '%SLE%' THEN ID END) AS Proportion FROM Examination"}
{"1201": "SELECT (DIVIDE((SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA' AND SEX = 'F'), (SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA')) * 100) AS Percentage"}
{"1202": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'M' \nAND Examination.Diagnosis = 'BEHCET' \nAND Examination.[Examination Date] BETWEEN '1995' AND '1997' \nAND Patient.Admission = '-'"}
{"1203": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory\nON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5"}
{"1204": "SELECT DATEDIFF('day', MIN(`First Date`), MIN(`Examination Date`))\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.ID = 821298"}
{"1205": "SELECT Patient.ID, Laboratory.UA, Patient.SEX\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 57266"}
{"1206": "SELECT Laboratory.Date FROM Laboratory WHERE Laboratory.ID = '48473' AND Laboratory.GOT >= 60"}
{"1207": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GOT < 60 AND strftime('%Y', Laboratory.Date) = '1994'"}
{"1208": "SELECT Patient.ID\nFROM Patient\nWHERE Patient.SEX = 'M' AND Patient.ID IN (\n  SELECT Laboratory.ID\n  FROM Laboratory\n  WHERE Laboratory.GPT >= 60\n)"}
{"1209": "SELECT Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT > 60\nORDER BY Patient.Birthday ASC"}
{"1210": "SELECT AVG(L.LDH)\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.LDH < 500"}
{"1211": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.LDH BETWEEN 600 AND 800"}
{"1212": "SELECT Patient.Admission\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.ALP < 300"}
{"1213": "SELECT Patient.ID\nFROM Patient\nWHERE Patient.Birthday = '1982-04-01'"}
{"1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TP < 6.0"}
{"1215": "SELECT Patient.ID, Patient.SEX, Laboratory.TP, Laboratory.TP - 8.5 AS TP_Deviation\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'F' AND Laboratory.TP > 8.5"}
{"1216": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.\"First Date\", Patient.Admission, Patient.Diagnosis\nFROM Patient\nWHERE Patient.SEX = 'M' AND (Patient.ALB <= 3.5 OR Patient.ALB >= 5.5)\nORDER BY Patient.Birthday DESC"}
{"1217": "SELECT Patient.ID\nFROM Patient\nWHERE strftime('%Y', Patient.Birthday) = '1982'\nAND Patient.ID IN (\n  SELECT ID\n  FROM Laboratory\n  WHERE ALB >= 3.5\n  AND ALB <= 5.5\n)"}
{"1218": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS Percentage FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F')"}
{"1219": "SELECT AVG(UA) AS \"Average UA index\"\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE (UA < 8.0 AND SEX = 'M') OR (UA < 6.5 AND SEX = 'F')"}
{"1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.UN >= 28 AND Laboratory.UN <= 30"}
{"1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nWHERE Patient.Diagnosis = 'RA' AND Laboratory.UN < 30"}
{"1222": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.CRE >= 1.5"}
{"1223": "SELECT\n    SUM(CASE WHEN SEX = 'M' AND CRE >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' AND CRE >= 1.5 THEN 1 ELSE 0 END) AS result\nFROM\n    Patient\nJOIN\n    Laboratory ON Patient.ID = Laboratory.ID"}
{"1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory)"}
{"1225": "SELECT\nPatient.SEX,\nCOUNT(DISTINCT Patient.ID) AS Total_Patients\nFROM\nPatient\nINNER JOIN\nLaboratory ON Patient.ID = Laboratory.ID\nWHERE\nLaboratory.\"T-BIL\" >= 2.0\nGROUP BY\nPatient.SEX"}
{"1226": "SELECT Patient.ID, MAX(Laboratory.\"T-CHO\") as \"T-CHO index\"\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nGROUP BY Patient.ID\nORDER BY Patient.Birthday ASC\nLIMIT 1;"}
{"1227": "SELECT AVG(SUBTRACT(YEAR(NOW()), YEAR(Birthday))) AS Average_Age\nFROM Patient\nWHERE SEX = 'M' AND ID IN (\n  SELECT ID\n  FROM Laboratory\n  WHERE T_CHO >= 250\n)"}
{"1228": "SELECT Patient.ID, Patient.Diagnosis\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.TG > 300"}
{"1229": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200 AND strftime('%Y', 'now') - strftime('%Y', p.Birthday) > 50"}
{"1230": "SELECT DISTINCT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-' AND Laboratory.CPK < 250"}
{"1231": "SELECT COUNT(*) FROM Patient WHERE Birthday BETWEEN '1936' AND '1956' AND SEX = 'M' AND CPK >= 250;"}
{"1232": "SELECT Patient.ID, Patient.SEX, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU >= 180 AND Laboratory.\"T-CHO\" < 250"}
{"1233": "SELECT Patient.ID, Laboratory.GLU\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GLU < 180 AND strftime('%Y', Patient.Description) >= '1991'"}
{"1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.WBC <= 3.5 OR Laboratory.WBC >= 9.0\nGROUP BY Patient.ID, Patient.SEX, Patient.Birthday\nORDER BY Patient.Birthday ASC"}
{"1235": "SELECT Patient.ID, SUBTRACT(year(current_timestamp), year(Patient.Birthday)) AS age, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RBC < 3.5"}
{"1236": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'F'\nAND strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) >= 50\nAND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0)\nAND Patient.Admission = '+'"}
{"1237": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nWHERE Patient.Admission = '-' AND Examination.HGB < 10;"}
{"1238": "SELECT Patient.ID, Patient.SEX\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nWHERE Patient.Diagnosis = 'SLE' AND Examination.HGB > 10 AND Examination.HGB < 17\nORDER BY Patient.Birthday ASC\nLIMIT 1;"}
{"1239": "SELECT Patient.ID, (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nGROUP BY Patient.ID\nHAVING COUNT(Laboratory.ID) > 2 AND MAX(Laboratory.HCT) >= 52"}
{"1240": "SELECT AVG(HCT)\nFROM Laboratory\nWHERE Date LIKE '1991%' AND HCT < 29"}
{"1241": "SELECT (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) AS Lower_Than_Normal, (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS Higher_Than_Normal"}
{"1242": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.Date LIKE '1984%'\nAND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 50\nAND Laboratory.PLT >= 100 AND Laboratory.PLT <= 400;"}
{"1243": "SELECT (COUNT(CASE WHEN PT >= 14 AND SEX = 'F' THEN 1 END) * 100.0) / COUNT(CASE WHEN PT >= 14 THEN 1 END)\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE (strftime('%Y', 'now') - strftime('%Y', Birthday)) > 55"}
{"1244": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.`First Date` > '1992-01-01' AND Laboratory.PT < 14"}
{"1245": "SELECT COUNT(*) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45;"}
{"1246": "SELECT COUNT(DISTINCT Examination.ID) AS num_patients\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE APTT > 45 AND Thrombosis = 3"}
{"1247": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.WBC BETWEEN 3.5 AND 9.0\nAND (Laboratory.FG < 150 OR Laboratory.FG > 450)"}
{"1248": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Birthday > '1980-01-01' AND Laboratory.FG NOT BETWEEN 150 AND 450"}
{"1249": "SELECT DISTINCT Patient.Diagnosis\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"U-PRO\" > 30"}
{"1250": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"U-PRO\" > 0 AND Laboratory.\"U-PRO\" < 30\nAND Patient.Diagnosis = 'SLE'"}
{"1251": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.aCL_IgG < 900\nAND Examination.Symptoms = 'abortion'"}
{"1252": "SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.aCL_IgG BETWEEN 900 AND 2000\nAND Examination.Symptoms IS NOT NULL"}
{"1253": "SELECT Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA BETWEEN 80 AND 500\nORDER BY Laboratory.IGA DESC\nLIMIT 1;"}
{"1254": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.IGA >= 80 AND Patient.IGA <= 500 AND Patient.`First Date` >= '1990-01-01'"}
{"1255": "SELECT Diagnosis\nFROM Examination\nWHERE \"IGM\" < 40 OR \"IGM\" > 400\nGROUP BY Diagnosis\nHAVING COUNT(*) = (\n    SELECT MAX(diagnosis_count)\n    FROM (\n        SELECT COUNT(*) as diagnosis_count\n        FROM Examination\n        WHERE \"IGM\" < 40 OR \"IGM\" > 400\n        GROUP BY Diagnosis\n    )\n)"}
{"1256": "SELECT COUNT(*)\nFROM Patient\nWHERE (CRP = '+' OR CRP = '-' OR CRP < 1.0) AND Description IS NULL"}
{"1257": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE CRP NOT IN ('+-', '-') AND CRP >= 1.0 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 18;"}
{"1258": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.RA IN ('-', '+-')\nAND Examination.KCT = '+'"}
{"1259": "SELECT Examination.Diagnosis\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Patient.Birthday > '1995-01-01'\nAND Examination.RA = '-'\n"}
{"1260": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RF = '-' AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 60;"}
{"1261": "SELECT COUNT(*) FROM Patient WHERE RF < 20 AND Thrombosis = '0'"}
{"1262": "SELECT COUNT(DISTINCT Patient.ID) AS num_patients\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Laboratory.C3 > 35 AND Examination.\"ANA Pattern\" = 'P'"}
{"1263": "SELECT Patient.ID\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.HCT NOT BETWEEN 29 AND 52\nORDER BY Examination.`aCL IgA` DESC\nLIMIT 1;"}
{"1264": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Examination.Thrombosis > 0 AND Laboratory.C4 > 10"}
{"1265": "SELECT COUNT(DISTINCT Patient.ID) AS Number_of_Patients\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP IN ('-', '+-')\nAND Patient.Admission = '+'"}
{"1266": "SELECT Patient.Birthday\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.RNP NOT IN ('-', '+-')\nORDER BY Patient.Birthday ASC\nLIMIT 1"}
{"1267": "SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE \"SM\" IN ('-', '+-')\nAND Thrombosis = 1"}
{"1268": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.SM NOT IN ('-', '+-')\nORDER BY Patient.Birthday DESC\nLIMIT 3;"}
{"1269": "SELECT Patient.ID\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.\"Examination Date\" >= '1997-01-01'\nAND Examination.SC170 IN ('-', '+-')"}
{"1270": "SELECT COUNT(DISTINCT Patient.ID) AS count\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Laboratory.SC170 IN ('0', 'negative')\nAND Patient.SEX = 'M'\nAND Examination.Symptoms = 'vertigo'"}
{"1271": "SELECT COUNT(DISTINCT Patient.ID) AS Total_Patients\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.SSA IN ('-', '+-')\nAND strftime('%Y', Patient.`First Date`) < '1990'"}
{"1272": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SSA NOT IN ('-', '+-') ORDER BY Patient.`First Date` LIMIT 1;"}
{"1273": "SELECT COUNT(DISTINCT Patient.ID) AS Total_Patients\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.SSB IN ('negative', '0')\nAND Examination.Diagnosis = 'SLE'"}
{"1274": "SELECT COUNT(DISTINCT Examination.ID)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE SSB IN ('-', '+-')\nAND Symptoms IS NOT NULL"}
{"1275": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\nAND Laboratory.CENTROMEA IN ('-', '+-')\nAND Laboratory.SSB IN ('-', '+-')"}
{"1276": "SELECT DISTINCT Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.DNA >= 8"}
{"1277": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nLEFT JOIN Laboratory ON Patient.ID = Laboratory.ID AND Laboratory.DNA < 8\nWHERE Patient.Description IS NULL"}
{"1278": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.\"DNA-II\" >= 8\nAND p.Admission = '+'"}
{"1279": "SELECT MULTIPLY(DIVIDE(COUNT(DISTINCT Laboratory.ID, Diagnosis), COUNT(DISTINCT Laboratory.ID)), 1.0) AS \"Percentage of patients with abnormal GOT level and diagnosed with SLE\"\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.GOT >= 60 AND Patient.Diagnosis = 'SLE';"}
{"1280": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND GOT < 60;"}
{"1281": "SELECT MIN(Birthday)\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE GOT >= 60\n) AND Birthday IS NOT NULL"}
{"1282": "SELECT Patient.Birthday\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT < 60\nORDER BY Laboratory.GPT DESC\nLIMIT 3;"}
{"1283": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.GPT < 60\nAND Patient.SEX = 'M'"}
{"1284": "SELECT MIN(First Date)\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE LDH < 500\n)"}
{"1285": "SELECT MAX(p.\"First Date\") AS \"Latest Record Date\"\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.LDH >= 500;"}
{"1286": "SELECT COUNT(*)\nFROM Patient\nWHERE Admission = '+'\nAND ID IN (\nSELECT ID\nFROM Laboratory\nWHERE ALP >= 300\n)"}
{"1287": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '-' AND Laboratory.ALP < 300;"}
{"1288": "SELECT Diagnosis\nFROM Patient\nWHERE ID IN (\n  SELECT ID\n  FROM Laboratory\n  WHERE TP < 6.0\n)"}
{"1289": "SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SJS' AND TP > 6.0 AND TP < 8.5;"}
{"1290": "SELECT Examination.\"Examination Date\"\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5\nORDER BY Laboratory.ALB DESC\nLIMIT 1"}
{"1291": "SELECT COUNT(*)\nFROM Patient\nWHERE SEX = 'M' AND ID IN (\nSELECT ID\nFROM Laboratory\nWHERE ALB > 3.5 AND ALB < 5.5 AND TP > 6.0 AND TP < 8.5\n)"}
{"1292": "SELECT MAX(\"aCL IgG\") AS \"Max aCL IgG\"\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Patient.SEX = 'F' AND Laboratory.UA <= 6.50\nGROUP BY Patient.ID\nORDER BY Laboratory.UA DESC\nLIMIT 1"}
{"1293": "SELECT MAX(ANA)\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE CRE < 1.5"}
{"1294": "SELECT Patient.ID\nFROM Patient\nJOIN Examination ON Examination.ID = Patient.ID\nWHERE Examination.aCL_IgA = (SELECT MAX(aCL_IgA) FROM Examination)\nAND Laboratory.CRE < 1.5"}
{"1295": "SELECT COUNT(*)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nWHERE Examination.\"T-BIL\" >= 2.0\nAND Examination.\"ANA Pattern\" LIKE '%P%'"}
{"1296": "SELECT ANA\nFROM Examination\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE `T-BIL` < 2.0\n)\nORDER BY `T-BIL` DESC\nLIMIT 1"}
{"1297": "SELECT COUNT(*)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.\"T-CHO\" >= 250\nAND Laboratory.KCT = '-';"}
{"1298": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.\"ANA Pattern\" = 'P'\nAND Laboratory.\"T-CHO\" < 250"}
{"1299": "SELECT COUNT(DISTINCT Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.TG < 200\nAND Examination.Symptoms IS NOT NULL"}
{"1300": "SELECT Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG < 200\nORDER BY Laboratory.TG DESC\nLIMIT 1"}
{"1301": "SELECT Patient.ID\nFROM Patient\nLEFT JOIN Examination ON Examination.ID = Patient.ID\nLEFT JOIN Laboratory ON Laboratory.ID = Patient.ID\nWHERE Examination.Thrombosis = 0\nAND Laboratory.CPK < 250;"}
{"1302": "SELECT COUNT(DISTINCT Examination.ID)\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Laboratory.CPK < 250\nAND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')"}
{"1303": "SELECT MIN(Birthday) AS \"Oldest Patient Birthday\"\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.GLU > 180"}
{"1304": "SELECT COUNT(*)\nFROM Patient\nLEFT JOIN Examination ON Patient.ID = Examination.ID\nWHERE GLU < 180\nAND (Thrombosis IS NULL OR Thrombosis = 0)"}
{"1305": "SELECT COUNT(*) FROM Patient WHERE Admission = '+' AND WBC >= 3.5 AND WBC <= 9.0"}
{"1306": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.Diagnosis = 'SLE' AND e.WBC BETWEEN 3.5 AND 9.0"}
{"1307": "SELECT Patient.ID\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0)\nAND Patient.Admission = '-'\n"}
{"1308": "SELECT COUNT(*)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.PLT > 100 AND Examination.PLT < 400 AND Examination.Diagnosis IS NOT NULL"}
{"1309": "SELECT Patient.ID, Laboratory.PLT\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis = 'MCTD'"}
{"1310": "SELECT AVG(PT)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.PT < 14"}
{"1311": "SELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.Thrombosis IN (1, 2) AND e.PT < 14"}
{"1312": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders'"}
{"1313": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'Engineering'"}
{"1314": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'Art and Design'"}
{"1315": "SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE event.event_name = 'Women's Soccer'"}
{"1316": "SELECT member.phone\nFROM member\nJOIN attendance ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'"}
{"1317": "SELECT COUNT(*)\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.link_to_major = 'Student_Club'\nAND event.event_name = \"Women's Soccer\"\nAND member.t_shirt_size = 'Medium'"}
{"1318": "SELECT event.event_name\nFROM event\nJOIN attendance ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE member.link_to_major = 'Student_Club'\nGROUP BY event.event_name\nORDER BY COUNT(attendance.link_to_event) DESC\nLIMIT 1;"}
{"1319": "SELECT member.college\nFROM member\nWHERE member.position = 'Vice President' AND member.link_to_major = 'Student_Club'"}
{"1320": "SELECT event_name FROM event JOIN attendance ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean';"}
{"1321": "SELECT COUNT(*)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND strftime('%Y', event.event_date) = '2019'"}
{"1322": "SELECT COUNT(DISTINCT link_to_event) AS num_meetings_attended\nFROM attendance\nWHERE link_to_event IN (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(DISTINCT link_to_member) > 10\n)\nAND link_to_event IN (\n    SELECT event_id\n    FROM event\n    WHERE type = 'Meeting'\n)"}
{"1323": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(event_id) > 20)"}
{"1324": "SELECT AVG(COUNT(DISTINCT attendance.link_to_member))\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nWHERE event.type = 'Meeting' AND strftime('%Y', event.event_date) = '2020'"}
{"1325": "SELECT expense_description AS most_expensive_item\nFROM expense\nWHERE expense_description LIKE '%club events%'\nORDER BY cost DESC\nLIMIT 1"}
{"1326": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering'"}
{"1327": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN attendance ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Laugh Out Loud'"}
{"1328": "SELECT last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Law and Constitutional Studies';"}
{"1329": "SELECT county\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey'"}
{"1330": "SELECT college FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt'"}
{"1331": "SELECT SUM(income.amount)\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position = 'Vice President'"}
{"1332": "SELECT SUM(expense.cost) AS total_spent_on_food\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE budget.category = 'Food' AND event.event_name = 'September Meeting'"}
{"1333": "SELECT zip_code.city, zip_code.state\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.position = 'President'\nAND member.first_name = 'Student_Club'\nAND member.last_name = 'President'"}
{"1334": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'"}
{"1335": "SELECT SUM(expense.cost) AS total_spent\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'September Meeting'\nAND budget.category = 'Advertisement'"}
{"1336": "SELECT department FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.first_name = 'Pierce' AND member.last_name = 'Guidi'"}
{"1337": "SELECT SUM(amount) AS total_budgeted_amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Speaker'"}
{"1338": "SELECT expense_id\nFROM expense\nWHERE link_to_budget IN (\n    SELECT budget_id\n    FROM budget\n    WHERE link_to_event IN (\n        SELECT event_id\n        FROM event\n        WHERE event_name = 'October Meeting'\n        AND event_date = '2019-10-08'\n    )\n)\nAND approved = 'True'"}
{"1339": "SELECT AVG(cost) AS average_cost\nFROM expense\nWHERE strftime('%m', expense_date) IN ('09', '10')\nAND link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')"}
{"1340": "SELECT\n    SUM(CASE WHEN strftime('%Y', event_date) = '2019' THEN spent ELSE 0 END) - \n    SUM(CASE WHEN strftime('%Y', event_date) = '2020' THEN spent ELSE 0 END) AS difference\nFROM \n    event\nJOIN \n    budget ON event.event_id = budget.link_to_event\nWHERE \n    event_date BETWEEN '2019-01-01' AND '2019-12-31' OR event_date BETWEEN '2020-01-01' AND '2020-12-31'"}
{"1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'"}
{"1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'"}
{"1343": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')"}
{"1344": "SELECT event.notes FROM event JOIN income ON event.event_id = income.link_to_event WHERE income.source = 'Fundraising' AND income.date_received = '2019-09-14'"}
{"1345": "SELECT COUNT(DISTINCT major_id)\nFROM major\nWHERE college = 'College of Humanities and Social Sciences'"}
{"1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'"}
{"1347": "SELECT zip_code.county\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.first_name = 'Adela' AND member.last_name = 'O''Gallagher'"}
{"1348": "SELECT COUNT(*) FROM budget WHERE link_to_event = 'November Meeting' AND remaining < 0;"}
{"1349": "SELECT SUM(amount) AS total_budget_amount\nFROM budget\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')"}
{"1350": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'"}
{"1351": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason'"}
{"1352": "SELECT COUNT(*)\nFROM member\nWHERE link_to_major IN (\n  SELECT major_id\n  FROM major\n  WHERE major_name = 'Human Development and Family Studies'\n)\nAND t_shirt_size = 'Large'"}
{"1353": "SELECT zip_code.type FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Christof' AND member.last_name = 'Nielson'"}
{"1354": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'Vice President'"}
{"1355": "SELECT zip_code.state\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'"}
{"1356": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'"}
{"1357": "SELECT income.date_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Connor' AND member.last_name = 'Hilton' AND income.source = 'Dues'"}
{"1358": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE income.source = 'Dues'\nORDER BY income.date_received\nLIMIT 1;"}
{"1359": "SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND amount > (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND event_name = 'October Meeting')"}
{"1360": "SELECT (DIVIDE(SUM(amount), COUNT(event_name)) * 100) AS percentage\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE category = 'Parking' AND event_name = 'November Speaker'"}
{"1361": "SELECT SUM(cost)\nFROM expense\nWHERE expense_description = 'Pizza'"}
{"1362": "SELECT COUNT(DISTINCT city) AS city_count\nFROM zip_code\nWHERE county = 'Orange County' AND state = 'Virginia'"}
{"1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'"}
{"1364": "SELECT zip_code.city, zip_code.county, zip_code.state\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.first_name = 'Amy' AND member.last_name = 'Firth'"}
{"1365": "SELECT expense.expense_description\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nWHERE budget.remaining = (SELECT MIN(remaining) FROM budget)"}
{"1366": "SELECT member.first_name, member.last_name\nFROM member\nJOIN attendance ON attendance.link_to_member = member.member_id\nJOIN event ON event.event_id = attendance.link_to_event\nWHERE event.event_name = 'October Meeting'"}
{"1367": "SELECT major.college, COUNT(member.member_id) AS member_count\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nGROUP BY major.college\nORDER BY member_count DESC\nLIMIT 1;"}
{"1368": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'"}
{"1369": "SELECT event_name\nFROM event\nWHERE event_id = (\n    SELECT link_to_event\n    FROM budget\n    WHERE amount = (\n        SELECT MAX(amount)\n        FROM budget\n    )\n)"}
{"1370": "SELECT expense.expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.position = 'Vice President'"}
{"1371": "SELECT COUNT(DISTINCT link_to_member)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women's Soccer'"}
{"1372": "SELECT income.date_received\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Casey' AND member.last_name = 'Mason' AND member.email = 'casey.mason@example.com'"}
{"1373": "SELECT COUNT(*)\nFROM member\nWHERE member.zip IN (\n    SELECT zip_code\n    FROM zip_code\n    WHERE state = 'Maryland'\n)"}
{"1374": "SELECT COUNT(DISTINCT attendance.link_to_event)\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE member.phone = '954-555-6240'"}
{"1375": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.department = 'School of Applied Sciences, Technology and Education'"}
{"1376": "SELECT event_name\nFROM event\nWHERE status = 'Closed'\nORDER BY spent / amount DESC\nLIMIT 1;"}
{"1377": "SELECT COUNT(*)\nFROM member\nWHERE position = 'President'"}
{"1378": "SELECT MAX(spent) FROM budget"}
{"1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020'"}
{"1380": "SELECT SUM(spent) AS total_amount_spent_for_food\nFROM budget\nWHERE category = 'Food'"}
{"1381": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN attendance ON attendance.link_to_member = member.member_id\nGROUP BY member.member_id\nHAVING COUNT(attendance.link_to_event) > 7"}
{"1382": "SELECT member.first_name, member.last_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nJOIN attendance ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE major.major_name = 'Interior Design'\nAND event.event_name = 'Community Theater'"}
{"1383": "SELECT member.first_name, member.last_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Georgetown' AND zip_code.state = 'South Carolina'"}
{"1384": "SELECT COUNT(*) AS income_generated\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour';"}
{"1385": "SELECT member.first_name || ' ' || member.last_name AS student_name\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.amount > 40;"}
{"1386": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE link_to_budget IN (\n    SELECT budget_id\n    FROM budget\n    WHERE link_to_event IN (\n        SELECT event_id\n        FROM event\n        WHERE event_name = 'Yearly Kickoff'\n    )\n)"}
{"1387": "SELECT member.first_name, member.last_name\nFROM member\nJOIN budget ON budget.link_to_event = event.event_id\nJOIN event ON event.event_name = 'Yearly Kickoff'\nWHERE budget.category = 'Advertisement'"}
{"1388": "SELECT member.first_name || ' ' || member.last_name AS full_name, income.source\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE income.amount = (SELECT MAX(amount) FROM income)"}
{"1389": "SELECT event_name\nFROM event\nWHERE event_id = (\n    SELECT link_to_event\n    FROM budget\n    ORDER BY amount ASC\n    LIMIT 1\n)"}
{"1390": "SELECT (SUM(cost) / (SELECT SUM(cost) FROM expense)) * 100\nFROM expense\nWHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event = 'Yearly Kickoff')"}
{"1391": "SELECT DIVIDE(SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END), SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END)) AS ratio FROM major"}
{"1392": "SELECT source\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nORDER BY amount DESC\nLIMIT 1"}
{"1393": "SELECT member.first_name || ' ' || member.last_name AS full_name, member.email\nFROM member\nWHERE member.position = 'Secretary'"}
{"1394": "SELECT COUNT(*)\nFROM member\nWHERE link_to_major IN (\n  SELECT major_id\n  FROM major\n  WHERE major_name = 'Physics Teaching'\n)"}
{"1395": "SELECT COUNT(DISTINCT attendance.link_to_member)\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Community Theater' AND strftime('%Y', event.event_date) = '2019'"}
{"1396": "SELECT COUNT(*) AS event_count, major.major_name AS major\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi'"}
{"1397": "SELECT AVG(spent)\nFROM budget\nWHERE category = 'Food' AND event_status = 'Closed'"}
{"1398": "SELECT event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nAND budget.spent = (\n    SELECT MAX(spent)\n    FROM budget\n    WHERE category = 'Advertisement'\n)"}
{"1399": "SELECT\n    CASE\n        WHEN EXISTS (\n            SELECT 1\n            FROM attendance\n            JOIN event ON attendance.link_to_event = event.event_id\n            JOIN member ON attendance.link_to_member = member.member_id\n            WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean'\n            AND event.event_name = \"Women's Soccer\"\n        )\n        THEN 'Yes'\n        ELSE 'No'\n    END;"}
{"1400": "SELECT (DIVIDE(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END), COUNT(event_id)) * 100) AS percentage_share\nFROM event\nWHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'"}
{"1401": "SELECT cost\nFROM expense\nWHERE expense_description = 'Posters'\nAND link_to_budget IN (\n    SELECT budget_id\n    FROM budget\n    WHERE link_to_event IN (\n        SELECT event_id\n        FROM event\n        WHERE event_name = 'September Speaker'\n    )\n)"}
{"1402": "SELECT t_shirt_size, COUNT(t_shirt_size) AS count FROM member GROUP BY t_shirt_size ORDER BY count DESC LIMIT 1;"}
{"1403": "SELECT event_name\nFROM event\nWHERE status = 'Closed'\nAND event_id IN (\n    SELECT link_to_event\n    FROM budget\n    WHERE remaining < 0\n    ORDER BY remaining ASC\n    LIMIT 1\n)"}
{"1404": "SELECT expense.category, SUM(expense.cost) as total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting'\nAND expense.approved = 'Yes'\nGROUP BY expense.category"}
{"1405": "SELECT budget.category, budget.amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nORDER BY budget.amount ASC"}
{"1406": "SELECT budget_id\nFROM budget\nWHERE category = 'Food'\nORDER BY amount DESC\nLIMIT 1"}
{"1407": "SELECT budget_id, category, MAX(amount) FROM budget WHERE category = 'Advertisement' GROUP BY budget_id ORDER BY MAX(amount) DESC LIMIT 3"}
{"1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking' AND link_to_budget IN (SELECT budget_id FROM budget WHERE category = 'Parking')"}
{"1409": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20'"}
{"1410": "SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = \"rec4BLdZHS2Blfp4v\"\nGROUP BY member.member_id"}
{"1411": "SELECT expense_description FROM expense WHERE link_to_member IN ( SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison' )"}
{"1412": "SELECT expense.expense_description\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'X-Large'"}
{"1413": "SELECT zip_code.zip_code\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE expense.cost < 50;"}
{"1414": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'"}
{"1415": "SELECT member.position\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business'"}
{"1416": "SELECT COUNT(*)\nFROM member\nWHERE link_to_major = 'Business' AND t_shirt_size = 'Medium'"}
{"1417": "SELECT event.type\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.remaining > 30;"}
{"1418": "SELECT DISTINCT budget.category\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.location = 'MU 215'"}
{"1419": "SELECT event.type\nFROM event\nWHERE event.event_date = '2020-03-24T12:00:00'"}
{"1420": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'Vice President'"}
{"1421": "SELECT (DIVIDE(SUM(position = 'Member' AND major_name = 'Mathematics'), COUNT(member_id)) * 100) AS percentage_of_mathematics_major_members\nFROM member"}
{"1422": "SELECT DISTINCT event.type\nFROM event\nWHERE event.location = 'MU 215'"}
{"1423": "SELECT COUNT(*) FROM income WHERE amount = 50"}
{"1424": "SELECT COUNT(member_id)\nFROM member\nWHERE position = 'Member' AND t_shirt_size = 'X-Large'"}
{"1425": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department LIKE '%School of Applied Sciences, Technology and Education%'"}
{"1426": "SELECT member.last_name, major.department, major.college\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering'"}
{"1427": "SELECT budget.category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\nAND event.type = 'Guest Speaker'\nAND budget.spent = 0;"}
{"1428": "SELECT zip_code.city, zip_code.state\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE major.major_name = 'Electrical and Computer Engineering'\nAND member.position = 'Member'"}
{"1429": "SELECT event.event_name\nFROM event\nJOIN attendance ON event.event_id = attendance.link_to_event\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN major ON member.link_to_major = major.major_id\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.position = 'Vice President'\nAND zip_code.location = '900 E. Washington St.'\nAND event.type = 'Social'"}
{"1430": "SELECT member.last_name, member.position\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Pizza' AND expense.expense_date = '2019-09-10'"}
{"1431": "SELECT member.last_name\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.position = 'Member' AND event.event_name = \"Women's Soccer\""}
{"1432": "SELECT (COUNT(CASE WHEN amount = 50 THEN 1 END) / COUNT(member_id)) * 100 AS percentage\nFROM member\nWHERE t_shirt_size = 'Medium' AND position = 'Member'"}
{"1433": "SELECT zip_code.state\nFROM zip_code\nWHERE zip_code.type = 'PO Box'"}
{"1434": "SELECT zip_code\nFROM zip_code\nWHERE type = 'PO Box'\nAND county = 'San Juan Municipio'\nAND state = 'Puerto Rico'"}
{"1435": "SELECT event_name\nFROM event\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'"}
{"1436": "SELECT event.event_id\nFROM event\nJOIN attendance ON attendance.link_to_event = event.event_id\nJOIN expense ON expense.link_to_member = attendance.link_to_member\nWHERE expense.cost > 50\nGROUP BY event.event_id"}
{"1437": "SELECT member.member_id, member.first_name, member.last_name, event.event_name, attendance.link_to_event\nFROM member\nJOIN attendance ON member.member_id = attendance.link_to_member\nJOIN event ON attendance.link_to_event = event.event_id\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'"}
{"1438": "SELECT m.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.first_name = 'Katy' AND ma.major_id = 'rec1N0upiVLy5esTO'"}
{"1439": "SELECT member.phone\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND major.college = 'College of Agriculture and Applied Sciences'"}
{"1440": "SELECT member.email\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\nAND expense.cost > 20;"}
{"1441": "SELECT COUNT(*)\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'education' AND major.college = 'College of Education & Human Services' AND member.position = 'Member'"}
{"1442": "SELECT (COUNT(CASE WHEN remaining < 0 THEN 1 END) * 100.0 / COUNT(event_id)) AS percentage_of_events_over_budget FROM budget"}
{"1443": "SELECT event_id, location, status\nFROM event\nWHERE event_date BETWEEN '2019-11-01' and '2020-03-31'"}
{"1444": "SELECT expense_id FROM expense WHERE cost > 50"}
{"1445": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nWHERE member.t_shirt_size = 'X-Large'"}
{"1446": "SELECT DIVIDE(SUM(type = 'PO Box'), COUNT(zip_code)) * 100 FROM zip_code"}
{"1447": "SELECT event_name, location\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.remaining > 0"}
{"1448": "SELECT event_name, event_date\nFROM event\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM expense\n    WHERE expense_description = 'Pizza' AND cost > 50 AND cost < 100\n)"}
{"1449": "SELECT member.first_name, member.last_name, major.major_name\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nJOIN major ON member.link_to_major = major.major_id\nWHERE expense.cost > 100"}
{"1450": "SELECT zip_code.city, zip_code.county\nFROM event\nJOIN zip_code ON event.location = zip_code.zip_code\nWHERE event.event_id IN (\n    SELECT link_to_event\n    FROM income\n    GROUP BY link_to_event\n    HAVING COUNT(*) > 40\n)"}
{"1451": "SELECT member.first_name, member.last_name, MAX(expense.cost) AS max_amount\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nGROUP BY member.member_id\nHAVING COUNT(DISTINCT expense.link_to_event) > 1\nORDER BY max_amount DESC\nLIMIT 1;"}
{"1452": "SELECT AVG(cost) AS average_amount_paid\nFROM expense\nWHERE link_to_member IN (\n    SELECT member_id\n    FROM member\n    WHERE position != 'Member'\n)"}
{"1453": "SELECT event_name\nFROM event\nWHERE event_id IN (\n  SELECT link_to_event\n  FROM budget\n  WHERE category = 'Parking'\n  GROUP BY link_to_event\n  HAVING cost < (\n    SELECT AVG(cost)\n    FROM budget\n    WHERE category = 'Parking'\n  )\n)"}
{"1454": "SELECT (SUM(cost) / (SELECT COUNT(event_id) FROM event WHERE type = 'Game')) * 100 AS percentage\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.type = 'Game'"}
{"1455": "SELECT budget.category, MAX(expense.cost) AS max_cost\nFROM budget\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Water, chips, cookies'\nGROUP BY budget.category\nORDER BY max_cost DESC\nLIMIT 1"}
{"1456": "SELECT member.first_name || ' ' || member.last_name AS full_name\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nGROUP BY member.first_name, member.last_name\nORDER BY SUM(expense.cost) DESC\nLIMIT 5"}
{"1457": "SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone AS contact_number\nFROM member\nJOIN expense ON expense.link_to_member = member.member_id\nGROUP BY member.member_id\nHAVING expense.cost > AVG(expense.cost)"}
{"1458": "SELECT (SUM(CASE WHEN zip_code.state = 'Maine' THEN 1 ELSE 0 END) / COUNT(CASE WHEN member.position = 'Member' THEN 1 ELSE 0 END)) - (SUM(CASE WHEN zip_code.state = 'Vermont' THEN 1 ELSE 0 END) / COUNT(CASE WHEN member.position = 'Member' THEN 1 ELSE 0 END)) AS percentage_difference FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Member' AND zip_code.state IN ('Maine', 'Vermont')"}
{"1459": "SELECT major.major_name, major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke'"}
{"1460": "SELECT member.first_name || ' ' || member.last_name AS full_name, expense.cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE expense.expense_description = 'Water, Veggie tray, supplies'"}
{"1461": "SELECT member.last_name, member.phone\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Elementary Education'"}
{"1462": "SELECT budget.category, budget.amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'January Speaker'"}
{"1463": "SELECT event_name\nFROM event\nWHERE event_id IN (\n  SELECT link_to_event\n  FROM budget\n  WHERE category = 'Food'\n)"}
{"1464": "SELECT member.first_name || ' ' || member.last_name AS full_name, income.amount AS amount_received\nFROM member\nJOIN income ON member.member_id = income.link_to_member\nWHERE strftime('%m/%d/%Y', income.date_received) = '09/09/2019'"}
{"1465": "SELECT budget.category FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Posters'"}
{"1466": "SELECT member.first_name || ' ' || member.last_name AS full_name, member.college\nFROM member\nWHERE member.position = 'Secretary'"}
{"1467": "SELECT event.event_name, SUM(budget.spent) AS total_spent\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE budget.category = 'Speaker Gifts'\nGROUP BY event.event_name"}
{"1468": "SELECT zip_code.city\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.first_name = 'Garrett' AND member.last_name = 'Girke'"}
{"1469": "SELECT member.first_name, member.last_name, member.position\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.city = 'Lincolnton' AND zip_code.state = 'North Carolina' AND zip_code.zip_code = 28092"}
{"1470": "SELECT COUNT(DISTINCT gasstations.GasStationID)\nFROM gasstations\nJOIN products ON gasstations.GasStationID = products.GasStationID\nWHERE gasstations.Country = 'CZE' AND products.Description = 'Premium gas'"}
{"1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio\nFROM customers"}
{"1472": "SELECT customers.CustomerID\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date LIKE '2012%' AND customers.Segment = 'LAM'\nORDER BY yearmonth.Consumption ASC\nLIMIT 1"}
{"1473": "SELECT AVG(Consumption) / 12\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME'\nAND yearmonth.Date BETWEEN '201301' AND '201312'"}
{"1474": "SELECT customers.CustomerID\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Currency = 'CZK'\nAND transactions_1k.Date BETWEEN '2011-01-01' AND '2011-12-31'\nGROUP BY customers.CustomerID\nORDER BY SUM(transactions_1k.Amount) DESC\nLIMIT 1"}
{"1475": "SELECT COUNT(DISTINCT c.CustomerID)\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE y.Date LIKE '2012%'\nAND c.Segment = 'KAM'\nAND y.Consumption < 30000"}
{"1476": "SELECT\n    SUM(CASE WHEN Currency = 'CZK' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS Difference_in_Consumption\nFROM\n    yearmonth\nJOIN\n    customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE\n    Date BETWEEN '201201' AND '201212'"}
{"1477": "SELECT strftime('%Y', transactions_1k.Date) AS Year, SUM(transactions_1k.Amount * transactions_1k.Price) AS TotalGasUse\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE customers.Currency = 'EUR'\nGROUP BY Year\nORDER BY TotalGasUse DESC\nLIMIT 1"}
{"1478": "SELECT Segment\nFROM yearmonth\nGROUP BY Segment\nHAVING SUM(Consumption) = (\n    SELECT MIN(total_consumption)\n    FROM (\n        SELECT SUM(Consumption) as total_consumption\n        FROM yearmonth\n        GROUP BY Segment\n    )\n);"}
{"1479": "SELECT substr(transactions_1k.Date, 1, 4) AS Year\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Currency = 'CZK' AND gasstations.Country = 'CZE'\nGROUP BY Year\nORDER BY SUM(transactions_1k.Amount) DESC\nLIMIT 1"}
{"1480": "SELECT strftime('%m', transactions_1k.Date) AS Month, SUM(yearmonth.Consumption) AS Total_Consumption\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nJOIN yearmonth ON strftime('%Y', transactions_1k.Date) = yearmonth.Date\nWHERE customers.Segment = 'SME' AND strftime('%Y', transactions_1k.Date) = '2013'\nGROUP BY Month\nORDER BY Total_Consumption DESC\nLIMIT 1;"}
{"1481": "SELECT \nROUND((SUM(CASE WHEN Segment = 'SME' AND Currency = 'CZK' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CustomerID)) - (SUM(CASE WHEN Segment = 'LAM' AND Currency = 'CZK' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CustomerID)), 2) AS Difference_SME_LAM,\nROUND((SUM(CASE WHEN Segment = 'LAM' AND Currency = 'CZK' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CustomerID)) - (SUM(CASE WHEN Segment = 'KAM' AND Currency = 'CZK' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CustomerID)), 2) AS Difference_LAM_KAM,\nROUND((SUM(CASE WHEN Segment = 'KAM' AND Currency = 'CZK' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CustomerID)) - (SUM(CASE WHEN Segment = 'SME' AND Currency = 'CZK' THEN Consumption ELSE 0 END) / COUNT(DISTINCT CustomerID)), 2) AS Difference_KAM_SME\nFROM yearmonth\nWHERE Date BETWEEN '201301' AND '201312'"}
{"1482": "SELECT Segment, ((SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Currency = 'EUR' GROUP BY Segment ORDER BY PercentageIncrease DESC LIMIT 1;"}
{"1483": "SELECT SUM(Amount) AS Total_Consumption\nFROM transactions_1k\nWHERE CustomerID = 6\nAND Date >= '201308'\nAND Date <= '201311'"}
{"1484": "SELECT\n  COUNT(*)\nFROM\n  gasstations\nWHERE\n  Country = 'CZE' AND Segment = 'Discount'\n\n-\n\nSELECT\n  COUNT(*)\nFROM\n  gasstations\nWHERE\n  Country = 'SVK' AND Segment = 'Discount'"}
{"1485": "SELECT SUM(t1.Consumption) - SUM(t2.Consumption) AS Consumption_Difference\nFROM yearmonth AS t1\nJOIN yearmonth AS t2 ON t1.CustomerID = 7 AND t2.CustomerID = 5 AND t1.Date = '201304' AND t2.Date = '201304'"}
{"1486": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Difference"}
{"1487": "SELECT customers.CustomerID\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'LAM'\nAND customers.Currency = 'EUR'\nAND yearmonth.Date = '201310'\nORDER BY yearmonth.Consumption DESC\nLIMIT 1"}
{"1488": "SELECT customers.CustomerID, customers.Segment, MAX(yearmonth.Consumption) AS Max_Consumption\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'KAM'\nGROUP BY customers.CustomerID, customers.Segment\nORDER BY Max_Consumption DESC\nLIMIT 1"}
{"1489": "SELECT SUM(transactions_1k.Amount) AS Total_Consumption\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'KAM' AND yearmonth.Date = '201305'"}
{"1490": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) AS Percentage\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'LAM' AND transactions_1k.Amount > 46.73;"}
{"1491": "SELECT Country, COUNT(*) AS TotalGasStations\nFROM gasstations\nWHERE Segment = 'Value for money'\nGROUP BY Country"}
{"1492": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM') FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'KAM' AND customers.Currency = 'EUR'"}
{"1493": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE Date = '201202' AND Consumption > 528.3) AS Percentage\nFROM yearmonth\nWHERE Date = '201202' AND Consumption > 528.3;"}
{"1494": "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') FROM gasstations WHERE Country = 'SVK' AND Segment = 'Premium'"}
{"1495": "SELECT transactions_1k.CustomerID\nFROM transactions_1k\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date = '201309'\nGROUP BY transactions_1k.CustomerID\nORDER BY SUM(transactions_1k.Amount) DESC\nLIMIT 1"}
{"1496": "SELECT customers.Segment\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nJOIN yearmonth ON transactions_1k.TransactionID = yearmonth.TransactionID\nWHERE yearmonth.Date = '201309'\nGROUP BY customers.Segment\nORDER BY SUM(transactions_1k.Amount) ASC\nLIMIT 1"}
{"1497": "SELECT customers.CustomerID\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE customers.Segment = 'SME' AND yearmonth.Date = '201206'\nORDER BY yearmonth.Consumption\nLIMIT 1"}
{"1498": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'"}
{"1499": "SELECT MAX(Consumption) AS Biggest_Monthly_Consumption\nFROM yearmonth\nWHERE CustomerID IN (\n    SELECT CustomerID\n    FROM customers\n    WHERE Currency = 'EUR'\n)"}
{"1500": "SELECT products.Description\nFROM transactions_1k\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE strftime('%Y%m', transactions_1k.Date) = '201309'"}
{"1501": "SELECT DISTINCT Country\nFROM gasstations\nWHERE GasStationID IN (\n    SELECT GasStationID\n    FROM transactions_1k\n    WHERE Date LIKE '201306%'\n)"}
{"1502": "SELECT DISTINCT gasstations.ChainID\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE transactions_1k.Currency = 'EUR'"}
{"1503": "SELECT products.Description\nFROM transactions_1k\nJOIN products ON transactions_1k.ProductID = products.ProductID\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'EUR'"}
{"1504": "SELECT AVG(Price * Amount) AS average_total_price\nFROM transactions_1k\nWHERE strftime('%Y-%m', Date) = '2012-01'"}
{"1505": "SELECT COUNT(DISTINCT customers.CustomerID)\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE customers.Currency = 'EUR' AND transactions_1k.Amount > 1000"}
{"1506": "SELECT products.Description\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nJOIN products ON transactions_1k.ProductID = products.ProductID\nWHERE gasstations.Country = 'CZE'"}
{"1507": "SELECT DISTINCT Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11;"}
{"1508": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' AND t.Price > 1000;"}
{"1509": "SELECT COUNT(*)\nFROM transactions_1k\nWHERE Date > '2012-01-01'\nAND GasStationID IN (\n  SELECT GasStationID\n  FROM gasstations\n  WHERE Country = 'CZE'\n)"}
{"1510": "SELECT AVG(Price) AS AverageTotalPrice\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'CZE'"}
{"1511": "SELECT AVG(Price) AS average_total_price\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE customers.Currency = 'EUR'"}
{"1512": "SELECT customers.CustomerID\nFROM transactions_1k\nJOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Date = '2012-08-25'\nORDER BY transactions_1k.Amount * transactions_1k.Price DESC\nLIMIT 1"}
{"1513": "SELECT gasstations.Country\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nWHERE transactions_1k.Date = '2012-08-25'\nORDER BY transactions_1k.Time ASC\nLIMIT 1;"}
{"1514": "SELECT Currency\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Time = '16:25:00' AND transactions_1k.Date = '2012-08-24'"}
{"1515": "SELECT customers.Segment\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'"}
{"1516": "SELECT COUNT(*)\nFROM transactions_1k\nWHERE Date = '2012-08-26' AND Time < '13:00:00' AND Currency = 'EUR'"}
{"1517": "SELECT Segment\nFROM customers\nWHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)"}
{"1518": "SELECT gasstations.Country\nFROM transactions_1k T1\nJOIN gasstations ON T1.GasStationID = gasstations.GasStationID\nJOIN customers ON T1.CustomerID = customers.CustomerID\nWHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'"}
{"1519": "SELECT transactions_1k.ProductID\nFROM transactions_1k\nWHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00'"}
{"1520": "SELECT SUM(transactions_1k.Amount) AS total_expenses, yearmonth.Date AS date\nFROM transactions_1k\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE transactions_1k.Price = 124.05 AND transactions_1k.Date = '2012-08-24'\nAND yearmonth.Date LIKE '2012-01%'\nGROUP BY yearmonth.Date"}
{"1521": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Time >= '08:00' AND t.Time <= '09:00' AND t.Date = '2012-08-26' AND g.Country = 'CZE'"}
{"1522": "SELECT Currency\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Amount * transactions_1k.Price = 214582.17\nAND transactions_1k.Date LIKE '201306%'\nLIMIT 1"}
{"1523": "SELECT\n  c.Country\nFROM\n  transactions_1k t\nJOIN\n  customers c ON t.CustomerID = c.CustomerID\nWHERE\n  t.CardID = 667467"}
{"1524": "SELECT customers.Country\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Price = 548.4"}
{"1525": "SELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM customers) AS percentage\nFROM customers\nWHERE Currency = 'EUR'\nAND CustomerID IN (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Date = '2012-08-25'\n)"}
{"1526": "SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS Consumption_Decrease_Rate\nFROM yearmonth AS y2012\nJOIN yearmonth AS y2013 ON y2012.CustomerID = y2013.CustomerID\nWHERE y2012.Date LIKE '2012%'\nAND y2013.Date LIKE '2013%'\nAND y2012.CustomerID = (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Price = 634.8\n    AND Date = '2012-08-25'\n)"}
{"1527": "SELECT gasstations.GasStationID\nFROM gasstations\nJOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID\nGROUP BY gasstations.GasStationID\nORDER BY SUM(transactions_1k.Amount * transactions_1k.Price) DESC\nLIMIT 1"}
{"1528": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK')\nFROM gasstations\nWHERE Segment = 'Premium' AND Country = 'SVK'"}
{"1529": "SELECT SUM(Amount) FROM transactions_1k WHERE CustomerID = 38508 AND Date = '201201';"}
{"1530": "SELECT products.Description\nFROM products\nJOIN transactions_1k ON products.ProductID = transactions_1k.ProductID\nGROUP BY products.Description\nORDER BY SUM(transactions_1k.Amount) DESC\nLIMIT 5"}
{"1531": "SELECT customers.CustomerID, customers.Currency, \n       SUM(transactions_1k.Price) AS TotalSpending, \n       AVG(transactions_1k.Price / transactions_1k.Amount) AS AveragePricePerItem \nFROM customers \nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID \nGROUP BY customers.CustomerID \nORDER BY TotalSpending DESC \nLIMIT 1;"}
{"1532": "SELECT Country\nFROM gasstations\nWHERE GasStationID = (SELECT GasStationID FROM transactions_1k WHERE ProductID = 2 ORDER BY Price DESC LIMIT 1)\nLIMIT 1;"}
{"1533": "SELECT yearmonth.Consumption AS Consumption_Status\nFROM transactions_1k\nJOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID\nWHERE transactions_1k.Price / transactions_1k.Amount > 29.00\nAND yearmonth.Date LIKE '201208%'"}
